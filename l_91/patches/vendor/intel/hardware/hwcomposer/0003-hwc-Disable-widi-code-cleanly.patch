From 235b459648a22645aae1bdf64f4b5a75c131c05a Mon Sep 17 00:00:00 2001
From: Prodyut Hazarika <prodyut.hazarika@intel.com>
Date: Sun, 29 Jun 2014 18:55:07 -0700
Subject: hwc: Disable widi code cleanly

BZ:

Hwcomposer code does not cleanly separate out Widi
code in case Widi is disabled. This results in SurfaceFlinger
crash if Widi is disabled

Change-Id: I637aba5e6b269f35270c9d6ab5d72cb17ffd6ffb
Signed-off-by: Prodyut Hazarika <prodyut.hazarika@intel.com>
---
 common/base/VsyncManager.cpp      |    2 ++
 include/IDisplayDevice.h          |    2 ++
 ips/tangier/TngDisplayContext.cpp |    4 ++++
 3 files changed, 8 insertions(+), 0 deletions(-)

diff --git a/common/base/VsyncManager.cpp b/common/base/VsyncManager.cpp
index 8a6845c..6b3b16c 100644
--- a/common/base/VsyncManager.cpp
+++ b/common/base/VsyncManager.cpp
@@ -163,6 +163,7 @@ int VsyncManager::getCandidate()
         return IDisplayDevice::DEVICE_EXTERNAL;
     }
 
+#ifdef INTEL_WIDI_MERRIFIELD
     // use vsync from virtual display when video extended mode is entered
     if (Hwcomposer::getInstance().getDisplayAnalyzer()->isVideoExtModeActive()) {
         device = mDevices.itemAt(IDisplayDevice::DEVICE_VIRTUAL);
@@ -171,6 +172,7 @@ int VsyncManager::getCandidate()
         }
         WTRACE("Could not use vsync from secondary device");
     }
+#endif
     return IDisplayDevice::DEVICE_PRIMARY;
 }
 
diff --git a/include/IDisplayDevice.h b/include/IDisplayDevice.h
index 2e43f59..002f256 100644
--- a/include/IDisplayDevice.h
+++ b/include/IDisplayDevice.h
@@ -67,7 +67,9 @@ public:
     enum {
         DEVICE_PRIMARY = HWC_DISPLAY_PRIMARY,
         DEVICE_EXTERNAL = HWC_DISPLAY_EXTERNAL,
+#ifdef INTEL_WIDI_MERRIFIELD
         DEVICE_VIRTUAL = HWC_DISPLAY_VIRTUAL,
+#endif
         DEVICE_COUNT,
     };
     enum {
diff --git a/ips/tangier/TngDisplayContext.cpp b/ips/tangier/TngDisplayContext.cpp
index b62698f..bc87caa 100644
--- a/ips/tangier/TngDisplayContext.cpp
+++ b/ips/tangier/TngDisplayContext.cpp
@@ -230,15 +230,19 @@ bool TngDisplayContext::commitEnd(size_t numDisplays, hwc_display_contents_1_t *
                  displays[i]->hwLayers[j].releaseFenceFd);
         }
 
+#ifdef INTEL_WIDI_MERRIFIELD
         // retireFence is used for SurfaceFlinger to do DispSync;
         // dup releaseFenceFd for physical displays and ignore virtual
         // display; we don't distinguish between release and retire, and all
         // physical displays are using a single releaseFence; for virtual
         // display, fencing is handled by the VirtualDisplay class
         if (i < IDisplayDevice::DEVICE_VIRTUAL) {
+#endif
             displays[i]->retireFenceFd =
                 (releaseFenceFd != -1) ? dup(releaseFenceFd) : -1;
+#ifdef INTEL_WIDI_MERRIFIELD
         }
+#endif
     }
 
     // close original release fence fd
-- 
1.7.4.1

