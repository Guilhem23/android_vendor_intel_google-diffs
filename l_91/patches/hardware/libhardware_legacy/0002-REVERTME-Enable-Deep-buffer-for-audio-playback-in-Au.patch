From 53f7cab1117d00a5e7f671a5a935a5949e2bd40f Mon Sep 17 00:00:00 2001
From: Muthukumar K <muthukumar.kandasamy@intel.com>
Date: Thu, 7 Feb 2013 20:21:38 +0530
Subject: REVERTME Enable Deep buffer for audio playback in Audio HAL

PDK NOTE:
Simply porting I68886b52944e4fb85e28999aa1b0bf8b4978c6b0 fails with a conflict
because if is missing a dependance (regarding offload).

This commit is a temporary port of the said patch.

Tracking Jira:
https://otci.intel.com/jira/browse/ADEV-194

Deep buffer playback uses a big buffer and long period size
for audio playback. Deep buffer uses 192 ms period size.

BZ: 85713
Severity: High

Change-Id: I68886b52944e4fb85e28999aa1b0bf8b4978c6b0
Orig-Change-Id: I4fcdf2e7cdad5e8616e5ccdf697ed0741597827b
Category: feature differentiation
Domain: AOSP-frameworks
Origin: internal
Upstream-Candidate: yes
Signed-off-by: Muthukumar K <muthukumar.kandasamy@intel.com>
Reviewed-on: http://android.intel.com:8080/90873
Reviewed-by: cactus <cactus@intel.com>
Reviewed-by: Gaffie, Francois <francois.gaffie@intel.com>
Reviewed-by: Benavoli, Patrick <patrick.benavoli@intel.com>
Reviewed-by: Sikkandar D, Madar <madar.sikkandar.d@intel.com>
Reviewed-by: Anand, Jerome <jerome.anand@intel.com>
Reviewed-by: Centelles, Sylvain <sylvain.centelles@intel.com>
Tested-by: Gupta, ArvindX K <arvindx.k.gupta@intel.com>
Tested-by: Dixon, CharlesX <charlesx.dixon@intel.com>
Reviewed-by: buildbot <buildbot@intel.com>
Tested-by: buildbot <buildbot@intel.com>
---
 audio/AudioDumpInterface.h                       |    1 +
 audio/AudioHardwareStub.cpp                      |    6 ++++++
 audio/AudioHardwareStub.h                        |    1 +
 include/hardware_legacy/AudioHardwareInterface.h |    5 +++++
 4 files changed, 13 insertions(+), 0 deletions(-)

diff --git a/audio/AudioDumpInterface.h b/audio/AudioDumpInterface.h
index 814ce5f..4706f2e 100644
--- a/audio/AudioDumpInterface.h
+++ b/audio/AudioDumpInterface.h
@@ -58,6 +58,7 @@ public:
     uint32_t            device() { return mDevice; }
     int                 getId()  { return mId; }
     virtual status_t    getRenderPosition(uint32_t *dspFrames);
+    virtual status_t    flush();
 
 private:
     AudioDumpInterface *mInterface;
diff --git a/audio/AudioHardwareStub.cpp b/audio/AudioHardwareStub.cpp
index 1083889..2e5ba3a 100644
--- a/audio/AudioHardwareStub.cpp
+++ b/audio/AudioHardwareStub.cpp
@@ -163,6 +163,12 @@ status_t AudioStreamOutStub::getRenderPosition(uint32_t *dspFrames)
     return INVALID_OPERATION;
 }
 
+status_t AudioStreamOutStub::flush()
+{
+    return INVALID_OPERATION;
+}
+
+
 // ----------------------------------------------------------------------------
 
 status_t AudioStreamInStub::set(int *pFormat, uint32_t *pChannels, uint32_t *pRate,
diff --git a/audio/AudioHardwareStub.h b/audio/AudioHardwareStub.h
index c5f7a80..8d2663d 100644
--- a/audio/AudioHardwareStub.h
+++ b/audio/AudioHardwareStub.h
@@ -42,6 +42,7 @@ public:
     virtual status_t    setParameters(const String8& keyValuePairs) { return NO_ERROR;}
     virtual String8     getParameters(const String8& keys);
     virtual status_t    getRenderPosition(uint32_t *dspFrames);
+    virtual status_t    flush();
 };
 
 class AudioStreamInStub : public AudioStreamIn {
diff --git a/include/hardware_legacy/AudioHardwareInterface.h b/include/hardware_legacy/AudioHardwareInterface.h
index f5b38ea..1c4dded 100644
--- a/include/hardware_legacy/AudioHardwareInterface.h
+++ b/include/hardware_legacy/AudioHardwareInterface.h
@@ -116,6 +116,11 @@ public:
      */
     virtual status_t    getNextWriteTimestamp(int64_t *timestamp);
 
+    /**
+     * Flusing the data in the pipeline. Useful for seek in deep buffer.
+     */
+    virtual status_t    flush() = 0;
+
 };
 
 /**
-- 
1.7.4.1

