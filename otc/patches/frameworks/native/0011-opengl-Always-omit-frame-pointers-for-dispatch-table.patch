From d899ecbc55365736018b4d8a2908a692cf309452 Mon Sep 17 00:00:00 2001
From: Pauli Nieminen <pauli.nieminen@linux.intel.com>
Date: Tue, 8 May 2012 20:26:28 +0300
Subject: opengl: Always omit frame pointers for dispatch table

To avoid need to guess compiler flags passed to gcc dispatch table needs
to force specific optimization that matches closed to arm naked
attribute. The optimize attribute is only supported after gcc 4.4 which
limits the attribute option to 4.4+ versions.

Change-Id: I1d34c5efff85a4aac7f6e86c2ce59cbccd1c79c1
Original-Change-Id: I544d3cbc4d3cad28441f1b923da5ecd5a6762b33
Signed-off-by: Pauli Nieminen <pauli.nieminen@linux.intel.com>
---
 opengl/libs/EGL/getProcAddress.cpp |   14 ++++++++++----
 opengl/libs/GLES2/gl2.cpp          |   14 ++++++++++----
 opengl/libs/GLES_CM/gl.cpp         |   14 ++++++++++----
 3 files changed, 30 insertions(+), 12 deletions(-)

diff --git a/opengl/libs/EGL/getProcAddress.cpp b/opengl/libs/EGL/getProcAddress.cpp
index 32ea47c..76616f1 100644
--- a/opengl/libs/EGL/getProcAddress.cpp
+++ b/opengl/libs/EGL/getProcAddress.cpp
@@ -91,13 +91,19 @@ namespace android {
 
     #elif defined(__i386__)
 
-        #define API_ENTRY(_api) __attribute__((noinline))  _api
+        /* Tell gcc 4.4+ to always omit the frame pointer to have working code
+         * independ of compiler flag
+         */
+        #define API_ENTRY(_api) __attribute__((noinline))            \
+                __attribute__((optimize("omit-frame-pointer")))      \
+                _api
 
         /* pop %%ebp only because x86 doesn't support naked functions */
-        /* 4.6+ optimizes prologue, don't need pop here */
+        /* 4.4+ supports __attribute__((optimize)) that disable function
+         * prologues
+         */
         #if __GNUC__ < 4 || \
-        (__GNUC__ == 4 && __GNUC_MINOR__ < 6 ) || \
-        !__OPTIMIZE__ || __OPTIMIZE_SIZE__
+        (__GNUC__ == 4 && __GNUC_MINOR__ < 4 )
              #define PROLOGUE  "pop %%ebp   \n"
         #else
              #define PROLOGUE  ""
diff --git a/opengl/libs/GLES2/gl2.cpp b/opengl/libs/GLES2/gl2.cpp
index 7f1d0a9..c7a98e4 100644
--- a/opengl/libs/GLES2/gl2.cpp
+++ b/opengl/libs/GLES2/gl2.cpp
@@ -96,13 +96,19 @@ using namespace android;
 
     #elif defined(__i386__)
 
-        #define API_ENTRY(_api) __attribute__((noinline)) _api
+        /* Tell gcc 4.4+ to always omit the frame pointer to have working code
+         * independ of compiler flag
+         */
+        #define API_ENTRY(_api) __attribute__((noinline))            \
+                __attribute__((optimize("omit-frame-pointer")))      \
+                _api
 
         /* pop %%ebp only because x86 doesn't support naked functions */
-        /* 4.6+ optimizes prologue, don't need pop here */
+        /* 4.4+ supports __attribute__((optimize)) that disable function
+         * prologues
+         */
         #if __GNUC__ < 4 || \
-        (__GNUC__ == 4 && __GNUC_MINOR__ < 6 ) || \
-        !__OPTIMIZE__ || __OPTIMIZE_SIZE__
+        (__GNUC__ == 4 && __GNUC_MINOR__ < 4 )
              #define PROLOGUE  "pop %%ebp   \n"
         #else
              #define PROLOGUE  ""
diff --git a/opengl/libs/GLES_CM/gl.cpp b/opengl/libs/GLES_CM/gl.cpp
index 64c7eb7..339dcc2 100644
--- a/opengl/libs/GLES_CM/gl.cpp
+++ b/opengl/libs/GLES_CM/gl.cpp
@@ -151,13 +151,19 @@ GL_API void GL_APIENTRY glWeightPointerOESBounds(GLint size, GLenum type,
 
     #elif defined(__i386__)
 
-        #define API_ENTRY(_api) __attribute__((noinline)) _api
+        /* Tell gcc 4.4+ to always omit the frame pointer to have working code
+         * independ of compiler flag
+         */
+        #define API_ENTRY(_api) __attribute__((noinline))            \
+                __attribute__((optimize("omit-frame-pointer")))      \
+                _api
 
         /* pop %%ebp only because x86 doesn't support naked functions */
-        /* 4.6+ optimizes prologue, don't need pop here */
+        /* 4.4+ supports __attribute__((optimize)) that disable function
+         * prologues
+         */
         #if __GNUC__ < 4 || \
-        (__GNUC__ == 4 && __GNUC_MINOR__ < 6 ) || \
-        !__OPTIMIZE__ || __OPTIMIZE_SIZE__
+        (__GNUC__ == 4 && __GNUC_MINOR__ < 4 )
              #define PROLOGUE  "pop %%ebp   \n"
         #else
              #define PROLOGUE  ""
-- 
1.7.4.1

