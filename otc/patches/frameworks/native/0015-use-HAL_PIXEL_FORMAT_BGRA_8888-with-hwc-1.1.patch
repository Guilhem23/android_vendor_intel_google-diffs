From 8772f3a5e3b371c970647822ba5be45330b4f605 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Tapani=20P=C3=A4lli?= <tapani.palli@intel.com>
Date: Thu, 16 May 2013 15:03:48 +0300
Subject: use HAL_PIXEL_FORMAT_BGRA_8888 with hwc 1.1
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

this is the format supported by our framebuffer

Change-Id: Ic2906f237e1141a970115a44078922c037224040
Signed-off-by: Tapani PÃ¤lli <tapani.palli@intel.com>
Acked-by: Topi Pohjolainen <topi.pohjolainen@intel.com>
---
 .../surfaceflinger/DisplayHardware/HWComposer.cpp  |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/services/surfaceflinger/DisplayHardware/HWComposer.cpp b/services/surfaceflinger/DisplayHardware/HWComposer.cpp
index a9afbe5..0e839e6 100644
--- a/services/surfaceflinger/DisplayHardware/HWComposer.cpp
+++ b/services/surfaceflinger/DisplayHardware/HWComposer.cpp
@@ -368,7 +368,7 @@ status_t HWComposer::queryDisplayProperties(int disp) {
     }
 
     // FIXME: what should we set the format to?
-    mDisplayData[disp].format = HAL_PIXEL_FORMAT_RGBA_8888;
+    mDisplayData[disp].format = HAL_PIXEL_FORMAT_BGRA_8888;
     mDisplayData[disp].connected = true;
     if (mDisplayData[disp].xdpi == 0.0f || mDisplayData[disp].ydpi == 0.0f) {
         float dpi = getDefaultDensity(h);
@@ -734,7 +734,7 @@ int HWComposer::getVisualID() const {
         // FIXME: temporary hack until HAL_PIXEL_FORMAT_IMPLEMENTATION_DEFINED
         // is supported by the implementation. we can only be in this case
         // if we have HWC 1.1
-        return HAL_PIXEL_FORMAT_RGBA_8888;
+        return HAL_PIXEL_FORMAT_BGRA_8888;
         //return HAL_PIXEL_FORMAT_IMPLEMENTATION_DEFINED;
     } else {
         return mFbDev->format;
-- 
1.7.4.1

