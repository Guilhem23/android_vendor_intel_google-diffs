From a2afda47ecd6a8f5db650403b46d55ddd1cc033c Mon Sep 17 00:00:00 2001
From: Pavel Chupin <pavel.v.chupin@intel.com>
Date: Mon, 26 Mar 2012 17:38:19 +0400
Subject: Fix assembly prologue for 4.6+ compilation.

Compilers starting from 4.6 optimize functions prologue. In some cases
like this one it doesn't generate "push %ebp; mov %esp,%ebp" in prologue
just like with naked attribute which is not supported on x86. Therefore
"pop %ebp" here should not be added.

Change-Id: Iec19c13c241dae7ac76546ff1cbdf4014746070f
Original-Change-Id: Ie5c49452ce55322e7c37ab479eb3df503180d3a8
Signed-off-by: Pavel Chupin <pavel.v.chupin@intel.com>
Signed-off-by: Sean V Kelley <sean.v.kelley@linux.intel.com>
---
 opengl/libs/EGL/getProcAddress.cpp |   11 ++++++++++-
 opengl/libs/GLES2/gl2.cpp          |   11 ++++++++++-
 opengl/libs/GLES_CM/gl.cpp         |   11 ++++++++++-
 3 files changed, 30 insertions(+), 3 deletions(-)

diff --git a/opengl/libs/EGL/getProcAddress.cpp b/opengl/libs/EGL/getProcAddress.cpp
index 8a7b8ac..32ea47c 100644
--- a/opengl/libs/EGL/getProcAddress.cpp
+++ b/opengl/libs/EGL/getProcAddress.cpp
@@ -94,9 +94,18 @@ namespace android {
         #define API_ENTRY(_api) __attribute__((noinline))  _api
 
         /* pop %%ebp only because x86 doesn't support naked functions */
+        /* 4.6+ optimizes prologue, don't need pop here */
+        #if __GNUC__ < 4 || \
+        (__GNUC__ == 4 && __GNUC_MINOR__ < 6 ) || \
+        !__OPTIMIZE__ || __OPTIMIZE_SIZE__
+             #define PROLOGUE  "pop %%ebp   \n"
+        #else
+             #define PROLOGUE  ""
+        #endif
+
         #define CALL_GL_EXTENSION_API(_api)                         \
             asm volatile(                                           \
-                "pop %%ebp                  \n"                     \
+                PROLOGUE                                            \
                 "movl %%gs:0, %%ecx         \n"                     \
                 "movl %c[tls](%%ecx), %%eax \n"                     \
                 "test %%eax, %%eax          \n"                     \
diff --git a/opengl/libs/GLES2/gl2.cpp b/opengl/libs/GLES2/gl2.cpp
index 3eb1ab0..7f1d0a9 100644
--- a/opengl/libs/GLES2/gl2.cpp
+++ b/opengl/libs/GLES2/gl2.cpp
@@ -99,9 +99,18 @@ using namespace android;
         #define API_ENTRY(_api) __attribute__((noinline)) _api
 
         /* pop %%ebp only because x86 doesn't support naked functions */
+        /* 4.6+ optimizes prologue, don't need pop here */
+        #if __GNUC__ < 4 || \
+        (__GNUC__ == 4 && __GNUC_MINOR__ < 6 ) || \
+        !__OPTIMIZE__ || __OPTIMIZE_SIZE__
+             #define PROLOGUE  "pop %%ebp   \n"
+        #else
+             #define PROLOGUE  ""
+        #endif
+
         #define CALL_GL_API(_api, ...)                              \
             asm volatile(                                           \
-                "pop %%ebp                  \n"                     \
+                PROLOGUE                                            \
                 "movl %%gs:0, %%ecx         \n"                     \
                 "movl %c[tls](%%ecx), %%eax \n"                     \
                 "test %%eax, %%eax          \n"                     \
diff --git a/opengl/libs/GLES_CM/gl.cpp b/opengl/libs/GLES_CM/gl.cpp
index 4eac9a4..64c7eb7 100644
--- a/opengl/libs/GLES_CM/gl.cpp
+++ b/opengl/libs/GLES_CM/gl.cpp
@@ -154,9 +154,18 @@ GL_API void GL_APIENTRY glWeightPointerOESBounds(GLint size, GLenum type,
         #define API_ENTRY(_api) __attribute__((noinline)) _api
 
         /* pop %%ebp only because x86 doesn't support naked functions */
+        /* 4.6+ optimizes prologue, don't need pop here */
+        #if __GNUC__ < 4 || \
+        (__GNUC__ == 4 && __GNUC_MINOR__ < 6 ) || \
+        !__OPTIMIZE__ || __OPTIMIZE_SIZE__
+             #define PROLOGUE  "pop %%ebp   \n"
+        #else
+             #define PROLOGUE  ""
+        #endif
+
         #define CALL_GL_API(_api, ...)                              \
             asm volatile(                                           \
-                "pop %%ebp                  \n"                     \
+                PROLOGUE                                            \
                 "movl %%gs:0, %%ecx         \n"                     \
                 "movl %c[tls](%%ecx), %%eax \n"                     \
                 "test %%eax, %%eax          \n"                     \
-- 
1.7.4.1

