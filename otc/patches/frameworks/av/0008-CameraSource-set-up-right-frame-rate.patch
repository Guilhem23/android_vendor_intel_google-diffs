From c88f44748207bfda4b055aa6d056c1dcbb422653 Mon Sep 17 00:00:00 2001
From: Hua Wang <Hua.Wang@windriver.com>
Date: Fri, 18 Jan 2013 18:51:13 +0800
Subject: CameraSource: set up right frame rate

If camera recorder uses HW codec, the capabilities of the codec
are from media_profile.xml; If using SW codec, it is invisible
to the applications, In other words, the applications won't be
able to use the codec or query the capabilities of the codec
at all, it only gives some ranges. StagefrightRecorder will
use default parameters to configure camera, as for framerate,
it should be from camera HAL feedback.

Issue:AXIA-1446
Change-Id: I77bf41239a19d26e2da1c28258288fdaa1c98297
Signed-off-by: Hua Wang <Hua.Wang@windriver.com>
---
 .../libmediaplayerservice/StagefrightRecorder.cpp  |    4 +++-
 media/libmediaplayerservice/StagefrightRecorder.h  |    1 +
 media/libstagefright/CameraSource.cpp              |   10 ++++++++++
 3 files changed, 14 insertions(+), 1 deletions(-)

diff --git a/media/libmediaplayerservice/StagefrightRecorder.cpp b/media/libmediaplayerservice/StagefrightRecorder.cpp
index 095d5ca..b2cf810 100644
--- a/media/libmediaplayerservice/StagefrightRecorder.cpp
+++ b/media/libmediaplayerservice/StagefrightRecorder.cpp
@@ -204,6 +204,7 @@ status_t StagefrightRecorder::setVideoFrameRate(int frames_per_second) {
 
     // Additional check on the frame rate will be performed later
     mFrameRate = frames_per_second;
+    mUserSetupFrameRate = true;
 
     return OK;
 }
@@ -1345,7 +1346,7 @@ status_t StagefrightRecorder::setupCameraSource(
 
     // When frame rate is not set, the actual frame rate will be set to
     // the current frame rate being used.
-    if (mFrameRate == -1) {
+    if (mFrameRate == -1 || !mUserSetupFrameRate) {
         int32_t frameRate = 0;
         CHECK ((*cameraSource)->getFormat()->findInt32(
                     kKeyFrameRate, &frameRate));
@@ -1685,6 +1686,7 @@ status_t StagefrightRecorder::reset() {
     mCameraSourceTimeLapse = NULL;
     mIsMetaDataStoredInVideoBuffers = false;
     mEncoderProfiles = MediaProfiles::getInstance();
+    mUserSetupFrameRate = false;
     mRotationDegrees = 0;
     mLatitudex10000 = -3600000;
     mLongitudex10000 = -3600000;
diff --git a/media/libmediaplayerservice/StagefrightRecorder.h b/media/libmediaplayerservice/StagefrightRecorder.h
index c864207..7187598 100644
--- a/media/libmediaplayerservice/StagefrightRecorder.h
+++ b/media/libmediaplayerservice/StagefrightRecorder.h
@@ -111,6 +111,7 @@ private:
     int64_t mTimeBetweenTimeLapseFrameCaptureUs;
     sp<CameraSourceTimeLapse> mCameraSourceTimeLapse;
 
+    bool mUserSetupFrameRate;
 
     String8 mParams;
 
diff --git a/media/libstagefright/CameraSource.cpp b/media/libstagefright/CameraSource.cpp
index 5a26b06..19a6af3 100644
--- a/media/libstagefright/CameraSource.cpp
+++ b/media/libstagefright/CameraSource.cpp
@@ -502,6 +502,7 @@ status_t CameraSource::initWithCameraAccess(
         bool storeMetaDataInVideoBuffers) {
     ALOGV("initWithCameraAccess");
     status_t err = OK;
+    char buffer[4];
 
     if ((err = isCameraAvailable(camera, proxy, cameraId,
             clientName, clientUid)) != OK) {
@@ -512,6 +513,15 @@ status_t CameraSource::initWithCameraAccess(
     if ((err = isCameraColorFormatSupported(params)) != OK) {
         return err;
     }
+    const char* supportedFrameRates =
+            params.get(CameraParameters::KEY_SUPPORTED_PREVIEW_FRAME_RATES);
+    CHECK(supportedFrameRates != NULL);
+    snprintf(buffer, 4, "%d", frameRate);
+    if (strstr(supportedFrameRates, buffer) == NULL) {
+        frameRate = atoi(supportedFrameRates);
+    } else {
+        frameRate = params.getPreviewFrameRate();
+    }
 
     // Set the camera to use the requested video frame size
     // and/or frame rate.
-- 
1.7.4.1

