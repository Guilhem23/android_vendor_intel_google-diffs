From 833472c5c94eda2645687c42caa7a7d2ba286be1 Mon Sep 17 00:00:00 2001
From: Gopala Krishna Murala <gopala.krishna.murala@intel.com>
Date: Mon, 12 Dec 2011 16:42:13 +0530
Subject: Implementing missing NL commands in supplicant

Implements the missing command interface functions in
supplicant. MACADDR, RSSI and LINKSPEED commands are passed
down to supplicant from Android framework but supplicant did
not have proper handlers for these.

Hence this will resolve the no MAC address display in GUI.

Issue: AXIA-82
Change-Id: Ifa711b69012c20e4e86ec15041f3c7b69f76d543
Signed-off-by: Daniel Leung <daniel.leung@intel.com>
---
 src/drivers/driver_nl80211.c |   51 ++++++++++++++++++++++++++++++++++++++++++
 1 files changed, 51 insertions(+), 0 deletions(-)

diff --git a/src/drivers/driver_nl80211.c b/src/drivers/driver_nl80211.c
index c59d5bf..81cb87f 100644
--- a/src/drivers/driver_nl80211.c
+++ b/src/drivers/driver_nl80211.c
@@ -7361,6 +7361,54 @@ nla_put_failure:
 
 }
 
+#ifdef ANDROID
+static int nl80211_priv_driver_cmd(void *priv, char *cmd, char *buf, size_t buf_len)
+{
+	struct i802_bss *bss = priv;
+	struct wpa_driver_nl80211_data *drv = bss->drv;
+	struct wpa_signal_info sig;
+	int ret = 0, flags, rssi, linkspeed;
+	u8 macaddr[ETH_ALEN] = {};
+
+	if (os_strcasecmp(cmd, "MACADDR") == 0) {
+		ret = linux_get_ifhwaddr(drv->global->ioctl_sock, bss->ifname, macaddr);
+		if (!ret) {
+			ret = os_snprintf(buf, buf_len,
+					  "Macaddr = " MACSTR "\n", MAC2STR(macaddr));
+		}
+	} else if ((os_strcasecmp(cmd, "RSSI") == 0) ||
+		   (os_strcasecmp(cmd, "RSSI-APPROX") == 0)) {
+		if (!drv->associated) {
+			ret = -1;
+			goto priv_cmd_end;
+		}
+
+		ret = nl80211_get_link_signal(drv, &sig);
+		if (ret == 0) {
+			rssi = sig.current_signal;
+			ret = os_snprintf(buf, buf_len, "%s rssi %d\n", drv->ssid, rssi);
+		}
+	} else if (os_strcasecmp(cmd, "LINKSPEED") == 0) {
+		if (!drv->associated) {
+			ret = -1;
+			goto priv_cmd_end;
+		}
+
+		ret = nl80211_get_link_signal(drv, &sig);
+		if (ret == 0) {
+			linkspeed = sig.current_txrate / 1000;
+			ret = os_snprintf(buf, buf_len, "LinkSpeed %d\n", linkspeed);
+		}
+	} else {
+		wpa_printf(MSG_ERROR, "Unsupported command: %s", cmd);
+		ret = -1;
+	}
+
+priv_cmd_end:
+	return ret;
+}
+#endif /* ANDROID */
+
 
 static int wpa_driver_nl80211_connect(
 	struct wpa_driver_nl80211_data *drv,
@@ -9919,4 +9967,7 @@ const struct wpa_driver_ops wpa_driver_nl80211_ops = {
 #ifdef ANDROID
 	.driver_cmd = wpa_driver_nl80211_driver_cmd,
 #endif
+#ifdef ANDROID
+	.driver_cmd = nl80211_priv_driver_cmd,
+#endif /* ANDROID */
 };
-- 
1.7.4.1

