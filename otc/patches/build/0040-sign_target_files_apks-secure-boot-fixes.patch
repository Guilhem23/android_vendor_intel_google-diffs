From 5000fdd4d2efa46886e3fa62824f0b3275b07cc7 Mon Sep 17 00:00:00 2001
From: Andrew Boie <andrew.p.boie@intel.com>
Date: Sat, 18 May 2013 15:07:53 -0700
Subject: sign_target_files_apks: secure boot fixes

() mkbootimg_args wasn't being propagated correctly
() fixed module signing problem
() in some cases the code here that generates the boot image
   binaries was resulting in corrupted images, fixed

Change-Id: Ic7d7e2e86de44f0faff1a45fdfd7cdcef7609303
Signed-off-by: Andrew Boie <andrew.p.boie@intel.com>
---
 tools/releasetools/sign_target_files_apks |   57 +++++++++++++----------------
 1 files changed, 26 insertions(+), 31 deletions(-)

diff --git a/tools/releasetools/sign_target_files_apks b/tools/releasetools/sign_target_files_apks
index 9735e79..af492f9 100755
--- a/tools/releasetools/sign_target_files_apks
+++ b/tools/releasetools/sign_target_files_apks
@@ -121,6 +121,7 @@ OPTIONS.kmodule_key = None
 OPTIONS.key_map = {}
 OPTIONS.replace_ota_keys = False
 OPTIONS.tag_changes = ("-test-keys", "-dev-keys", "+release-keys")
+OPTIONS.mkbootimg_args = None
 
 def GetApkCerts(tf_zip):
   certmap = common.ReadApkCerts(tf_zip)
@@ -285,31 +286,28 @@ def BinaryCertReplace(data, cert_discard_data, cert_replace_prefix):
   return output
 
 
-def GenerateBootimage(zipfile, misc_info, name):
-  tmpdir = tempfile.mkdtemp()
+def BuildBootimages(built_bootimages, filename):
+  if not built_bootimages:
+    return
 
-  try:
-    name = name.lower()
-    dirname = name.upper()
-    print "generating " + name + " image..."
-
-    for f in zipfile.namelist():
-      if not (f.startswith(dirname) or f.startswith("META")):
-        continue
-      if f.endswith("/"):
-        os.makedirs(os.path.join(tmpdir, f))
-      else:
-        zipfile.extract(f, tmpdir)
-    data = common.BuildBootableImage(
-            os.path.join(tmpdir, dirname),
-            os.path.join(tmpdir, "META/" + name + "_filesystem_config.txt"),
-            misc_info)
-  finally:
-    shutil.rmtree(tmpdir)
+  tmpdir, output_zip = common.UnzipTemp(filename)
+  misc_info = common.LoadInfoDict(output_zip)
+  if OPTIONS.mkbootimg_args:
+    misc_info["mkbootimg_args"] = OPTIONS.mkbootimg_args
+  output_zip.close()
 
-  if not data:
-    raise Exception("Unable to create bootable image for " + name)
-  zipfile.writestr("BOOTABLE_IMAGES/" + name + ".img", data)
+  images = {}
+  for b in built_bootimages:
+    dirname = b.upper()
+    imgname = b.lower()
+    images[imgname] = common.BuildBootableImage(
+          os.path.join(tmpdir, dirname),
+          os.path.join(tmpdir, "META/" + imgname + "_filesystem_config.txt"),
+          misc_info)
+  output_zip = zipfile.ZipFile(filename, "a")
+  for name, data in images.iteritems():
+    output_zip.writestr("BOOTABLE_IMAGES/" + name + ".img", data)
+  output_zip.close()
 
 
 def SignFiles(input_tf_zip, output_tf_zip, apk_key_map,
@@ -356,7 +354,7 @@ def SignFiles(input_tf_zip, output_tf_zip, apk_key_map,
     elif kmodule_key and info.filename.endswith(".ko"):
       name = os.path.basename(info.filename)
       print "    signing: %-*s (%s)" % (maxsize, name, kmodule_key)
-      signed_data = SignKmodule(data, kmodule_key, key_passwords[key])
+      signed_data = SignKmodule(data, kmodule_key, key_passwords[kmodule_key])
       output_tf_zip.writestr(out_info, signed_data)
     elif info.filename in ("SYSTEM/build.prop",
                            "RECOVERY/RAMDISK/default.prop"):
@@ -521,7 +519,6 @@ def main(argv):
 
   key_mapping_options = []
   built_bootimages = []
-  mkbootimg_args = None
 
   def option_handler(o, a):
     if o in ("-e", "--extra_apks"):
@@ -548,7 +545,7 @@ def main(argv):
     elif o in ("-o", "--replace_ota_keys"):
       OPTIONS.replace_ota_keys = True
     elif o in ("-M", "--mkbootimg_args"):
-      mkbootimg_args = a
+      OPTIONS.mkbootimg_args = a
     elif o in ("-B", "--binary_bootimages"):
       built_bootimages.extend(a.split(","))
     elif o in ("-t", "--tag_changes"):
@@ -585,8 +582,6 @@ def main(argv):
   output_zip = zipfile.ZipFile(args[1], "w")
 
   misc_info = common.LoadInfoDict(input_zip)
-  if mkbootimg_args:
-    misc_info["mkbootimg_args"] = mkbootimg_args
 
   BuildKeyMap(misc_info, key_mapping_options)
 
@@ -607,11 +602,9 @@ def main(argv):
   if OPTIONS.replace_ota_keys:
     ReplaceOtaKeys(input_zip, output_zip, misc_info)
 
-  for b in built_bootimages:
-    GenerateBootimage(output_zip, misc_info, b)
-
   input_zip.close()
   output_zip.close()
+  BuildBootimages(built_bootimages, args[1])
 
   print "done."
 
@@ -624,3 +617,5 @@ if __name__ == '__main__':
     print "   ERROR: %s" % (e,)
     print
     sys.exit(1)
+  finally:
+    common.Cleanup()
-- 
1.7.4.1

