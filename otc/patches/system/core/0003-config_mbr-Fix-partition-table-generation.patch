From a2f28e7e174798db28e9418f473d6ec967174f94 Mon Sep 17 00:00:00 2001
From: Andrew Boie <andrew.p.boie@intel.com>
Date: Wed, 20 Apr 2011 14:02:30 -0700
Subject: config_mbr: Fix partition table generation

config_mbr() doesn't produce a valid partition table if there was not
one to begin with; the magic sequence 0xAA55 is not written to the last
2 bytes of the MBR. If this MBR signature is missing, the kernel will
refuse to inspect the partition table.

We add a step to config_mbr which blanks out bytes 440-512 of the MBR
and properly writes the MBR signature before doing anything else.
This fixes a problem where diskinstaller had to be run twice if there
was no partition table present on the target volume.

Change-Id: I4a8d173bef231d10e8fbcd0d8aecf54d1cf92474
Signed-off-by: Andrew Boie <andrew.p.boie@intel.com>
---
 libdiskconfig/config_mbr.c |   23 +++++++++++++++++++++++
 1 files changed, 23 insertions(+), 0 deletions(-)

diff --git a/libdiskconfig/config_mbr.c b/libdiskconfig/config_mbr.c
index d59fb2a..3bf9bb2 100644
--- a/libdiskconfig/config_mbr.c
+++ b/libdiskconfig/config_mbr.c
@@ -207,6 +207,21 @@ fail:
     return NULL;
 }
 
+static struct write_list *
+mk_empty_ptable(void)
+{
+    struct write_list *wr;
+    static const short int magic = 0xAA55;
+
+    wr = alloc_wl(72);
+    if (!wr)
+        return NULL;
+    memset(wr->data, 0, 70);
+    memcpy(wr->data + 70, &magic, sizeof(magic));
+    wr->offset = 440;
+    return wr;
+}
+
 
 struct write_list *
 config_mbr(struct disk_info *dinfo)
@@ -276,6 +291,14 @@ config_mbr(struct disk_info *dinfo)
         wlist_add(&wr_list, temp_wr);
     }
 
+    /* Prepend to the write list an empty partition table to start with */
+    if ((temp_wr = mk_empty_ptable()))
+        wlist_add(&wr_list, temp_wr);
+    else {
+        ALOGE("Can't create base partition table");
+        goto fail;
+    }
+
     return wr_list;
 
 nospace:
-- 
1.7.4.1

