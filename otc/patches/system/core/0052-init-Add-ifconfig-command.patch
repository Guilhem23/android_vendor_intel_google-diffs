From 69f521ec3386eec3c2c8b72828551acf74936844 Mon Sep 17 00:00:00 2001
From: Constantin Musca <constantin.musca@intel.com>
Date: Tue, 28 May 2013 11:47:14 +0300
Subject: init: Add ifconfig command

Usage: ifconfig <interface> <ip_address> <netmask>
This command is needed for configuring an interface when using
a minimal rootfs.

For: AXIA-1950
Change-Id: Ieadaf551ae41b67c2906abac2c580ea798d0d131
Signed-off-by: Constantin Musca <constantin.musca@intel.com>
---
 init/builtins.c    |   47 +++++++++++++++++++++++++++++++++++++++++++++++
 init/init_parser.c |    1 +
 init/keywords.h    |    2 ++
 3 files changed, 50 insertions(+), 0 deletions(-)

diff --git a/init/builtins.c b/init/builtins.c
index 718bd1c..c737149 100644
--- a/init/builtins.c
+++ b/init/builtins.c
@@ -378,6 +378,53 @@ int do_hostname(int nargs, char **args)
     return write_file("/proc/sys/kernel/hostname", args[1]);
 }
 
+int do_ifconfig(int nargs, char **args)
+{
+    struct ifreq ifr;
+    int sockfd, rc = 0;
+    struct sockaddr_in *addr;
+
+    sockfd = socket(AF_INET, SOCK_DGRAM, 0);
+    if (sockfd < 0) {
+        return -1;
+    }
+
+    /* Initialize ifreq structure */
+    memset(&ifr, 0, sizeof(struct ifreq));
+    ifr.ifr_addr.sa_family = AF_INET;
+    addr = (struct sockaddr_in *)&ifr.ifr_addr;
+
+    /* Set interface */
+    strncpy(ifr.ifr_name, args[1], IFNAMSIZ);
+
+    /* Set IP address */
+    if (inet_pton(AF_INET, args[2], &addr->sin_addr) <= 0) {
+        rc = -1;
+        ERROR("ifconfig: Invalid IP address");
+        goto done;
+    }
+    rc = ioctl(sockfd, SIOCSIFADDR, &ifr);
+    if (rc) {
+        ERROR("ifconfig: Cannot set address");
+        goto done;
+    }
+
+    /* Set netmask */
+    if (inet_pton(AF_INET, args[3], &addr->sin_addr) <= 0) {
+        rc = -1;
+        ERROR("ifconfig: Invalid netmask");
+        goto done;
+    }
+    rc = ioctl(sockfd, SIOCSIFNETMASK, &ifr);
+    if (rc) {
+        ERROR("ifconfig: Cannot set netmask");
+    }
+
+done:
+    close(sockfd);
+    return rc;
+}
+
 int do_ifup(int nargs, char **args)
 {
     return __ifupdown(args[1], 1);
diff --git a/init/init_parser.c b/init/init_parser.c
index 4cc1ac5..3aa0968 100644
--- a/init/init_parser.c
+++ b/init/init_parser.c
@@ -112,6 +112,7 @@ int lookup_keyword(const char *s)
         break;
     case 'i':
         if (!strcmp(s, "oprio")) return K_ioprio;
+        if (!strcmp(s, "fconfig")) return K_ifconfig;
         if (!strcmp(s, "fup")) return K_ifup;
         if (!strcmp(s, "nsmod")) return K_insmod;
         if (!strcmp(s, "mport")) return K_import;
diff --git a/init/keywords.h b/init/keywords.h
index ad4a280..b73640e 100644
--- a/init/keywords.h
+++ b/init/keywords.h
@@ -10,6 +10,7 @@ int do_domainname(int nargs, char **args);
 int do_exec(int nargs, char **args);
 int do_export(int nargs, char **args);
 int do_hostname(int nargs, char **args);
+int do_ifconfig(int nargs, char **args);
 int do_ifup(int nargs, char **args);
 int do_insmod(int nargs, char **args);
 int do_mkdir(int nargs, char **args);
@@ -59,6 +60,7 @@ enum {
     KEYWORD(export,      COMMAND, 2, do_export)
     KEYWORD(group,       OPTION,  0, 0)
     KEYWORD(hostname,    COMMAND, 1, do_hostname)
+    KEYWORD(ifconfig,    COMMAND, 3, do_ifconfig)
     KEYWORD(ifup,        COMMAND, 1, do_ifup)
     KEYWORD(insmod,      COMMAND, 1, do_insmod)
     KEYWORD(import,      SECTION, 1, 0)
-- 
1.7.4.1

