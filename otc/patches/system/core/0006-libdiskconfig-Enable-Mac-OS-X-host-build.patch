From 9d2e21f8a052411365045730736602fd04ebef71 Mon Sep 17 00:00:00 2001
From: Andrew P. Boie <andrew.p.boie@intel.com>
Date: Fri, 31 Aug 2012 12:05:55 -0700
Subject: libdiskconfig: Enable Mac OS X host build

Change-Id: Iacc7d5463364d0cd15ca9fabaa58ad05857d9e78
Signed-off-by: Andrew P. Boie <andrew.p.boie@intel.com>
---
 include/diskconfig/diskconfig.h |    5 +++++
 libdiskconfig/Android.mk        |    4 +---
 libdiskconfig/diskconfig.c      |   18 +++++++++++++++++-
 3 files changed, 23 insertions(+), 4 deletions(-)

diff --git a/include/diskconfig/diskconfig.h b/include/diskconfig/diskconfig.h
index d45b99e..de311b7 100644
--- a/include/diskconfig/diskconfig.h
+++ b/include/diskconfig/diskconfig.h
@@ -21,6 +21,11 @@
 #include <stdint.h>
 #include <sys/types.h>
 
+#ifdef __APPLE__
+typedef int64_t loff_t;
+#define lseek64 lseek
+#endif
+
 #ifdef __cplusplus
 extern "C" {
 #endif
diff --git a/libdiskconfig/Android.mk b/libdiskconfig/Android.mk
index b5d83fa..5dec688 100644
--- a/libdiskconfig/Android.mk
+++ b/libdiskconfig/Android.mk
@@ -14,11 +14,9 @@ LOCAL_MODULE_TAGS := optional
 LOCAL_SYSTEM_SHARED_LIBRARIES := libcutils liblog libc
 include $(BUILD_SHARED_LIBRARY)
 
-ifeq ($(HOST_OS),linux)
 include $(CLEAR_VARS)
 LOCAL_SRC_FILES := $(commonSources)
 LOCAL_MODULE := libdiskconfig_host
 LOCAL_MODULE_TAGS := optional
-LOCAL_CFLAGS := -O2 -g -W -Wall -Werror -D_LARGEFILE64_SOURCE
+LOCAL_CFLAGS := -O2 -g -W -Wall -Werror -D_LARGEFILE64_SOURCE -DHOST_BUILD
 include $(BUILD_HOST_STATIC_LIBRARY)
-endif # HOST_OS == linux
diff --git a/libdiskconfig/diskconfig.c b/libdiskconfig/diskconfig.c
index 50370f5..5e9f172 100644
--- a/libdiskconfig/diskconfig.c
+++ b/libdiskconfig/diskconfig.c
@@ -26,7 +26,9 @@
 #include <sys/ioctl.h>
 #include <sys/stat.h>
 
+#ifndef HOST_BUILD
 #include <linux/fs.h>
+#endif
 
 #include <cutils/config_utils.h>
 #include <cutils/log.h>
@@ -235,6 +237,7 @@ fail:
     return NULL;
 }
 
+#ifndef HOST_BUILD
 static int
 sync_ptable(int fd)
 {
@@ -255,6 +258,13 @@ sync_ptable(int fd)
 
     return 0;
 }
+#else
+static int sync_ptable(int fd)
+{
+    (void)fd;
+    return 0;
+}
+#endif
 
 /* This function verifies that the disk info provided is valid, and if so,
  * returns an open file descriptor.
@@ -271,7 +281,6 @@ static int
 validate(struct disk_info *dinfo)
 {
     int fd;
-    int sect_sz;
     uint64_t disk_size;
     uint64_t total_size;
     int cnt;
@@ -297,6 +306,12 @@ validate(struct disk_info *dinfo)
     /* Verify that we can operate on the device that was requested.
      * We presently only support block devices and regular file images. */
     if (S_ISBLK(stat.st_mode)) {
+#ifdef HOST_BUILD
+        ALOGE("Block device manipulation on host forbidden");
+        goto fail;
+#else
+        int sect_sz;
+
         /* get the sector size and make sure we agree */
         if (ioctl(fd, BLKSSZGET, &sect_sz) < 0) {
             ALOGE("Cannot get sector size (errno=%d)", errno);
@@ -318,6 +333,7 @@ validate(struct disk_info *dinfo)
             dinfo->num_lba = (uint32_t)(disk_size / (uint64_t)dinfo->sect_size);
         } else
             disk_size = (uint64_t)dinfo->num_lba * (uint64_t)dinfo->sect_size;
+#endif
     } else if (S_ISREG(stat.st_mode)) {
         ALOGI("Requesting operation on a regular file, not block device.");
         if (!dinfo->sect_size) {
-- 
1.7.4.1

