From a9346503b882600eadb9488cd9a013c4f838b2cf Mon Sep 17 00:00:00 2001
From: Thomas Daniel <thomas.daniel@intel.com>
Date: Mon, 7 Jan 2013 17:02:31 +0000
Subject: adbd: set sent file ownership per android fs config table

do_send() uses fs_config() to retrieve mode, user and group for a sent file but
handle_send_file() only gets passed the mode.  User and group are discarded.
This causes problems as it means any files updated with adb sync will have their
owner set to root.

For example, the file "/system/etc/dbus.conf" should be owned by "bluetooth" as
specified in android_filesystem_config.h, and its permissions should be read for
user and group but nothing for other.  Using adb sync to send this file means
that the owner is set to root, and no access permissions for others.  This means
that when a process running as "bluetooth" tries to access the file it fails,
resulting in a boot failure.

This change adds a new wrapper function adb_chown() which calls chown() to match
the existing pattern for wrapping file I/O functions.  This adb_chown() is now
called in do_send() to correctly set the owner and group as specified in the
fs_config table.

Change-Id: I37661273780346a6a868e58d9069171052e81e34
---
 adb/file_sync_service.c |    3 +++
 adb/sysdeps.h           |    9 ++++++++-
 2 files changed, 11 insertions(+), 1 deletions(-)

diff --git a/adb/file_sync_service.c b/adb/file_sync_service.c
index 429b58f..2c8ba9e 100644
--- a/adb/file_sync_service.c
+++ b/adb/file_sync_service.c
@@ -315,6 +315,9 @@ static int do_send(int s, char *path, char *buffer)
 
         fs_config(tmp, 0, &uid, &gid, &mode);
         ret = handle_send_file(s, path, mode, buffer);
+        if (ret != -1) {
+            ret = adb_chown(path, uid, gid);
+        }
     }
 
     return ret;
diff --git a/adb/sysdeps.h b/adb/sysdeps.h
index 0252ef3..50e3cbe 100644
--- a/adb/sysdeps.h
+++ b/adb/sysdeps.h
@@ -105,7 +105,7 @@ static __inline__  int    adb_unlink(const char*  path)
 
 static __inline__ int  adb_mkdir(const char*  path, int mode)
 {
-	return _mkdir(path);
+    return _mkdir(path);
 }
 #undef   mkdir
 #define  mkdir  ___xxx_mkdir
@@ -427,6 +427,13 @@ static __inline__ int  adb_socket_accept(int  serverfd, struct sockaddr*  addr,
 #undef   accept
 #define  accept  ___xxx_accept
 
+static __inline__ int adb_chown(const char* path, uid_t uid, gid_t gid)
+{
+    return chown(path, uid, gid);
+}
+#undef   chown
+#define  chown  ___xxx_chown
+
 #define  unix_read   adb_read
 #define  unix_write  adb_write
 #define  unix_close  adb_close
-- 
1.7.4.1

