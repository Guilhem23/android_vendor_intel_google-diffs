From 2055abe3b77af318c34c1b9445216faf20bd6c29 Mon Sep 17 00:00:00 2001
From: Andrew Boie <andrew.p.boie@intel.com>
Date: Fri, 16 Nov 2012 14:51:19 -0800
Subject: init: create by-name device links for marked GPT partitions

Create device node symlinks by name if the uevent for a block
device has a name in it, and the name passed in matches the
prefix for the installation ID. This prevents collisions with
multiple Android installations on the same system. The created
symlinks do not have the prefix in them.

If the installation ID isn't set (through ro.boot.install_id)
this mechanism doesn't do anything. There is a possibility that
specially crafted removable storage could alias internal storage
through this mechanism, so locked-down devices won't want to use
this.

Change-Id: I04782691d4e5ff0db6f68d8d9345a8585cfe5f86
Signed-off-by: Andrew Boie <andrew.p.boie@intel.com>
---
 init/devices.c |   25 +++++++++++++++++++++++++
 1 files changed, 25 insertions(+), 0 deletions(-)

diff --git a/init/devices.c b/init/devices.c
index 89a1233..c4334c1 100644
--- a/init/devices.c
+++ b/init/devices.c
@@ -495,6 +495,29 @@ static char **parse_platform_block_device(struct uevent *uevent)
     return links;
 }
 
+static char **parse_gpt_block_device(struct uevent *uevent)
+{
+    char **links = calloc(2, sizeof(char *));
+
+    if (!links)
+        return NULL;
+
+    if (uevent->partition_name) {
+        char prefix[PROP_VALUE_MAX];
+        int len;
+        len = __system_property_get("ro.boot.install_id", prefix);
+        if (!len || strncmp(prefix, uevent->partition_name, len))
+            return NULL;
+        if (asprintf(&links[0], "/dev/block/by-name/%s",
+                    uevent->partition_name + len) < 0) {
+            free(links);
+            return NULL;
+        }
+    }
+    return links;
+}
+
+
 static void handle_device(const char *action, const char *devpath,
         const char *path, int block, int major, int minor, char **links)
 {
@@ -570,6 +593,8 @@ static void handle_block_device_event(struct uevent *uevent)
 
     if (!strncmp(uevent->path, "/devices/", 9))
         links = parse_platform_block_device(uevent);
+    else
+        links = parse_gpt_block_device(uevent);
 
     handle_device(uevent->action, devpath, uevent->path, 1,
             uevent->major, uevent->minor, links);
-- 
1.7.4.1

