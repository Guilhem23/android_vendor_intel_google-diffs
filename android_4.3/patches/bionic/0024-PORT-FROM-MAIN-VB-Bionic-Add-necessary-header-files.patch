From 6f0ab4154e645d7eb70dc36c5d90be8dbebee0cc Mon Sep 17 00:00:00 2001
From: Guillaume Lucas <guillaume.lucas@intel.com>
Date: Wed, 7 Nov 2012 10:52:32 +0100
Subject: [PORT FROM MAIN] VB: Bionic: Add necessary header files

BZ: 71505

This patch update/add the necessary files for building the
adpatation layer for Victoria Bay project.
Signed-off-by: Guillaume Lucas <guillaume.lucas@intel.com>

Change-Id: I02f9c2f650e9439f93be0983d1362ef122ed90f9
Orig-Change-Id: I6433bf9edb45b48c3b001d68d94cbd6d50480626
Reviewed-on: http://android.intel.com:8080/81414
Reviewed-by: Lucas, Guillaume <guillaume.lucas@intel.com>
Reviewed-by: Yao, Yong <yong.yao@intel.com>
Reviewed-by: Ravindran, Arun <arun.ravindran@intel.com>
Reviewed-by: Lebsir, SamiX <samix.lebsir@intel.com>
Tested-by: Lebsir, SamiX <samix.lebsir@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
---
 libc/include/if_phonet.h |   19 ++++
 libc/include/mhdp.h      |   36 ++++++++
 libc/include/phonet.h    |  208 ++++++++++++++++++++++++++++++++++++++++++++++
 mhdp.h                   |   36 ++++++++
 4 files changed, 299 insertions(+), 0 deletions(-)
 create mode 100644 libc/include/if_phonet.h
 create mode 100644 libc/include/mhdp.h
 create mode 100644 libc/include/phonet.h
 create mode 100644 mhdp.h

diff --git a/libc/include/if_phonet.h b/libc/include/if_phonet.h
new file mode 100644
index 0000000..d70034b
--- /dev/null
+++ b/libc/include/if_phonet.h
@@ -0,0 +1,19 @@
+/*
+ * File: if_phonet.h
+ *
+ * Phonet interface kernel definitions
+ *
+ * Copyright (C) 2008 Nokia Corporation. All rights reserved.
+ */
+#ifndef LINUX_IF_PHONET_H
+#define LINUX_IF_PHONET_H
+
+#define PHONET_MIN_MTU		6	/* pn_length = 0 */
+#define PHONET_MAX_MTU		65541	/* pn_length = 0xffff */
+#define PHONET_DEV_MTU		PHONET_MAX_MTU
+
+#ifdef __KERNEL__
+extern struct header_ops phonet_header_ops;
+#endif
+
+#endif
diff --git a/libc/include/mhdp.h b/libc/include/mhdp.h
new file mode 100644
index 0000000..60daf92
--- /dev/null
+++ b/libc/include/mhdp.h
@@ -0,0 +1,36 @@
+/*
+* File: mhi/mhdp.h
+*
+* Modem-Host Interface (MHI) - MHDP kernel interface
+*
+* Copyright (C) 2012 Renesas Mobile Corporation. All rights reserved.
+*
+* This program is free software; you can redistribute it and/or
+* modify it under the terms of the GNU General Public License
+* version 2 as published by the Free Software Foundation.
+*
+* This program is distributed in the hope that it will be useful, but
+* WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. Â See the GNU
+* General Public License for more details.
+*
+* You should have received a copy of the GNU General Public License
+* along with this program; if not, write to the Free Software
+* Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+* 02110-1301 USA
+ */
+
+#ifndef __NET_MHI_MHDP_H
+#define __NET_MHI_MHDP_H
+
+struct mhdp_tunnel_parm {
+	char name[IFNAMSIZ];
+	char master[IFNAMSIZ];
+	int  pdn_id;
+};
+
+#define SIOCADDPDNID     (SIOCDEVPRIVATE + 1)
+#define SIOCDELPDNID     (SIOCDEVPRIVATE + 2)
+#define SIOCRESETMHDP    (SIOCDEVPRIVATE + 3)
+
+#endif /* __NET_MHI_MHDP_H */
diff --git a/libc/include/phonet.h b/libc/include/phonet.h
new file mode 100644
index 0000000..dc86df9
--- /dev/null
+++ b/libc/include/phonet.h
@@ -0,0 +1,208 @@
+/**
+ * file phonet.h
+ *
+ * Phonet sockets kernel interface
+ *
+ * Copyright (C) 2008 Nokia Corporation. All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * version 2 as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA
+ */
+
+#ifndef LINUX_PHONET_H
+#define LINUX_PHONET_H
+
+#include <linux/types.h>
+
+/* Phonet media types */
+#define PN_MEDIA_ROUTING	0x00
+#define PN_MEDIA_USB		0x1B
+#define PN_MEDIA_DEFAULT	0x25
+#define PN_MEDIA_MODEM_HOST_IF  0x26
+
+/* Automatic protocol selection */
+#define PN_PROTO_TRANSPORT	0
+/* Phonet datagram socket */
+#define PN_PROTO_PHONET		1
+/* Phonet pipe */
+#define PN_PROTO_PIPE		2
+#define PHONET_NPROTO		3
+
+/* Socket options for SOL_PNPIPE level */
+#define PNPIPE_ENCAP		1
+#define PNPIPE_IFINDEX		2
+#define PNPIPE_HANDLE		3
+
+#define PNADDR_ANY		0
+#define PNADDR_BROADCAST	0xFC
+#define PNPORT_RESOURCE_ROUTING	0
+
+/* define object for multicast */
+#define PNOBJECT_MULTICAST 0x20
+
+/* Values for PNPIPE_ENCAP option */
+#define PNPIPE_ENCAP_NONE	0
+#define PNPIPE_ENCAP_IP		1
+
+/* ioctls */
+#define SIOCPNGETOBJECT		(SIOCPROTOPRIVATE + 0)
+#define SIOCPNADDRESOURCE	(SIOCPROTOPRIVATE + 14)
+#define SIOCPNDELRESOURCE	(SIOCPROTOPRIVATE + 15)
+#define SIOCCONFIGTYPE		(SIOCPROTOPRIVATE + 1)
+#define SIOCCONFIGSUBTYPE	(SIOCPROTOPRIVATE + 2)
+
+/* Phonet protocol header */
+struct phonethdr {
+	__u8	pn_rdev;
+	__u8	pn_sdev;
+	__u8	pn_res;
+	__be16	pn_length;
+	__u8	pn_robj;
+	__u8	pn_sobj;
+} __attribute__((packed));
+
+/* Common Phonet payload header */
+struct phonetmsg {
+	__u8	pn_trans_id;	/* transaction ID */
+	__u8	pn_msg_id;	/* message type */
+	union {
+		struct {
+			__u8	pn_submsg_id;	/* message subtype */
+			__u8	pn_data[5];
+		} base;
+		struct {
+			__u16	pn_e_res_id;	/* extended resource ID */
+			__u8	pn_e_submsg_id;	/* message subtype */
+			__u8	pn_e_data[3];
+		} ext;
+	} pn_msg_u;
+};
+#define PN_COMMON_MESSAGE	0xF0
+#define PN_COMMGR			0x10
+#define PN_PREFIX			0xE0 /* resource for extended messages */
+#define pn_submsg_id		pn_msg_u.base.pn_submsg_id
+#define pn_e_submsg_id		pn_msg_u.ext.pn_e_submsg_id
+#define pn_e_res_id			pn_msg_u.ext.pn_e_res_id
+#define pn_data				pn_msg_u.base.pn_data
+#define pn_e_data			pn_msg_u.ext.pn_e_data
+
+/* data for unreachable errors */
+#define PN_COMM_SERVICE_NOT_IDENTIFIED_RESP	0x01
+#define PN_COMM_ISA_ENTITY_NOT_REACHABLE_RESP	0x14
+#define pn_orig_msg_id		pn_data[0]
+#define pn_status		pn_data[1]
+#define pn_e_orig_msg_id	pn_e_data[0]
+#define pn_e_status		pn_e_data[1]
+
+/* Phonet socket address structure */
+struct sockaddr_pn {
+	sa_family_t spn_family;
+	__u8 spn_obj;
+	__u8 spn_dev;
+	__u8 spn_resource;
+	__u8 spn_zero[sizeof(struct sockaddr) - sizeof(sa_family_t) - 3];
+} __attribute__((packed));
+
+/* Well known address */
+#define PN_DEV_PC	0x10
+
+static inline __u16 pn_object(__u8 addr, __u16 port)
+{
+	return (addr << 8) | (port & 0x3ff);
+}
+
+static inline __u8 pn_obj(__u16 handle)
+{
+	return handle & 0xff;
+}
+
+static inline __u8 pn_dev(__u16 handle)
+{
+	return handle >> 8;
+}
+
+static inline __u16 pn_port(__u16 handle)
+{
+	return handle & 0x3ff;
+}
+
+static inline __u8 pn_addr(__u16 handle)
+{
+	return (handle >> 8) & 0xfc;
+}
+
+static inline void pn_sockaddr_set_addr(struct sockaddr_pn *spn, __u8 addr)
+{
+	spn->spn_dev &= 0x03;
+	spn->spn_dev |= addr & 0xfc;
+}
+
+static inline void pn_sockaddr_set_port(struct sockaddr_pn *spn, __u16 port)
+{
+	spn->spn_dev &= 0xfc;
+	spn->spn_dev |= (port >> 8) & 0x03;
+	spn->spn_obj = port & 0xff;
+}
+
+static inline void pn_sockaddr_set_object(struct sockaddr_pn *spn,
+						__u16 handle)
+{
+	spn->spn_dev = pn_dev(handle);
+	spn->spn_obj = pn_obj(handle);
+}
+
+static inline void pn_sockaddr_set_resource(struct sockaddr_pn *spn,
+						__u8 resource)
+{
+	spn->spn_resource = resource;
+}
+
+static inline __u8 pn_sockaddr_get_addr(const struct sockaddr_pn *spn)
+{
+	return spn->spn_dev & 0xfc;
+}
+
+static inline __u16 pn_sockaddr_get_port(const struct sockaddr_pn *spn)
+{
+	return ((spn->spn_dev & 0x03) << 8) | spn->spn_obj;
+}
+
+static inline __u16 pn_sockaddr_get_object(const struct sockaddr_pn *spn)
+{
+	return pn_object(spn->spn_dev, spn->spn_obj);
+}
+
+static inline __u8 pn_sockaddr_get_resource(const struct sockaddr_pn *spn)
+{
+	return spn->spn_resource;
+}
+
+/* Phonet device ioctl requests */
+#ifdef __KERNEL__
+#define SIOCPNGAUTOCONF		(SIOCDEVPRIVATE + 0)
+
+struct if_phonet_autoconf {
+	uint8_t device;
+};
+
+struct if_phonet_req {
+	char ifr_phonet_name[16];
+	union {
+		struct if_phonet_autoconf ifru_phonet_autoconf;
+	} ifr_ifru;
+};
+#define ifr_phonet_autoconf ifr_ifru.ifru_phonet_autoconf
+#endif /* __KERNEL__ */
+
+#endif
diff --git a/mhdp.h b/mhdp.h
new file mode 100644
index 0000000..60daf92
--- /dev/null
+++ b/mhdp.h
@@ -0,0 +1,36 @@
+/*
+* File: mhi/mhdp.h
+*
+* Modem-Host Interface (MHI) - MHDP kernel interface
+*
+* Copyright (C) 2012 Renesas Mobile Corporation. All rights reserved.
+*
+* This program is free software; you can redistribute it and/or
+* modify it under the terms of the GNU General Public License
+* version 2 as published by the Free Software Foundation.
+*
+* This program is distributed in the hope that it will be useful, but
+* WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. Â See the GNU
+* General Public License for more details.
+*
+* You should have received a copy of the GNU General Public License
+* along with this program; if not, write to the Free Software
+* Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+* 02110-1301 USA
+ */
+
+#ifndef __NET_MHI_MHDP_H
+#define __NET_MHI_MHDP_H
+
+struct mhdp_tunnel_parm {
+	char name[IFNAMSIZ];
+	char master[IFNAMSIZ];
+	int  pdn_id;
+};
+
+#define SIOCADDPDNID     (SIOCDEVPRIVATE + 1)
+#define SIOCDELPDNID     (SIOCDEVPRIVATE + 2)
+#define SIOCRESETMHDP    (SIOCDEVPRIVATE + 3)
+
+#endif /* __NET_MHI_MHDP_H */
-- 
1.7.4.1

