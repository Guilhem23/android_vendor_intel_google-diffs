From 79223595cbb3f1534cfd9647de65939ace84f02f Mon Sep 17 00:00:00 2001
From: Sun Yijin <yijin.sun@intel.com>
Date: Wed, 11 Jul 2012 01:01:23 +0800
Subject: [PORT FROM MAIN] add LOGD/V/W/E supprot for JB boot camp

BZ: 46708

LOGV/LOGD/LOGW/LOGE and changed to ALOGD/ALOGD/ALOGW/ALOGE which will cause all the ABSP can't pass the build.
temp patch to add the define of LOGV/LOGD/LOGW/LOGE.
Will fix it with a more formal way later.

[BOOT CAMP SPECIFIC]

Change-Id: Iff65a0cfc24f35eac3b5cb1b856434169b8cf4cc
Orig-Change-Id: I48bbb91cced7f5e73b9b3f55efcf33bc615fd5a5
Reviewed-on: http://android.intel.com:8080/74489
Reviewed-by: Yao, Yong <yong.yao@intel.com>
Reviewed-by: Li, XiaojingX <xiaojingx.li@intel.com>
Tested-by: Li, XiaojingX <xiaojingx.li@intel.com>
---
 include/cutils/log.h |   34 +++++++++++++++++++++++++++++-----
 1 files changed, 29 insertions(+), 5 deletions(-)

diff --git a/include/cutils/log.h b/include/cutils/log.h
index 8b045c7..481f6d4 100644
--- a/include/cutils/log.h
+++ b/include/cutils/log.h
@@ -80,6 +80,8 @@ extern "C" {
 #define ALOGV(...) ((void)ALOG(LOG_VERBOSE, LOG_TAG, __VA_ARGS__))
 #endif
 #endif
+/////
+#define LOGV ALOGV
 
 #define CONDITION(cond)     (__builtin_expect((cond)!=0, 0))
 
@@ -93,6 +95,9 @@ extern "C" {
     : (void)0 )
 #endif
 #endif
+//////
+#define LOGV_IF ALOGV_IF
+
 
 /*
  * Simplified macro to send a debug log message using the current LOG_TAG.
@@ -108,6 +113,9 @@ extern "C" {
     : (void)0 )
 #endif
 
+//////
+#define LOGD ALOGD
+#define LOGD_IF ALOGD_IF
 /*
  * Simplified macro to send an info log message using the current LOG_TAG.
  */
@@ -122,6 +130,9 @@ extern "C" {
     : (void)0 )
 #endif
 
+///////
+#define LOGI ALOGI
+#define LOGI_IF ALOGI_IF
 /*
  * Simplified macro to send a warning log message using the current LOG_TAG.
  */
@@ -135,7 +146,9 @@ extern "C" {
     ? ((void)ALOG(LOG_WARN, LOG_TAG, __VA_ARGS__)) \
     : (void)0 )
 #endif
-
+//////
+#define LOGW ALOGW
+#define LOGW_IF ALOGW_IF
 /*
  * Simplified macro to send an error log message using the current LOG_TAG.
  */
@@ -150,6 +163,9 @@ extern "C" {
     : (void)0 )
 #endif
 
+///////
+#define LOGE ALOGE
+#define LOGE_IF ALOGE_IF
 // ---------------------------------------------------------------------
 
 /*
@@ -163,7 +179,8 @@ extern "C" {
 #define IF_ALOGV() IF_ALOG(LOG_VERBOSE, LOG_TAG)
 #endif
 #endif
-
+/////
+#define IF_LOGV IF_LOGV
 /*
  * Conditional based on whether the current LOG_TAG is enabled at
  * debug priority.
@@ -171,7 +188,8 @@ extern "C" {
 #ifndef IF_ALOGD
 #define IF_ALOGD() IF_ALOG(LOG_DEBUG, LOG_TAG)
 #endif
-
+/////
+#define IF_LOGD IF_ALOGD
 /*
  * Conditional based on whether the current LOG_TAG is enabled at
  * info priority.
@@ -179,7 +197,8 @@ extern "C" {
 #ifndef IF_ALOGI
 #define IF_ALOGI() IF_ALOG(LOG_INFO, LOG_TAG)
 #endif
-
+////
+#define IF_LOGI IF_ALOGI
 /*
  * Conditional based on whether the current LOG_TAG is enabled at
  * warn priority.
@@ -187,7 +206,8 @@ extern "C" {
 #ifndef IF_ALOGW
 #define IF_ALOGW() IF_ALOG(LOG_WARN, LOG_TAG)
 #endif
-
+/////
+#define IF_LOGW IF_ALOGW
 /*
  * Conditional based on whether the current LOG_TAG is enabled at
  * error priority.
@@ -196,6 +216,9 @@ extern "C" {
 #define IF_ALOGE() IF_ALOG(LOG_ERROR, LOG_TAG)
 #endif
 
+////
+#define IF_LOGE IF_ALOGE
+
 
 // ---------------------------------------------------------------------
 
@@ -212,6 +235,7 @@ extern "C" {
 
 #define CONDITION(cond)     (__builtin_expect((cond)!=0, 0))
 
+
 #ifndef SLOGV_IF
 #if LOG_NDEBUG
 #define SLOGV_IF(cond, ...)   ((void)0)
-- 
1.7.4.1

