From f8c0cd3f8e92a4ad2e2b21ce9c60e6a6b231c2c7 Mon Sep 17 00:00:00 2001
From: Pavan Kumar S <pavan.kumar.s@intel.com>
Date: Mon, 13 May 2013 15:56:52 +0530
Subject: [PORT FROM MAIN] ANDROID-COS: Avoid animation while not charging

BZ: 50142

At present, charging animation runs irrespective of whether charger
is connected or not.
When the charger is disconnected, we remain in COS for 10secs.
Charging animation during this period should be avoided.

Orig-Change-Id: I5f2633259fe472f1d1f8c359f717e2a36c8b3f9b

Change-Id: I733c9393ef90cc36335e6cf373c88e388c5f5058
Signed-off-by: Pavan Kumar S <pavan.kumar.s@intel.com>
---
 charger/charger.c |   28 +++++++++++++++++-----------
 1 files changed, 17 insertions(+), 11 deletions(-)

diff --git a/charger/charger.c b/charger/charger.c
index 66ddeaf..5f3afa1 100644
--- a/charger/charger.c
+++ b/charger/charger.c
@@ -755,24 +755,30 @@ static void update_screen_state(struct charger *charger, int64_t now)
     /* schedule next screen transition */
     charger->next_screen_transition = now + disp_time;
 
-    /* advance frame cntr to the next valid frame
+    /* advance frame cntr to the next valid frame only if we are charging
      * if necessary, advance cycle cntr, and reset frame cntr
      */
-    batt_anim->cur_frame++;
-
-    /* if the frame is used for level-only, that is only show it when it's
-     * the current level, skip it during the animation.
-     */
-    while (batt_anim->cur_frame < batt_anim->num_frames &&
-           batt_anim->frames[batt_anim->cur_frame].level_only)
+    if (charger->num_supplies_online != 0) {
         batt_anim->cur_frame++;
-    if (batt_anim->cur_frame >= batt_anim->num_frames) {
-        batt_anim->cur_cycle++;
-        batt_anim->cur_frame = 0;
+
+        /* if the frame is used for level-only, that is only show it when it's
+         * the current level, skip it during the animation.
+         */
+        while (batt_anim->cur_frame < batt_anim->num_frames &&
+               batt_anim->frames[batt_anim->cur_frame].level_only)
+            batt_anim->cur_frame++;
+        if (batt_anim->cur_frame >= batt_anim->num_frames) {
+            batt_anim->cur_cycle++;
+            batt_anim->cur_frame = 0;
 
         /* don't reset the cycle counter, since we use that as a signal
          * in a test above to check if animation is over
          */
+        }
+    } else {
+        /* Stop animating if we're not charging */
+        batt_anim->cur_frame = 0;
+        batt_anim->cur_cycle++;
     }
 }
 
-- 
1.7.4.1

