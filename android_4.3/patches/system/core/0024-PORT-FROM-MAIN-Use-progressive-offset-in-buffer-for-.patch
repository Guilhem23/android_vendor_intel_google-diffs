From c7e5d82cd5d99121e625222861c25d85c9398d20 Mon Sep 17 00:00:00 2001
From: Paul Drews <paul.drews@intel.com>
Date: Mon, 20 Jun 2011 10:01:24 -0700
Subject: [PORT FROM MAIN] Use progressive offset in buffer for successive writes

BZ: 88200

[PORT FROM OTC]
Orig-Change-Id: I76b8e0b3c0d3b0c32bd2114d0867ac7489808279

The code for copying from one raw file to another looped
back and tried again with a suitably smaller number of bytes
if the entire buffer was not written on the first try.
However, it failed to advance an offset in the buffer past
the bytes that were written.  This could conceivably happen
under rare circumstances, leading to a corrupted disk image.

This fix defines an offset into the buffer, advancing it by
the number of bytes written on each successive retry.

Change-Id: I96babbb08d163d54085fae47400ded4193fac624
Orig-Change-Id: I3632c59d14fd7f6a6f4252acd23ddb56a6816154
Signed-off-by: Paul Drews <paul.drews@intel.com>
Signed-off-by: Jacek Lawrynowicz <jacek.lawrynowicz@intel.com>
Signed-off-by: Laurent FERT <laurent.fert@intel.com>
Signed-off-by: Guilhem IMBERTON <guilhem.imberton@intel.com>
Reviewed-on: http://android.intel.com:8080/92612
Reviewed-by: cactus <cactus@intel.com>
Reviewed-by: Wood, Brian J <brian.j.wood@intel.com>
Tested-by: Ng, Cheon-woei <cheon-woei.ng@intel.com>
Reviewed-by: buildbot <buildbot@intel.com>
Tested-by: buildbot <buildbot@intel.com>
---
 libdiskconfig/diskutils.c |    7 +++++--
 1 files changed, 5 insertions(+), 2 deletions(-)

diff --git a/libdiskconfig/diskutils.c b/libdiskconfig/diskutils.c
index e325735..6689749 100644
--- a/libdiskconfig/diskutils.c
+++ b/libdiskconfig/diskutils.c
@@ -34,7 +34,8 @@ write_raw_image(const char *dst, const char *src, loff_t offset, int test)
 {
     int dst_fd = -1;
     int src_fd = -1;
-    uint8_t buffer[2048];
+    uint8_t buffer[4096];
+    int buf_offset;
     int nr_bytes;
     int tmp;
     int done = 0;
@@ -79,8 +80,9 @@ write_raw_image(const char *dst, const char *src, loff_t offset, int test)
         if (test)
             nr_bytes = 0;
 
+        buf_offset = 0;
         while (nr_bytes > 0) {
-            if ((tmp = write(dst_fd, buffer, nr_bytes)) < 0) {
+            if ((tmp = write(dst_fd, &buffer[buf_offset], nr_bytes)) < 0) {
                 /* XXX: Should we not even bother with EINTR? */
                 if (errno == EINTR)
                     continue;
@@ -90,6 +92,7 @@ write_raw_image(const char *dst, const char *src, loff_t offset, int test)
             if (!tmp)
                 continue;
             nr_bytes -= tmp;
+            buf_offset += tmp;
         }
     }
 
-- 
1.7.4.1

