From ab3cdf0f49204414d4893586e6723e90149fa7ab Mon Sep 17 00:00:00 2001
From: Chuanxiao Dong <chuanxiao.dong@intel.com>
Date: Wed, 28 Dec 2011 11:28:49 +0800
Subject: [PORT FROM MAIN] vold: do not let card go to idle state if card is already removed

BZ: 47043
below is the original commit info
	BZ: 17817

	If card is removed already, then putting card in idle state will make
	vold server confusing.
	So, before putting card in idle state, check whether card is already
	been removed

	Change-Id: I80069d1f3e74d2ff94b58ba40b300e73d81c6004
	Signed-off-by: Chuanxiao Dong <chuanxiao.dong@intel.com>
	Reviewed-on: http://android.intel.com:8080/30061
	Reviewed-by: Peng, BoX <box.peng@intel.com>
	Tested-by: Sun, Jianhua <jianhua.sun@intel.com>
	Reviewed-by: Huang, Bo B <bo.b.huang@intel.com>
	Reviewed-by: Yin, Fengwei <fengwei.yin@intel.com>
	Reviewed-by: buildbot <buildbot@intel.com>
	Tested-by: buildbot <buildbot@intel.com>

Change-Id: Ib5d27fb8ba1cdb59d010a15393410dd0e0217000
Orig-Change-Id: I919fa57b680e2e2e558bcbc9dc1ab8b947971360
Signed-off-by: Chuanxiao Dong <chuanxiao.dong@intel.com>
Reviewed-on: http://android.intel.com:8080/76085
Reviewed-by: lab_cactus <lab_cactus@intel.com>
Reviewed-by: Yao, Yong <yong.yao@intel.com>
Tested-by: Sun, Jianhua <jianhua.sun@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
---
 Volume.cpp |   33 +++++++++++++++++++++++++++------
 1 files changed, 27 insertions(+), 6 deletions(-)

diff --git a/Volume.cpp b/Volume.cpp
index 725dae7..c676838 100644
--- a/Volume.cpp
+++ b/Volume.cpp
@@ -258,7 +258,9 @@ int Volume::formatVol() {
     ret = 0;
 
 err:
-    setState(Volume::State_Idle);
+    if ((getState() != Volume::State_NoMedia))
+        setState(Volume::State_Idle);
+
     return ret;
 }
 
@@ -395,7 +397,12 @@ int Volume::mountVol() {
         SLOGI("%s being considered for volume %s\n", devicePath, getLabel());
 
         errno = 0;
-        setState(Volume::State_Checking);
+
+        if ((getState() == Volume::State_NoMedia)) {
+            errno = ENODEV;
+            return -1;
+        } else
+            setState(Volume::State_Checking);
 
         if (Fat::check(devicePath)) {
             if (errno == ENODATA) {
@@ -405,7 +412,10 @@ int Volume::mountVol() {
             errno = EIO;
             /* Badness - abort the mount */
             SLOGE("%s failed FS checks (%s)", devicePath, strerror(errno));
-            setState(Volume::State_Idle);
+            if ((getState() == Volume::State_NoMedia))
+                errno = ENODEV;
+            else
+                setState(Volume::State_Idle);
             return -1;
         }
 
@@ -438,7 +448,8 @@ int Volume::mountVol() {
         if (primaryStorage && createBindMounts()) {
             SLOGE("Failed to create bindmounts (%s)", strerror(errno));
             umount("/mnt/secure/staging");
-            setState(Volume::State_Idle);
+            if ((getState() != Volume::State_NoMedia))
+                setState(Volume::State_Idle);
             return -1;
         }
 
@@ -449,7 +460,8 @@ int Volume::mountVol() {
         if (doMoveMount("/mnt/secure/staging", getMountpoint(), false)) {
             SLOGE("Failed to move mount (%s)", strerror(errno));
             umount("/mnt/secure/staging");
-            setState(Volume::State_Idle);
+            if ((getState() != Volume::State_NoMedia))
+                setState(Volume::State_Idle);
             return -1;
         }
         setState(Volume::State_Mounted);
@@ -467,7 +479,10 @@ int Volume::mountVol() {
     }
 
     SLOGE("Volume %s found no suitable devices for mounting :(\n", getLabel());
-    setState(Volume::State_Idle);
+    if ((getState() == Volume::State_NoMedia))
+        errno = ENODEV;
+    else
+        setState(Volume::State_Idle);
 
     return -1;
 }
@@ -655,6 +670,11 @@ int Volume::unmountVol(bool force, bool revert) {
         SLOGI("Encrypted volume %s reverted successfully", getMountpoint());
     }
 
+    if ((getState() == Volume::State_NoMedia)) {
+        mCurrentlyMountedKdev = -1;
+        goto out_nomedia;
+    }
+
     setState(Volume::State_Idle);
     mCurrentlyMountedKdev = -1;
     return 0;
@@ -685,6 +705,7 @@ out_nomedia:
     setState(Volume::State_NoMedia);
     return -1;
 }
+
 int Volume::initializeMbr(const char *deviceNode) {
     struct disk_info dinfo;
 
-- 
1.7.4.1

