From e88913f0e00f93f424f6eccaeea7888bf1948eea Mon Sep 17 00:00:00 2001
From: jerome Pantaloni <jeromex.pantaloni@intel.com>
Date: Tue, 30 Apr 2013 15:48:37 +0300
Subject: [PORT FROM MAIN] Telephony: Fix for Failing OMA test SUPL-1.0-con-13

BZ: 55252

The WAP Push message from an SLP (SLC for non-proxy mode) to a PPG
SHALL contain the SUPL INIT message and SHALL follow [WAP PAP]. And
when the device receive a NI request and normally we shall not answer
to it. Currently this is answered resulting in test failure.

This patch corrects this issue.

Change-Id: Ifab87a40778f8ffea9f4991516352efe647fa80e
Orig-Change-Id: I37f329d354c0c921f7892b52e7a5ed355b9a9378
Signed-off-by: jerome Pantaloni <jeromex.pantaloni@intel.com>
Signed-off-by: Arun Ravindran <arun.ravindran@intel.com>
---
 .../android/internal/telephony/WapPushOverSms.java |   11 +++++++++++
 .../android/internal/telephony/WspTypeDecoder.java |    1 +
 2 files changed, 12 insertions(+), 0 deletions(-)

diff --git a/src/java/com/android/internal/telephony/WapPushOverSms.java b/src/java/com/android/internal/telephony/WapPushOverSms.java
index 8558b2e..ddd1002 100755
--- a/src/java/com/android/internal/telephony/WapPushOverSms.java
+++ b/src/java/com/android/internal/telephony/WapPushOverSms.java
@@ -39,6 +39,9 @@ public class WapPushOverSms {
     private static final String LOG_TAG = "WAP PUSH";
     private static final boolean DBG = false;
 
+    private static final String APP_ID_URN = "x-oma-application:ulp.ua";
+    private static final String APP_ID_SUPL = "16";
+
     private final Context mContext;
     private WspTypeDecoder pduDecoder;
     private SMSDispatcher mSmsDispatcher;
@@ -218,6 +221,14 @@ public class WapPushOverSms {
                                   Long.toString(binaryContentType) : mimeType);
             if (DBG) Rlog.v(LOG_TAG, "appid found: " + wapAppId + ":" + contentType);
 
+            // add 16 to support supl application_id Number. not only application_id URN
+            if (contentType.equals(WspTypeDecoder.CONTENT_TYPE_B_PUSH_SUPL_INIT)
+                    && !(APP_ID_URN.equals(wapAppId) || APP_ID_SUPL.equals(wapAppId))) {
+                if (DBG) Rlog.w(LOG_TAG,"Received a wrong appId wap push sms."
+                                    + "will not send out to AGPS. wrong appid=" + wapAppId);
+                return Intents.RESULT_SMS_HANDLED;
+            }
+
             try {
                 boolean processFurther = true;
                 IWapPushManager wapPushMan = mWapConn.getWapPushManager();
diff --git a/src/java/com/android/internal/telephony/WspTypeDecoder.java b/src/java/com/android/internal/telephony/WspTypeDecoder.java
index 281488a..e044c3c 100755
--- a/src/java/com/android/internal/telephony/WspTypeDecoder.java
+++ b/src/java/com/android/internal/telephony/WspTypeDecoder.java
@@ -195,6 +195,7 @@ public class WspTypeDecoder {
     public static final String CONTENT_TYPE_B_PUSH_CO = "application/vnd.wap.coc";
     public static final String CONTENT_TYPE_B_MMS = "application/vnd.wap.mms-message";
     public static final String CONTENT_TYPE_B_PUSH_SYNCML_NOTI = "application/vnd.syncml.notification";
+    public static final String CONTENT_TYPE_B_PUSH_SUPL_INIT = "application/vnd.omaloc-supl-init";
 
     byte[] mWspData;
     int    mDataLength;
-- 
1.7.4.1

