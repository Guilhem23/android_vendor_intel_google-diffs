From 2ee0aea60642c07b4d783516b62f10393180d982 Mon Sep 17 00:00:00 2001
From: Andre Amegah <andrex.amegah@intel.com>
Date: Mon, 29 Apr 2013 17:30:43 +0300
Subject: [PORT FROM MAIN] Telephony: Support for SATK Network search mode cmd

BZ: 61238

This command is part of PROVIDE LOCAL INFORMATION satk
proactive command where the current network search mode
(MANUAL or AUTOMATIC) is sent to UICC.

With is this patch, support for this command is implemented.
Note that support for this command is required for SATK Rel.9.

Change-Id: I598e9eb37bce77e94dbe4dac2ec9b88809f2e587
Orig-Change-Id: I7ae7e0b1855e63f0c6503e9303a6f812c5d502f4
Signed-off-by: Andre Amegah <andrex.amegah@intel.com>
Signed-off-by: Arun Ravindran <arun.ravindran@intel.com>
---
 .../android/internal/telephony/cat/CatService.java |   21 ++++++++++++++++++
 .../telephony/cat/CommandParamsFactory.java        |    5 ++++
 .../telephony/cat/ComprehensionTlvTag.java         |    3 +-
 .../internal/telephony/cat/ResponseData.java       |   23 ++++++++++++++++++++
 4 files changed, 51 insertions(+), 1 deletions(-)

diff --git a/src/java/com/android/internal/telephony/cat/CatService.java b/src/java/com/android/internal/telephony/cat/CatService.java
index 42a2047..b1bd25b 100644
--- a/src/java/com/android/internal/telephony/cat/CatService.java
+++ b/src/java/com/android/internal/telephony/cat/CatService.java
@@ -31,6 +31,10 @@ import android.os.RemoteException;
 import android.os.SystemProperties;
 
 import com.android.internal.telephony.CommandsInterface;
+import com.android.internal.telephony.Phone;
+import com.android.internal.telephony.PhoneBase;
+import com.android.internal.telephony.PhoneFactory;
+import com.android.internal.telephony.PhoneProxy;
 import com.android.internal.telephony.uicc.IccFileHandler;
 import com.android.internal.telephony.uicc.IccRecords;
 import com.android.internal.telephony.uicc.IccUtils;
@@ -105,6 +109,11 @@ public class CatService extends Handler implements AppInterface {
     public static final int DEV_ID_UICC        = 0x81;
     public static final int DEV_ID_TERMINAL    = 0x82;
     public static final int DEV_ID_NETWORK     = 0x83;
+
+    // Network type selection
+    static final int NETWORK_SELECTION_MODE_MANUAL         = 0x00;
+    static final int NETWORK_SELECTION_MODE_AUTOMATIC      = 0x01;
+
     static final String STK_DEFAULT = "Default Message";
 
     /* Intentionally private for singleton */
@@ -264,6 +273,10 @@ public class CatService extends Handler implements AppInterface {
                         resp = new LanguageResponseData(Locale.getDefault().getLanguage());
                         sendTerminalResponse(cmdParams.mCmdDet, ResultCode.OK, false, 0, resp);
                         break;
+                    case CommandParamsFactory.SEARCH_MODE_SETTING:
+                        resp = new NetworkSearchModeResponseData(getNetworkSelectionMode());
+                        sendTerminalResponse(cmdParams.mCmdDet, ResultCode.OK, false, 0, resp);
+                        break;
                     default:
                         sendTerminalResponse(cmdParams.mCmdDet, ResultCode.OK, false, 0, null);
                 }
@@ -895,4 +908,12 @@ public class CatService extends Handler implements AppInterface {
             CatLog.d(this, "failed to change locale language");
         }
     }
+
+    private int getNetworkSelectionMode() {
+        Phone phone = ((PhoneProxy)PhoneFactory.getDefaultPhone()).getActivePhone();
+        boolean isManual = ((PhoneBase)phone).getServiceState().getIsManualSelection();
+        CatLog.d(this, "Network selection mode is " + (isManual ? "MANUAL" : "AUTOMATIC"));
+
+        return isManual ? NETWORK_SELECTION_MODE_MANUAL : NETWORK_SELECTION_MODE_AUTOMATIC;
+    }
 }
diff --git a/src/java/com/android/internal/telephony/cat/CommandParamsFactory.java b/src/java/com/android/internal/telephony/cat/CommandParamsFactory.java
index e6b2e26..337ea36 100644
--- a/src/java/com/android/internal/telephony/cat/CommandParamsFactory.java
+++ b/src/java/com/android/internal/telephony/cat/CommandParamsFactory.java
@@ -55,6 +55,7 @@ class CommandParamsFactory extends Handler {
     // Command Qualifier values for PLI command
     static final int DTTZ_SETTING                           = 0x03;
     static final int LANGUAGE_SETTING                       = 0x04;
+    static final int SEARCH_MODE_SETTING                    = 0x09;
 
     static synchronized CommandParamsFactory getInstance(RilMessageDecoder caller,
             IccFileHandler fh) {
@@ -897,6 +898,10 @@ class CommandParamsFactory extends Handler {
                 CatLog.d(this, "PLI [LANGUAGE_SETTING]");
                 mCmdParams = new CommandParams(cmdDet);
                 break;
+            case SEARCH_MODE_SETTING:
+                CatLog.d(this, "PLI [SEARCH_MODE_SETTING]");
+                mCmdParams = new CommandParams(cmdDet);
+                break;
             default:
                 CatLog.d(this, "PLI[" + cmdDet.commandQualifier + "] Command Not Supported");
                 mCmdParams = new CommandParams(cmdDet);
diff --git a/src/java/com/android/internal/telephony/cat/ComprehensionTlvTag.java b/src/java/com/android/internal/telephony/cat/ComprehensionTlvTag.java
index 9e31c27..f19d8b4 100644
--- a/src/java/com/android/internal/telephony/cat/ComprehensionTlvTag.java
+++ b/src/java/com/android/internal/telephony/cat/ComprehensionTlvTag.java
@@ -47,7 +47,8 @@ public enum ComprehensionTlvTag {
     URL(0x31),
     BROWSER_TERMINATION_CAUSE(0x34),
     TEXT_ATTRIBUTE(0x50),
-    ACTIVATE_DESCRIPTOR(0x7b);
+    ACTIVATE_DESCRIPTOR(0x7b),
+    NETWORK_SEARCH_MODE(0x65);
 
     private int mValue;
 
diff --git a/src/java/com/android/internal/telephony/cat/ResponseData.java b/src/java/com/android/internal/telephony/cat/ResponseData.java
index 36c51e1..f1d0832 100644
--- a/src/java/com/android/internal/telephony/cat/ResponseData.java
+++ b/src/java/com/android/internal/telephony/cat/ResponseData.java
@@ -180,6 +180,29 @@ class GetInkeyInputResponseData extends ResponseData {
     }
 }
 
+/* For "PROVIDE LOCAL INFORMATION" Search Mode command.
+ * See TS 31.111 section 6.4.15/ETSI TS 102 223
+ * TS 31.124 section 27.22.4.15 for test spec
+ */
+class NetworkSearchModeResponseData extends ResponseData {
+     // members
+     private int mode;
+
+     public NetworkSearchModeResponseData(int mode) {
+         super();
+         this.mode = mode;
+     }
+
+     @Override
+     public void format(ByteArrayOutputStream buf) {
+         // Network search object
+         int tag = ComprehensionTlvTag.NETWORK_SEARCH_MODE.value();
+         buf.write(tag); // tag
+         buf.write(1); // length
+         buf.write(mode); // Current network search mode value. (01=auto, 00=manual)
+     }
+}
+
 // For "PROVIDE LOCAL INFORMATION" command.
 // See TS 31.111 section 6.4.15/ETSI TS 102 223
 // TS 31.124 section 27.22.4.15 for test spec
-- 
1.7.4.1

