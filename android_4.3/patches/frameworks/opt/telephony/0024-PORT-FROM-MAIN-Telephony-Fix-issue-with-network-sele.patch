From a2079562ccc41de35820fbb4874b6edaf7d0bb91 Mon Sep 17 00:00:00 2001
From: Jeevaka Badrappan <jeevaka.badrappan@intel.com>
Date: Thu, 25 Apr 2013 11:14:03 +0300
Subject: [PORT FROM MAIN] Telephony: Fix issue with network selection mode

BZ: 14523 14027

Irrespective of the result of network selection,
default telephony framework preserves the network
selection mode. If the previous manual network
selection fails, framework ends up in restoring the
manual selection upon reboot/airplane mode disabled.
Its better to reset the network selection mode to
automatic if the manual network selection fails.

Since the NETWORK_SELECTION_KEY/NETWORK_SELECTION_NAME_KEY
property is used by application for displaying operator numeric
code/name upon manual selection failure, we chose to use a new
property.

New property NETWORK_SELECTION_MODE is introduced to
determine the network selection mode. Upon manual selection
failure, this property will be set to automatic network selection.

Change-Id: Ib9545c39d6a7cc6dd4d4086e76c8faa21ebd26c4
Orig-Change-Id: I35b1f5b2b32e154b02dea459ed6cfc709b347322
Signed-off-by: Jeevaka Badrappan <jeevaka.badrappan@intel.com>
Signed-off-by: Arun Ravindran <arun.ravindran@intel.com>
---
 .../com/android/internal/telephony/PhoneBase.java  |   13 ++++++++-
 .../android/internal/telephony/gsm/GSMPhone.java   |   25 ++++++++++++++++++++
 2 files changed, 36 insertions(+), 2 deletions(-)

diff --git a/src/java/com/android/internal/telephony/PhoneBase.java b/src/java/com/android/internal/telephony/PhoneBase.java
index 4208326..ca34ce8 100644
--- a/src/java/com/android/internal/telephony/PhoneBase.java
+++ b/src/java/com/android/internal/telephony/PhoneBase.java
@@ -72,6 +72,12 @@ public abstract class PhoneBase extends Handler implements Phone {
     // Key used to read and write the saved network selection operator name
     public static final String NETWORK_SELECTION_NAME_KEY = "network_selection_name_key";
 
+    /*
+     * Key used to read/write the network selection mode
+     *          true - Automatic network selection mode
+     *          false - Manual network selection mode
+     */
+    public static final String NETWORK_SELECTION_MODE = "network_selection_mode";
 
     // Key used to read/write "disable data connection on boot" pref (used for testing)
     public static final String DATA_DISABLED_ON_BOOT_KEY = "disabled_on_boot_key";
@@ -138,6 +144,8 @@ public abstract class PhoneBase extends Handler implements Phone {
             new AtomicReference<UiccCardApplication>();
     public SMSDispatcher mSMS;
 
+    public boolean mIsAutomaticNetworkSelection = true;
+
     private TelephonyTester mTelephonyTester;
     private final String mName;
     private final String mActionDetached;
@@ -266,6 +274,7 @@ public abstract class PhoneBase extends Handler implements Phone {
         SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(context);
         mDnsCheckDisabled = sp.getBoolean(DNS_SERVER_CHECK_DISABLED_KEY, false);
         mCi.setOnCallRing(this, EVENT_CALL_RING, null);
+        mIsAutomaticNetworkSelection = sp.getBoolean(NETWORK_SELECTION_MODE, true);
 
         /* "Voice capable" means that this device supports circuit-switched
         * (i.e. voice) phone calls over the telephony network, and is allowed
@@ -572,8 +581,8 @@ public abstract class PhoneBase extends Handler implements Phone {
         // retrieve the operator id
         String networkSelection = getSavedNetworkSelection();
 
-        // set to auto if the id is empty, otherwise select the network.
-        if (TextUtils.isEmpty(networkSelection)) {
+        // by default, network selection mode is automatic.
+        if (mIsAutomaticNetworkSelection || TextUtils.isEmpty(networkSelection)) {
             mCi.setNetworkSelectionModeAutomatic(response);
         } else {
             mCi.setNetworkSelectionModeManual(networkSelection, response);
diff --git a/src/java/com/android/internal/telephony/gsm/GSMPhone.java b/src/java/com/android/internal/telephony/gsm/GSMPhone.java
index 2814f72..4d36395 100644
--- a/src/java/com/android/internal/telephony/gsm/GSMPhone.java
+++ b/src/java/com/android/internal/telephony/gsm/GSMPhone.java
@@ -1480,6 +1480,31 @@ public class GSMPhone extends PhoneBase {
             Rlog.e(LOG_TAG, "failed to commit network selection preference");
         }
 
+        /* Empty operator numeric means network selection mode is automatic */
+        mIsAutomaticNetworkSelection = TextUtils.isEmpty(nsm.operatorNumeric);
+
+        if (ar.exception != null) {
+            /*
+             * Incase of network selection mode failure, reset the network selection
+             * mode to automatic.
+             */
+            mIsAutomaticNetworkSelection = true;
+
+            /*
+             * There won't be any service state change when the previous network
+             * selection also has failed. So, generate a dummy service state
+             * change event to make sure the UI notifications are updated.
+             *
+             * Note: This is an ugly hack due to PhoneApp implementation.
+             */
+            notifyServiceStateChanged(getServiceState());
+        }
+
+        editor.putBoolean(NETWORK_SELECTION_MODE, mIsAutomaticNetworkSelection);
+        // commit and log the result.
+        if (!editor.commit()) {
+            Rlog.e(LOG_TAG, "failed to commit network selection mode preference");
+        }
     }
 
     /**
-- 
1.7.4.1

