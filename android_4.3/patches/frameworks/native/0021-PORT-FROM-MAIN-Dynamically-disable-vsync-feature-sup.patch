From 4b0e6a141523a04659b105779e7d4d549684850a Mon Sep 17 00:00:00 2001
From: Lingyun Zhu <lingyun.zhu@intel.com>
Date: Wed, 21 Nov 2012 15:58:23 +0800
Subject: [PORT FROM MAIN]  Dynamically disable vsync feature support in JellyBean

BZ:63491

JellyBean is Vsync bound rendering system, its final composition
is triggered only by Vsync event, either HW Vsync or SW emulated
Vsync. It is not convenient for performance compare between ICS
and JB, especially for some on-screen rendering benchmark.

The steps to disable vsync feature in surfaceFlinger:
1) boot your DUT
2) adb shell setprop vsync.disable 1
3) adb shell stop
4) adb shell start
PS: adb shell setprop vsync.disable 0 will enable vysnc feature again.

One still need to echo 0 > /sys/module/gfx/parameters/vblank_sync to
disable kernel side vysnc bound flip feature as well.

Change-Id: I22523c8c339f128dac0f265de426b4c9e547b424
Orig-Change-Id: Ic42816762a2ece32a03a81c60d82d37893121c02
Signed-off-by: Zhouzhou(Scott) Fang <zhouzhou.fang@intel.com>
Signed-off-by: Lingyun Zhu <lingyun.zhu@intel.com>
---
 services/surfaceflinger/EventThread.cpp |   14 ++++++++++++++
 services/surfaceflinger/EventThread.h   |    1 +
 2 files changed, 15 insertions(+), 0 deletions(-)

diff --git a/services/surfaceflinger/EventThread.cpp b/services/surfaceflinger/EventThread.cpp
index 6263635..11b1fde 100644
--- a/services/surfaceflinger/EventThread.cpp
+++ b/services/surfaceflinger/EventThread.cpp
@@ -24,6 +24,7 @@
 #include <gui/BitTube.h>
 #include <gui/IDisplayEventConnection.h>
 #include <gui/DisplayEventReceiver.h>
+#include <cutils/properties.h>
 
 #include <utils/Errors.h>
 #include <utils/String8.h>
@@ -41,6 +42,7 @@ EventThread::EventThread(const sp<SurfaceFlinger>& flinger)
       mLastVSyncTimestamp(0),
       mLastVSyncDisplayType(-1),
       mUseSoftwareVSync(false),
+      mVsyncDisabled(false),
       mDebugVsyncEnabled(false) {
 
     for (int32_t i=0 ; i<HWC_NUM_DISPLAY_TYPES ; i++) {
@@ -52,6 +54,9 @@ EventThread::EventThread(const sp<SurfaceFlinger>& flinger)
 }
 
 void EventThread::onFirstRef() {
+    char vsyncValue[32] = {'\0'};
+    if (property_get("vsync.disable", vsyncValue, NULL))
+        mVsyncDisabled = atoi(vsyncValue);
     run("EventThread", PRIORITY_URGENT_DISPLAY + PRIORITY_MORE_FAVORABLE);
 }
 
@@ -90,8 +95,17 @@ void EventThread::requestNextVsync(
     Mutex::Autolock _l(mLock);
     if (connection->count < 0) {
         connection->count = 0;
+        if (mVsyncDisabled) {
+            // FIXME: how do we decide which display id the fake
+            // vsync came from ?
+            mVSyncEvent[0].header.type = DisplayEventReceiver::DISPLAY_EVENT_VSYNC;
+            mVSyncEvent[0].header.id = HWC_DISPLAY_PRIMARY;
+            mVSyncEvent[0].header.timestamp = systemTime(SYSTEM_TIME_MONOTONIC);
+            mVSyncEvent[0].vsync.count++;
+        }
         mCondition.broadcast();
     }
+
 }
 
 void EventThread::onScreenReleased() {
diff --git a/services/surfaceflinger/EventThread.h b/services/surfaceflinger/EventThread.h
index 62e8baa..bbbdf46 100644
--- a/services/surfaceflinger/EventThread.h
+++ b/services/surfaceflinger/EventThread.h
@@ -111,6 +111,7 @@ private:
 
     // for debugging
     bool mDebugVsyncEnabled;
+    bool mVsyncDisabled;
 };
 
 // ---------------------------------------------------------------------------
-- 
1.7.4.1

