From bd3ee710570bd27ef9a29bd7fa46e617f1b59646 Mon Sep 17 00:00:00 2001
From: Andrei V. FOMITCHEV <andreix.fomitchev@intel.com>
Date: Wed, 10 Oct 2012 11:35:19 +0200
Subject: [PORT FROM MAIN] memory init to avoid valgrind warnings

BZ: 61459

To avoid a valgrind warning, it is necessary to initialize the
allocated memory in Parcel.cpp This initialization should
avoid also an unpredictable behaviour because 0 is more
appropriate value that a random value from heap.
The issue has been found by valgrind when testing of mediaserver.

Change-Id: Ie2b4cc3fbdbc217fa4408c7bc3e9cb47b5d0d40e
Orig-Change-Id: I908bdbee902eb47bed82729ce90689078c0c8a8d
Signed-off-by: Andrei V. FOMITCHEV <andreix.fomitchev@intel.com>
Signed-off-by: Jin Wei <wei.a.jin@intel.com>
Reviewed-on: http://android.intel.com:8080/79218
Reviewed-by: Du, Chenyang <chenyang.du@intel.com>
Reviewed-by: Yao, Yong <yong.yao@intel.com>
Reviewed-by: Li, XiaojingX <xiaojingx.li@intel.com>
Tested-by: Li, XiaojingX <xiaojingx.li@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
---
 libs/binder/Parcel.cpp |    6 ++++--
 1 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/libs/binder/Parcel.cpp b/libs/binder/Parcel.cpp
index 8f7f7e7..138d3ad 100644
--- a/libs/binder/Parcel.cpp
+++ b/libs/binder/Parcel.cpp
@@ -1470,7 +1470,8 @@ status_t Parcel::continueWrite(size_t desired)
         size_t* objects = NULL;
         
         if (objectsSize) {
-            objects = (size_t*)malloc(objectsSize*sizeof(size_t));
+            //valgrind warning fix: it is necessary to initialize the allocated memory
+            objects = (size_t*)calloc(objectsSize, sizeof(size_t));
             if (!objects) {
                 mError = NO_MEMORY;
                 return NO_MEMORY;
@@ -1547,7 +1548,8 @@ status_t Parcel::continueWrite(size_t desired)
         
     } else {
         // This is the first data.  Easy!
-        uint8_t* data = (uint8_t*)malloc(desired);
+        //valgrind warning fix: it is necessary to initialize the allocated memory
+        uint8_t* data = (uint8_t*)calloc(desired, sizeof(uint8_t));
         if (!data) {
             mError = NO_MEMORY;
             return NO_MEMORY;
-- 
1.7.4.1

