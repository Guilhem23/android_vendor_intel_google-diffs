From 9b112aa29b5b2d23442b5bf4a48acf4344cf922c Mon Sep 17 00:00:00 2001
From: lwan89x <liangx.wang@intel.com>
Date: Wed, 17 Oct 2012 12:45:03 +0800
Subject: [PORT FROM MAIN] libutils: Fix type error in Unicode's utf8_length() method.

BZ: 41014

For Chinese characters, it codes would be larger than 128. So if use
signed char variable to hold these codes, they would be treated as
negative. That may cause some unexpected error.

Take character code 0xE69C88 for example. In this method, first_char
would be 0xE6, when we calculating value utf32 in statement
utf32 |= ((~to_ignore_mask) & first_char) << (6 * (num_to_read - 1));
first_char will be converted to int32_t type. If first_char was define
as singed char, it will be converted to 0xffffffe6, this lead to an
error fo utf32 calculating.

Upstream candidate.

Change-Id: Ibc0194703517daba2aae02d3260e6f2f1d2274a9
Orig-Change-Id: Id113adf20f1edacd26cd2eb7317e398afeeb3262
Signed-off-by: lwan89x <liangx.wang@intel.com>
Signed-off-by: bdeng3X <bingx.deng@intel.com>
Reviewed-on: http://android.intel.com:8080/75928
Reviewed-by: lab_cactus <lab_cactus@intel.com>
Reviewed-by: Yao, Yong <yong.yao@intel.com>
Reviewed-by: Li, XiaojingX <xiaojingx.li@intel.com>
Tested-by: Li, XiaojingX <xiaojingx.li@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
---
 libs/utils/Unicode.cpp |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/libs/utils/Unicode.cpp b/libs/utils/Unicode.cpp
index 41cbf03..a6aa2fa 100644
--- a/libs/utils/Unicode.cpp
+++ b/libs/utils/Unicode.cpp
@@ -365,7 +365,7 @@ ssize_t utf8_length(const char *src)
     const char *cur = src;
     size_t ret = 0;
     while (*cur != '\0') {
-        const char first_char = *cur++;
+        const unsigned char first_char = *cur++;
         if ((first_char & 0x80) == 0) { // ASCII
             ret += 1;
             continue;
-- 
1.7.4.1

