From 1a823407ab36c68b7ba273069d464d81ff0ab670 Mon Sep 17 00:00:00 2001
From: Lingyun Zhu <lingyun.zhu@intel.com>
Date: Wed, 21 Nov 2012 14:57:28 +0800
Subject: [PORT FROM MAIN] Graphics: Add more dump in EventThread to get the time of Last VSYNC

BZ: 63924

This patches is ported from JB-4.1 patch 71214 to JB-4.2.1 to
implemented the same function.

Change-Id: Idb7ed69a02a191b304c3580b6cf3dc0ada055822
Orig-Change-Id: I0379a546a3650754f3bd970f26b42cbe7721800a
Signed-off-by: Lingyun Zhu <lingyun.zhu@intel.com>
Reviewed-on: http://android.intel.com:8080/75108
Reviewed-by: lab_cactus <lab_cactus@intel.com>
Reviewed-by: Yao, Yong <yong.yao@intel.com>
Tested-by: Tong, BoX <box.tong@intel.com>
Reviewed-by: Tong, BoX <box.tong@intel.com>
Reviewed-by: buildbot <buildbot@intel.com>
Tested-by: buildbot <buildbot@intel.com>
---
 services/surfaceflinger/EventThread.cpp |   11 +++++++++++
 services/surfaceflinger/EventThread.h   |    2 ++
 2 files changed, 13 insertions(+), 0 deletions(-)

diff --git a/services/surfaceflinger/EventThread.cpp b/services/surfaceflinger/EventThread.cpp
index 4d0fc79..6263635 100644
--- a/services/surfaceflinger/EventThread.cpp
+++ b/services/surfaceflinger/EventThread.cpp
@@ -38,6 +38,8 @@ namespace android {
 
 EventThread::EventThread(const sp<SurfaceFlinger>& flinger)
     : mFlinger(flinger),
+      mLastVSyncTimestamp(0),
+      mLastVSyncDisplayType(-1),
       mUseSoftwareVSync(false),
       mDebugVsyncEnabled(false) {
 
@@ -177,6 +179,8 @@ Vector< sp<EventThread::Connection> > EventThread::waitForEvent(
 {
     Mutex::Autolock _l(mLock);
     Vector< sp<EventThread::Connection> > signalConnections;
+    nsecs_t currentVSyncTimestamp = 0;
+    int     currentVSyncDisplayType = -1;
 
     do {
         bool eventPending = false;
@@ -188,6 +192,8 @@ Vector< sp<EventThread::Connection> > EventThread::waitForEvent(
             timestamp = mVSyncEvent[i].header.timestamp;
             if (timestamp) {
                 // we have a vsync event to dispatch
+                currentVSyncTimestamp = timestamp;
+                currentVSyncDisplayType = i;
                 *event = mVSyncEvent[i];
                 mVSyncEvent[i].header.timestamp = 0;
                 vsyncCount = mVSyncEvent[i].vsync.count;
@@ -299,6 +305,9 @@ Vector< sp<EventThread::Connection> > EventThread::waitForEvent(
         }
     } while (signalConnections.isEmpty());
 
+    mLastVSyncTimestamp = currentVSyncTimestamp;
+    mLastVSyncDisplayType = currentVSyncDisplayType;
+
     // here we're guaranteed to have a timestamp and some connections to signal
     // (The connections might have dropped out of mDisplayEventConnections
     // while we were asleep, but we'll still have strong references to them.)
@@ -329,6 +338,8 @@ void EventThread::dump(String8& result, char* buffer, size_t SIZE) const {
     result.appendFormat("  numListeners=%u,\n  events-delivered: %u\n",
             mDisplayEventConnections.size(),
             mVSyncEvent[HWC_DISPLAY_PRIMARY].vsync.count);
+    result.appendFormat("  VSYNC came %lldus ago, display type is %d.\n",
+            ((systemTime(CLOCK_MONOTONIC) - mLastVSyncTimestamp)/1000), mLastVSyncDisplayType);
     for (size_t i=0 ; i<mDisplayEventConnections.size() ; i++) {
         sp<Connection> connection =
                 mDisplayEventConnections.itemAt(i).promote();
diff --git a/services/surfaceflinger/EventThread.h b/services/surfaceflinger/EventThread.h
index 1934f98..62e8baa 100644
--- a/services/surfaceflinger/EventThread.h
+++ b/services/surfaceflinger/EventThread.h
@@ -106,6 +106,8 @@ private:
     Vector< DisplayEventReceiver::Event > mPendingEvents;
     DisplayEventReceiver::Event mVSyncEvent[HWC_DISPLAY_TYPES_SUPPORTED];
     bool mUseSoftwareVSync;
+    nsecs_t mLastVSyncTimestamp;
+    int mLastVSyncDisplayType;
 
     // for debugging
     bool mDebugVsyncEnabled;
-- 
1.7.4.1

