From d7065eb4b647dc58ba1f25592867b7a6df579e36 Mon Sep 17 00:00:00 2001
From: ywan171 <yi.a.wang@intel.com>
Date: Sun, 12 May 2013 21:25:40 +0800
Subject: [PORT FROM MAIN]NuPlayer: fix httplive streaming reset timeout causing app ANR

BZ: 48710

Issue:
Playback httplive streaming from browser in full screen, drag progress bar
backward and forward, then press home key and open brower again, there would
be ANR happens.

Rootcause:
1. When ACodec in idletoexecuting state, it only handles the shutdown msg. If
   flush msg comes, it miss it then would enter a wrong state.

2. When seeking frequently, the httplive client need to request the right data
   from the server frequently. If the network is bad, there maybe block in
   requesting data from the server.

Fix:
1. Add timeout check in NuPlayerDriver::reset(), now just print log when > 4.5s, used to
   debug.
2. When reset, calling mSource->stop directly to disconnect for interuuptting the block read
   function.
Original patch:

40433: Fix reset timeout causing app ANR
Orig-Change-Id: Iaf26db4012ff6211ad6bdb279543f420b814ea11

94890:fix the conflict between patch 79670 and google's patch
Orig-Change-Id: I3e12b35200095430cc06f506590a42d1919b2709

Change-Id: If61d033e7d99499d7bcdf8413cb2df94b4817c9e
Signed-off-by: fxiao4X <fengx.xiao@intel.com>
Signed-off-by: ywan171 <yi.a.wang@intel.com>
---
 .../nuplayer/HTTPLiveSource.cpp                    |    6 ++++++
 .../nuplayer/HTTPLiveSource.h                      |    1 +
 media/libmediaplayerservice/nuplayer/NuPlayer.cpp  |    4 ++++
 .../nuplayer/NuPlayerDriver.cpp                    |    8 +++++++-
 4 files changed, 18 insertions(+), 1 deletions(-)

diff --git a/media/libmediaplayerservice/nuplayer/HTTPLiveSource.cpp b/media/libmediaplayerservice/nuplayer/HTTPLiveSource.cpp
index 574c136..34a28d7 100644
--- a/media/libmediaplayerservice/nuplayer/HTTPLiveSource.cpp
+++ b/media/libmediaplayerservice/nuplayer/HTTPLiveSource.cpp
@@ -279,5 +279,11 @@ void NuPlayer::HTTPLiveSource::onSessionNotify(const sp<AMessage> &msg) {
     }
 }
 
+void NuPlayer::HTTPLiveSource::stop() {
+    if (mLiveSession != NULL) {
+        mLiveSession->disconnect();
+    }
+}
+
 }  // namespace android
 
diff --git a/media/libmediaplayerservice/nuplayer/HTTPLiveSource.h b/media/libmediaplayerservice/nuplayer/HTTPLiveSource.h
index 067d1da..6a0e96a 100644
--- a/media/libmediaplayerservice/nuplayer/HTTPLiveSource.h
+++ b/media/libmediaplayerservice/nuplayer/HTTPLiveSource.h
@@ -36,6 +36,7 @@ struct NuPlayer::HTTPLiveSource : public NuPlayer::Source {
 
     virtual void prepareAsync();
     virtual void start();
+    virtual void stop();
 
     virtual status_t feedMoreTSData();
 
diff --git a/media/libmediaplayerservice/nuplayer/NuPlayer.cpp b/media/libmediaplayerservice/nuplayer/NuPlayer.cpp
index 8293c7e..7907196 100644
--- a/media/libmediaplayerservice/nuplayer/NuPlayer.cpp
+++ b/media/libmediaplayerservice/nuplayer/NuPlayer.cpp
@@ -271,6 +271,10 @@ void NuPlayer::resume() {
 }
 
 void NuPlayer::resetAsync() {
+    // force stop, there are block functions in mSource
+    if (mSource != NULL) {
+        mSource->stop();
+    }
     (new AMessage(kWhatReset, id()))->post();
 }
 
diff --git a/media/libmediaplayerservice/nuplayer/NuPlayerDriver.cpp b/media/libmediaplayerservice/nuplayer/NuPlayerDriver.cpp
index 7547796..3b5925b 100644
--- a/media/libmediaplayerservice/nuplayer/NuPlayerDriver.cpp
+++ b/media/libmediaplayerservice/nuplayer/NuPlayerDriver.cpp
@@ -28,6 +28,8 @@
 #include <media/stagefright/MetaData.h>
 
 namespace android {
+// set 4.5 s timeout to avoid block causing ANR
+const static int64_t kTimeOutInNs = 4500000000LL;
 
 NuPlayerDriver::NuPlayerDriver()
     : mState(STATE_IDLE),
@@ -351,7 +353,11 @@ status_t NuPlayerDriver::reset() {
     mPlayer->resetAsync();
 
     while (mState == STATE_RESET_IN_PROGRESS) {
-        mCondition.wait(mLock);
+        status_t err = mCondition.waitRelative(mLock, kTimeOutInNs);
+        if (err != OK) {
+            // in some extreme condition, shouldn't be here
+            ALOGW("reset time out, shouldn't be here");
+        }
     }
 
     mDurationUs = -1;
-- 
1.7.4.1

