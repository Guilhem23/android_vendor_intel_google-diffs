From 90c8b7bd13cf34c9e6b1881b2fdd917fdbb4b948 Mon Sep 17 00:00:00 2001
From: Dan Liang <dan.liang@intel.com>
Date: Tue, 30 Apr 2013 14:27:27 +0800
Subject: [PORT FROM MAIN] Enable dynamic resolution change on JellyBean

BZ: 49730

Original patch:
46646 (BZ: 34019)

support dynamic resolution change both for local playback and streaming

Change-Id: I7be1ea94f71a3b9b946a8aedbbd6578825943cf3
Orig-Change-Id: I276baad9f14e4cc79f6f29b1dbc66fe881473c6c
Signed-off-by: Weian Chen <weian.chen@intel.com>
Signed-off-by: ywan171 <yi.a.wang@intel.com>
Signed-off-by: Dan Liang <dan.liang@intel.com>
---
 include/media/stagefright/ACodec.h   |    1 +
 include/media/stagefright/MetaData.h |    1 +
 include/media/stagefright/OMXCodec.h |    2 +
 media/libstagefright/ACodec.cpp      |   33 ++++++++++++++++++++++++--
 media/libstagefright/OMXCodec.cpp    |   41 ++++++++++++++++++++++++++++++---
 5 files changed, 71 insertions(+), 7 deletions(-)

diff --git a/include/media/stagefright/ACodec.h b/include/media/stagefright/ACodec.h
index df25d7b..2dfcaf1 100644
--- a/include/media/stagefright/ACodec.h
+++ b/include/media/stagefright/ACodec.h
@@ -181,6 +181,7 @@ private:
     List<sp<AMessage> > mDeferredQueue;
 
     bool mSentFormat;
+    bool mFirstFrame;
     bool mIsEncoder;
 
     bool mShutdownInProgress;
diff --git a/include/media/stagefright/MetaData.h b/include/media/stagefright/MetaData.h
index e22b499..7b7b3a8 100644
--- a/include/media/stagefright/MetaData.h
+++ b/include/media/stagefright/MetaData.h
@@ -96,6 +96,7 @@ enum {
     kKeyCompilation       = 'cpil',  // cstring
     kKeyLocation          = 'loc ',  // cstring
     kKeyTimeScale         = 'tmsl',  // int32_t
+    KKeyCropChange        = 'crch',  // int32_t (bool)
 
     // video profile and level
     kKeyVideoProfile      = 'vprf',  // int32_t
diff --git a/include/media/stagefright/OMXCodec.h b/include/media/stagefright/OMXCodec.h
index d099056..fbb5a95 100644
--- a/include/media/stagefright/OMXCodec.h
+++ b/include/media/stagefright/OMXCodec.h
@@ -203,6 +203,8 @@ private:
     status_t mFinalStatus;
     bool mNoMoreOutputData;
     bool mOutputPortSettingsHaveChanged;
+    bool mFirstFrame;
+    bool mCropInfoChanged;
     int64_t mSeekTimeUs;
     ReadOptions::SeekMode mSeekMode;
     int64_t mTargetTimeUs;
diff --git a/media/libstagefright/ACodec.cpp b/media/libstagefright/ACodec.cpp
index 8d5050b..a2c8d4c 100644
--- a/media/libstagefright/ACodec.cpp
+++ b/media/libstagefright/ACodec.cpp
@@ -358,6 +358,7 @@ ACodec::ACodec()
     : mQuirks(0),
       mNode(NULL),
       mSentFormat(false),
+      mFirstFrame(true),
       mIsEncoder(false),
       mShutdownInProgress(false),
       mEncoderDelay(0),
@@ -2299,8 +2300,6 @@ void ACodec::sendFormatChange(const sp<AMessage> &reply) {
                 CHECK_GE(rect.nTop, 0);
                 CHECK_GE(rect.nWidth, 0u);
                 CHECK_GE(rect.nHeight, 0u);
-                CHECK_LE(rect.nLeft + rect.nWidth - 1, videoDef->nFrameWidth);
-                CHECK_LE(rect.nTop + rect.nHeight - 1, videoDef->nFrameHeight);
 
                 notify->setRect(
                         "crop",
@@ -3074,7 +3073,8 @@ bool ACodec::BaseState::onOMXFillBufferDone(
             sp<AMessage> reply =
                 new AMessage(kWhatOutputBufferDrained, mCodec->id());
 
-            if (!mCodec->mSentFormat) {
+            if (!mCodec->mIsEncoder && !mCodec->mSentFormat
+                && mCodec->mNativeWindow == NULL) {
                 mCodec->sendFormatChange(reply);
             }
 
@@ -3100,6 +3100,20 @@ bool ACodec::BaseState::onOMXFillBufferDone(
 
             reply->setPointer("buffer-id", info->mBufferID);
 
+            if (!mCodec->mIsEncoder && !mCodec->mSentFormat) {
+                ALOGV("Applying format change firstFrame=%d", mCodec->mFirstFrame);
+                // Do cropping for the first frame before
+                // the frame is send out. For the subsequent frames
+                // the cropping has to be done AFTER the frame is send
+                if (mCodec->mFirstFrame) {
+                    mCodec->sendFormatChange(reply);
+                } else {
+                    reply->setInt32("sent-format", mCodec->mSentFormat);
+                    mCodec->mSentFormat = true;
+                }
+            }
+            mCodec->mFirstFrame = false;
+
             notify->setMessage("reply", reply);
 
             notify->post();
@@ -3149,6 +3163,19 @@ void ACodec::BaseState::onOutputBufferDrained(const sp<AMessage> &msg) {
     }
 
     int32_t render;
+    // The client may choose not to render a buffer but we will
+    // need to apply the format change regardless as we would get
+    // only one format change call, associated with a buffer.
+    int32_t sentformat;
+    sp<AMessage> reply =
+        new AMessage(kWhatOutputBufferDrained, mCodec->id());
+
+    if (msg->findInt32("sent-format", &sentformat)) {
+        if (!sentformat) {
+            mCodec->sendFormatChange(reply);
+        }
+    }
+
     if (mCodec->mNativeWindow != NULL
             && msg->findInt32("render", &render) && render != 0
             && (info->mData == NULL || info->mData->size() != 0)) {
diff --git a/media/libstagefright/OMXCodec.cpp b/media/libstagefright/OMXCodec.cpp
index 99ee23c..97e7ccf 100644
--- a/media/libstagefright/OMXCodec.cpp
+++ b/media/libstagefright/OMXCodec.cpp
@@ -1496,6 +1496,8 @@ OMXCodec::OMXCodec(
       mSignalledEOS(false),
       mNoMoreOutputData(false),
       mOutputPortSettingsHaveChanged(false),
+      mCropInfoChanged(false),
+      mFirstFrame(true),
       mSeekTimeUs(-1),
       mSeekMode(ReadOptions::SEEK_CLOSEST_SYNC),
       mTargetTimeUs(-1),
@@ -2391,6 +2393,11 @@ void OMXCodec::on_message(const omx_message &msg) {
                 buffer->meta_data()->setInt64(
                         kKeyTime, msg.u.extended_buffer_data.timestamp);
 
+                if (mCropInfoChanged) {
+                    buffer->meta_data()->setInt32(KKeyCropChange, true);
+                    mCropInfoChanged = false;
+                }
+
                 if (msg.u.extended_buffer_data.flags & OMX_BUFFERFLAG_SYNCFRAME) {
                     buffer->meta_data()->setInt32(kKeyIsSyncFrame, true);
                 }
@@ -2566,6 +2573,7 @@ void OMXCodec::onEvent(OMX_EVENTTYPE event, OMX_U32 data1, OMX_U32 data2) {
                 // when the OMX_EventPortSettingsChanged is not meant for reallocating
                 // the output buffers.
                 if (data1 == kPortIndexOutput) {
+                    mFilledBuffers.clear();
                     CHECK(mFilledBuffers.empty());
                 }
                 onPortSettingsChanged(data1);
@@ -2573,8 +2581,19 @@ void OMXCodec::onEvent(OMX_EVENTTYPE event, OMX_U32 data1, OMX_U32 data2) {
                         (data2 == OMX_IndexConfigCommonOutputCrop ||
                          data2 == OMX_IndexConfigCommonScale)) {
 
+                if (data2 == OMX_IndexConfigCommonOutputCrop) {
+                    mCropInfoChanged = true;
+                    // Do cropping for the first frame before
+                    // the frame is send out. For the subsequent frames
+                    // the cropping has to be done AFTER the frame is send
+                    if (!mFirstFrame) {
+                        break;
+                    }
+                }
+
                 sp<MetaData> oldOutputFormat = mOutputFormat;
                 initOutputFormat(mSource->getFormat());
+                mCropInfoChanged = false;
 
                 if (data2 == OMX_IndexConfigCommonOutputCrop &&
                     formatHasNotablyChanged(oldOutputFormat, mOutputFormat)) {
@@ -2905,7 +2924,7 @@ status_t OMXCodec::freeBuffersOnPort(
     for (size_t i = buffers->size(); i-- > 0;) {
         BufferInfo *info = &buffers->editItemAt(i);
 
-        if (onlyThoseWeOwn && info->mStatus == OWNED_BY_COMPONENT) {
+        if (onlyThoseWeOwn && (info->mStatus == OWNED_BY_COMPONENT || info->mStatus==OWNED_BY_CLIENT)) {
             continue;
         }
 
@@ -3839,6 +3858,8 @@ status_t OMXCodec::start(MetaData *meta) {
     mSignalledEOS = false;
     mNoMoreOutputData = false;
     mOutputPortSettingsHaveChanged = false;
+    mCropInfoChanged = false;
+    mFirstFrame = true;
     mSeekTimeUs = -1;
     mSeekMode = ReadOptions::SEEK_CLOSEST_SYNC;
     mTargetTimeUs = -1;
@@ -4110,16 +4131,30 @@ status_t OMXCodec::read(
 
 void OMXCodec::signalBufferReturned(MediaBuffer *buffer) {
     Mutex::Autolock autoLock(mLock);
+    int cropchange = 0;
 
     Vector<BufferInfo> *buffers = &mPortBuffers[kPortIndexOutput];
     for (size_t i = 0; i < buffers->size(); ++i) {
         BufferInfo *info = &buffers->editItemAt(i);
 
         if (info->mMediaBuffer == buffer) {
-            CHECK_EQ((int)mPortStatus[kPortIndexOutput], (int)ENABLED);
             CHECK_EQ((int)info->mStatus, (int)OWNED_BY_CLIENT);
+            if (mPortStatus[kPortIndexOutput] == DISABLING) {
+                CODEC_LOGV("Port is disabled, freeing buffer %p", buffer);
+                status_t err = freeBuffer(kPortIndexOutput, i);
+                CHECK_EQ(err, (status_t)OK);
+                return;
+            }
+            CHECK_EQ((int)mPortStatus[kPortIndexOutput], (int)ENABLED);
 
             info->mStatus = OWNED_BY_US;
+            if (buffer->meta_data()->findInt32(KKeyCropChange, &cropchange) && cropchange) {
+                sp<MetaData> oldOutputFormat = mOutputFormat;
+                initOutputFormat(mSource->getFormat());
+                if (formatHasNotablyChanged(oldOutputFormat, mOutputFormat)) {
+                    mOutputPortSettingsHaveChanged = true;
+                }
+             }
 
             if (buffer->graphicBuffer() == 0) {
                 fillOutputBuffer(info);
@@ -4674,8 +4709,6 @@ void OMXCodec::initOutputFormat(const sp<MetaData> &inputFormat) {
                     CHECK_GE(rect.nTop, 0);
                     CHECK_GE(rect.nWidth, 0u);
                     CHECK_GE(rect.nHeight, 0u);
-                    CHECK_LE(rect.nLeft + rect.nWidth - 1, video_def->nFrameWidth);
-                    CHECK_LE(rect.nTop + rect.nHeight - 1, video_def->nFrameHeight);
 
                     mOutputFormat->setRect(
                             kKeyCropRect,
-- 
1.7.4.1

