From 453cf879f28e1a491e4e4c1c7ba2dfbe198ec4ec Mon Sep 17 00:00:00 2001
From: Arulselvan M <arulselvan.m@intel.com>
Date: Fri, 31 May 2013 00:12:04 +0530
Subject: [PORT FROM MAIN] Tombstone in /system/bin/mediaserver (AVI Extractor crash) while playing unsupported AVI files

BZ: 76827

When AVI files with AAC content having unsupported sampling rate is played, it is
giving fatal error and hence tombstone is observed. Added a condition to check the
sampling rates which are supported and return error if unsupported sampling rate
is encountered.

Change-Id: Id5220a393bb3d736729f412f6e532619bd5ee97c
Orig-Change-Id: I21d330539dd011af136b58d0a8464c7bd5e85f5c
Signed-off-by: Mazhar <mazharx.sameullah@intel.com>
Signed-off-by: Arulselvan M <arulselvan.m@intel.com>
---
 media/libstagefright/AVIExtractor.cpp |   20 ++++++++++++++++++++
 1 files changed, 20 insertions(+), 0 deletions(-)

diff --git a/media/libstagefright/AVIExtractor.cpp b/media/libstagefright/AVIExtractor.cpp
index ff6c1b7..0fc5754 100644
--- a/media/libstagefright/AVIExtractor.cpp
+++ b/media/libstagefright/AVIExtractor.cpp
@@ -674,6 +674,22 @@ status_t AVIExtractor::parseStreamHeader(off64_t offset, size_t size) {
     return OK;
 }
 
+// Returns the sample rate based on the sampling frequency index
+static uint32_t get_sample_rate(const uint8_t sf_index)
+{
+    static const uint32_t sample_rates[] =
+    {
+        96000, 88200, 64000, 48000, 44100, 32000,
+        24000, 22050, 16000, 12000, 11025, 8000
+    };
+
+    if (sf_index < sizeof(sample_rates) / sizeof(sample_rates[0])) {
+        return sample_rates[sf_index];
+    }
+
+    return 0;
+}
+
 status_t AVIExtractor::parseStreamFormat(off64_t offset, size_t size) {
     if (mTracks.isEmpty()) {
         return ERROR_MALFORMED;
@@ -727,6 +743,10 @@ status_t AVIExtractor::parseStreamFormat(off64_t offset, size_t size) {
             uint8_t profile, sf_index, channels;
             profile = (data[18] >> 3) -1;
             sf_index = (((data[18] & 0x7) << 1 ) | (data[19] >> 0x7));
+            uint32_t sr = get_sample_rate(sf_index);
+            if (sr == 0) {
+                return ERROR_MALFORMED;
+            }
             channels = (data[19] & 0x7F) >> 3;
             track->mMeta = MakeAACCodecSpecificData(profile, sf_index, channels);
             return OK;
-- 
1.7.4.1

