From a3daf34ac0fdc967728dd6080ffd0ad9946991c4 Mon Sep 17 00:00:00 2001
From: Xiao,Feng <fengx.xiao@intel.com>
Date: Tue, 12 Mar 2013 17:57:50 +0800
Subject: [PORT FROM MAIN]unblock MediaExtractor::Create and MediaExtractor::countTracks in finishSetDataSource_l

BZ: 89071

To setup video decoder, it needs to get meta data from tracks. Unlock the countTracks
to avoid block other calling.

Change-Id: I271c17bd79da69fcf3d486cb23287f197dc862df
Orig-Change-Id: Idfc7325343f745d94552853469d45fe23e0e82bb
Signed-off-by: Xiao,Feng <fengx.xiao@intel.com>
---
 media/libstagefright/AwesomePlayer.cpp |   20 ++++++++++++++++----
 1 files changed, 16 insertions(+), 4 deletions(-)

diff --git a/media/libstagefright/AwesomePlayer.cpp b/media/libstagefright/AwesomePlayer.cpp
index 2788b2a..984095f 100644
--- a/media/libstagefright/AwesomePlayer.cpp
+++ b/media/libstagefright/AwesomePlayer.cpp
@@ -2070,6 +2070,7 @@ status_t AwesomePlayer::finishSetDataSource_l() {
     }
 
     AString sniffedMIME;
+    sp<MediaExtractor> extractorTemp = NULL;
 
     if (!strncasecmp("http://", mUri.string(), 7)
             || !strncasecmp("https://", mUri.string(), 8)
@@ -2188,7 +2189,15 @@ status_t AwesomePlayer::finishSetDataSource_l() {
 
                     usleep(200000);
                 }
-
+                extractorTemp = MediaExtractor::Create(
+                        dataSource, sniffedMIME.empty() ? NULL : sniffedMIME.c_str());
+                if (extractorTemp != NULL) {
+                    // ensure get the metadata
+                    extractorTemp->countTracks();
+                } else {
+                    mLock.lock();
+                    return UNKNOWN_ERROR;
+                }
                 mLock.lock();
             }
 
@@ -2231,9 +2240,12 @@ status_t AwesomePlayer::finishSetDataSource_l() {
             mWVMExtractor->setUID(mUID);
         extractor = mWVMExtractor;
     } else {
-        extractor = MediaExtractor::Create(
-                dataSource, sniffedMIME.empty() ? NULL : sniffedMIME.c_str());
-
+        if (extractorTemp != NULL) {
+            extractor = extractorTemp;
+        } else {
+            extractor = MediaExtractor::Create(
+                    dataSource, sniffedMIME.empty() ? NULL : sniffedMIME.c_str());
+        }
         if (extractor == NULL) {
             return UNKNOWN_ERROR;
         }
-- 
1.7.4.1

