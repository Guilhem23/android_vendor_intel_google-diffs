From d0bdf10cc330c61f474112ffa81413d597f04637 Mon Sep 17 00:00:00 2001
From: Dan Liang <dan.liang@intel.com>
Date: Thu, 2 May 2013 16:41:00 +0800
Subject: [PORT FROM MAIN] libstagefright: A fix to stop while statement from falling into infinite loop

BZ: 81360

Fix a klocwork issue that WHILE statement may fall into
infinite loop

Change-Id: Iac068383f56b53dcbe6b944bc0aa61650b72384b
Orig-Change-Id: If8506c2fd82da64ce419a5650438ba2cc58cacdc
Signed-off-by: Tianmi Chen <tianmi.chen@intel.com>
Signed-off-by: Dan Liang <dan.liang@intel.com>
---
 media/libstagefright/ThreadedSource.cpp |   10 ++++++++--
 1 files changed, 8 insertions(+), 2 deletions(-)

diff --git a/media/libstagefright/ThreadedSource.cpp b/media/libstagefright/ThreadedSource.cpp
index 462d55e..c3f3ea0 100644
--- a/media/libstagefright/ThreadedSource.cpp
+++ b/media/libstagefright/ThreadedSource.cpp
@@ -102,12 +102,18 @@ status_t ThreadedSource::read(
         msg->post();
 
         while (!seekComplete) {
-            mCondition.wait(mLock);
+            status_t err = mCondition.wait(mLock);
+            if (err != OK) {
+                return err;
+            }
         }
     }
 
     while (mQueue.empty() && mFinalResult == OK) {
-        mCondition.wait(mLock);
+        status_t err = mCondition.wait(mLock);
+        if (err != OK) {
+            return err;
+        }
     }
 
     if (!mQueue.empty()) {
-- 
1.7.4.1

