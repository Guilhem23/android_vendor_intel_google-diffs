From 4e2e093d65f26a2f3a7ea0d90835a975dfd87b4b Mon Sep 17 00:00:00 2001
From: Mazhar <mazharx.sameullah@intel.com>
Date: Thu, 28 Feb 2013 17:56:39 +0530
Subject: [PORT FROM MAIN]Audio effects are not working after HDMI Plugout

BZ: 86005

When device is switched from IHF to HDMI, after creating the track. the moveEffectChain_l will
be invoked to move the effects from previous thread to the new output thread but when the
HDMI is plugged out the effect chain was not getting moved back to the previous thread. This
was taken care for offload case in the closeOutput function. Enabled this change for all cases.

Orig-Change-Id: I8b39b0d5f51f2add4606a9bd081f103f7c43c006
Signed-off-by: Mazhar <mazharx.sameullah@intel.com>

Change-Id: Ib5575d543ed744e70932515f2ed46c13a47c966f
Signed-off-by: Arulselvan M <arulselvan.m@intel.com>
---
 services/audioflinger/AudioFlinger.cpp |   36 +++++++++++++------------------
 services/audioflinger/Threads.cpp      |    2 -
 2 files changed, 15 insertions(+), 23 deletions(-)

diff --git a/services/audioflinger/AudioFlinger.cpp b/services/audioflinger/AudioFlinger.cpp
index 5421200..4f295d5 100644
--- a/services/audioflinger/AudioFlinger.cpp
+++ b/services/audioflinger/AudioFlinger.cpp
@@ -1589,6 +1589,7 @@ status_t AudioFlinger::closeOutput_nonvirtual(audio_io_handle_t output)
     sp<PlaybackThread> thread;
     {
         Mutex::Autolock _l(mLock);
+        Vector<int> sessionIds;
         thread = checkPlaybackThread_l(output);
         if (thread == NULL) {
             return BAD_VALUE;
@@ -1605,29 +1606,22 @@ status_t AudioFlinger::closeOutput_nonvirtual(audio_io_handle_t output)
                 }
             }
         }
-//To be checked as close is called in nonvirtual
-#ifdef INTEL_MUSIC_OFFLOAD_FEATURE
-        if (thread->isOffloadTrack()) {
-            Vector<int> sessionIds;
-
-            thread->getEffectSessionIds(sessionIds);
-            ALOGV("closeOutput: EffectSessionIds vector size: %d", sessionIds.size());
-            // save all audio effects created in the offload thread to the default thread
-            for (size_t i=0; i < sessionIds.size(); i++) {
-                int output=0;
-                if (mPlaybackThreads.size()) {
-                    output = mPlaybackThreads.keyAt(0);
-                    ALOGV("closeOutput: Target new output=%d", output);
-                    PlaybackThread *dstThread = checkPlaybackThread_l(output);
-                    PlaybackThread *srcThread = (PlaybackThread *) thread.get();
-
-                    Mutex::Autolock _dl(dstThread->mLock);
-                    Mutex::Autolock _sl(srcThread->mLock);
-                    moveEffectChain_l(sessionIds[i], srcThread, dstThread, true);
-                }
+
+        thread->getEffectSessionIds(sessionIds);
+        ALOGV("closeOutput: EffectSessionIds vector size: %d", sessionIds.size());
+        // save all audio effects created in the offload thread to the default thread
+        for (size_t i=0; i < sessionIds.size(); i++) {
+            int output=0;
+            if (mPlaybackThreads.size()) {
+                output = mPlaybackThreads.keyAt(0);
+                ALOGV("closeOutput: Target new output=%d", output);
+                PlaybackThread *dstThread = checkPlaybackThread_l(output);
+                PlaybackThread *srcThread = (PlaybackThread *) thread.get();
+                Mutex::Autolock _dl(dstThread->mLock);
+                Mutex::Autolock _sl(srcThread->mLock);
+                moveEffectChain_l(sessionIds[i], srcThread, dstThread, true);
             }
         }
-#endif
         audioConfigChanged_l(AudioSystem::OUTPUT_CLOSED, output, NULL);
         mPlaybackThreads.removeItem(output);
     }
diff --git a/services/audioflinger/Threads.cpp b/services/audioflinger/Threads.cpp
index b412af5..d076e66 100644
--- a/services/audioflinger/Threads.cpp
+++ b/services/audioflinger/Threads.cpp
@@ -1564,12 +1564,10 @@ uint32_t AudioFlinger::PlaybackThread::hasAudioSession(int sessionId) const
 
 void AudioFlinger::PlaybackThread::getEffectSessionIds(Vector<int> &sessionIds)
 {
-#ifdef INTEL_MUSIC_OFFLOAD_FEATURE
     size_t size = mEffectChains.size();
     for (size_t i=0; i < size; i++) {
         sessionIds.add(mEffectChains[i]->sessionId());
     }
-#endif
 }
 	
 uint32_t AudioFlinger::PlaybackThread::getStrategyForSession_l(int sessionId)
-- 
1.7.4.1

