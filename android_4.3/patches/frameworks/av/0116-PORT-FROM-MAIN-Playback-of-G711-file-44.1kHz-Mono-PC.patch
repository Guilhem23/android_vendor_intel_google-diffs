From ba88001a103cc496e327552935c7c456b4dc5f84 Mon Sep 17 00:00:00 2001
From: Muthukumar K <muthukumar.kandasamy@intel.com>
Date: Tue, 28 Aug 2012 19:01:19 +0530
Subject: [PORT FROM MAIN]Playback of G711 file (44.1kHz, Mono, PCM_8) is not proper

BZ: 53601

G711 codec in Android assumes 8k as the sample rate. This has
been changed to take the samplerate from the content.
A new quirk is added for this.

Orig-Change-Id: Ie9add108a6b95febfac68bea337b7ea984c9c516
Signed-off-by: Muthukumar K <muthukumar.kandasamy@intel.com>

Change-Id: I6529ca46596f71da52fff39083beca9a5ee1a7dc
Signed-off-by: Arulselvan M <arulselvan.m@intel.com>
---
 include/media/stagefright/OMXCodec.h |    3 ++-
 media/libstagefright/OMXCodec.cpp    |   20 ++++++++++++++++----
 2 files changed, 18 insertions(+), 5 deletions(-)

diff --git a/include/media/stagefright/OMXCodec.h b/include/media/stagefright/OMXCodec.h
index 9317742..390074e 100644
--- a/include/media/stagefright/OMXCodec.h
+++ b/include/media/stagefright/OMXCodec.h
@@ -100,6 +100,7 @@ struct OMXCodec : public MediaSource,
         kSupportsMultipleFramesPerInputBuffer = 1024,
         kRequiresLargerEncoderOutputBuffer    = 2048,
         kOutputBuffersAreUnreadable           = 4096,
+        kRequiresSampleRate                   = 131072,
     };
 
     struct CodecNameAndQuirks {
@@ -250,7 +251,7 @@ private:
             int32_t numChannels, int32_t sampleRate, int32_t bitRate,
             int32_t aacProfile, bool isADTS);
 
-    void setG711Format(int32_t numChannels);
+    void setG711Format(int32_t numChannels, int32_t sampleRate);
     status_t setALACFormat( void *pConfig );
 
     status_t setVideoPortFormatType(
diff --git a/media/libstagefright/OMXCodec.cpp b/media/libstagefright/OMXCodec.cpp
index 18d575c..56b87d9 100644
--- a/media/libstagefright/OMXCodec.cpp
+++ b/media/libstagefright/OMXCodec.cpp
@@ -309,6 +309,10 @@ uint32_t OMXCodec::getComponentQuirks(
         const MediaCodecList *list, size_t index) {
     uint32_t quirks = 0;
     if (list->codecHasQuirk(
+                index, "codec-requires-samplerate")) {
+        quirks |= kRequiresSampleRate;
+    }
+     if (list->codecHasQuirk(
                 index, "requires-allocate-on-input-ports")) {
         quirks |= kRequiresAllocateBufferOnInputPorts;
     }
@@ -650,7 +654,10 @@ status_t OMXCodec::configureCodec(const sp<MetaData> &meta) {
         int32_t numChannels;
         CHECK(meta->findInt32(kKeyChannelCount, &numChannels));
 
-        setG711Format(numChannels);
+        int32_t sampleRate;
+        CHECK(meta->findInt32(kKeySampleRate, &sampleRate));
+
+        setG711Format(numChannels, sampleRate);
     } else if (!strcasecmp(MEDIA_MIMETYPE_AUDIO_ALAC, mMIME)) {
         ALOGV("configureCodec: case ALAC\n");
         uint32_t type;
@@ -3735,9 +3742,9 @@ status_t OMXCodec::setALACFormat( void *pConfig ) {
     ALOGV("EXIT setALACFormat\n");
     return OK;
 }
-void OMXCodec::setG711Format(int32_t numChannels) {
+void OMXCodec::setG711Format(int32_t numChannels, int32_t sampleRate) {
     CHECK(!mIsEncoder);
-    setRawAudioFormat(kPortIndexInput, 8000, numChannels);
+    setRawAudioFormat(kPortIndexInput, sampleRate, numChannels);
 }
 
 void OMXCodec::setImageOutputFormat(
@@ -4648,7 +4655,12 @@ void OMXCodec::initOutputFormat(const sp<MetaData> &inputFormat) {
                         (mQuirks & kDecoderLiesAboutNumberOfChannels)
                             ? numChannels : params.nChannels);
 
-                mOutputFormat->setInt32(kKeySampleRate, params.nSamplingRate);
+                // The codec-reported sampleRate is not reliable. It assumes
+                // 8k always...
+                mOutputFormat->setInt32(
+                        kKeySampleRate,
+                        (mQuirks & kRequiresSampleRate)
+                            ? sampleRate : params.nSamplingRate);
             } else if (audio_def->eEncoding == OMX_AUDIO_CodingAMR) {
                 OMX_AUDIO_PARAM_AMRTYPE amr;
                 InitOMXParams(&amr);
-- 
1.7.4.1

