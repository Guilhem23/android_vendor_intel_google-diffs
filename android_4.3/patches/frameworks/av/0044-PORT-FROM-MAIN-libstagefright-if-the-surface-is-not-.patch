From 26d0899ee5a258d5aa13f93dbef80fc37f85d9e5 Mon Sep 17 00:00:00 2001
From: Dan Liang <dan.liang@intel.com>
Date: Thu, 2 May 2013 16:57:06 +0800
Subject: [PORT FROM MAIN] libstagefright: if the surface is not composed by surfaceFlinger,do not pass the native window to video HAL

BZ: 92956

if the surfaceTexture is not composed by surfaceFlinger, for example, video edit preview mode and HTML5
inline mode.the app will not pass the NV12 buffer to HWC, and the NV12 buffer will be disposed by openGL
and convert to RGB in application. if the surfaceTexture is not composed by surfaceFlinger, we do not pass nativewindow
to libmix, in such case, the waiting for decode buffer ready should be done in decode thread to avoid tearing or color line
in such use case,

Change-Id: Ie0bf22dbf76b04bedc1ddeeee1ccc2b79a4f33c8
Orig-Change-Id: If5db9fd2641f30b5623a33334ba4ee78d59f735a
Signed-off-by: ywan171 <yi.a.wang@intel.com>
Signed-off-by: Dan Liang <dan.liang@intel.com>
---
 media/libstagefright/ACodec.cpp   |    4 +++-
 media/libstagefright/OMXCodec.cpp |   26 ++++++++++++++------------
 2 files changed, 17 insertions(+), 13 deletions(-)

diff --git a/media/libstagefright/ACodec.cpp b/media/libstagefright/ACodec.cpp
index 1ec92f8..6f9fc94 100644
--- a/media/libstagefright/ACodec.cpp
+++ b/media/libstagefright/ACodec.cpp
@@ -2091,7 +2091,9 @@ status_t ACodec::setVideoFormatOnPort(
 
 status_t ACodec::initNativeWindow() {
     if (mNativeWindow != NULL) {
-        if (mOMX->livesLocally(mNode,getpid())){
+        int wcom = 0;
+        mNativeWindow->query(mNativeWindow.get(),NATIVE_WINDOW_QUEUES_TO_WINDOW_COMPOSER,&wcom);
+        if (mOMX->livesLocally(mNode,getpid()) && (wcom == 1)){
             OMX_PARAM_PORTDEFINITIONTYPE def;
             OMX_VIDEO_PORTDEFINITIONTYPE *video_def = &def.format.video;
 
diff --git a/media/libstagefright/OMXCodec.cpp b/media/libstagefright/OMXCodec.cpp
index 0a07a59..824b767 100644
--- a/media/libstagefright/OMXCodec.cpp
+++ b/media/libstagefright/OMXCodec.cpp
@@ -1397,18 +1397,20 @@ status_t OMXCodec::setVideoOutputFormat(
             ALOGW("Set decode rotation failed");
         }
 
-        if (mNativeWindow != NULL && mOMX->livesLocally(mNode,getpid())){
-            InitOMXParams(&def);
-            def.nPortIndex = kPortIndexInput;
-
-            err = mOMX->getParameter(
-                    mNode, OMX_IndexParamPortDefinition, &def, sizeof(def));
-            CHECK_EQ(err, (status_t)OK);
-
-            ALOGD("set NativeWindow = %p",mNativeWindow.get());
-            video_def->pNativeWindow = mNativeWindow.get();
-            err = mOMX->setParameter(
-                    mNode, OMX_IndexParamPortDefinition, &def, sizeof(def));
+        if (mNativeWindow != NULL && mOMX->livesLocally(mNode,getpid())) {
+            int wcom = 0;
+            mNativeWindow->query(mNativeWindow.get(),NATIVE_WINDOW_QUEUES_TO_WINDOW_COMPOSER,&wcom);
+            if (wcom == 1) {
+                InitOMXParams(&def);
+                def.nPortIndex = kPortIndexInput;
+                err = mOMX->getParameter(
+                        mNode, OMX_IndexParamPortDefinition, &def, sizeof(def));
+                CHECK_EQ(err, (status_t)OK);
+                ALOGD("set NativeWindow = %p",mNativeWindow.get());
+                video_def->pNativeWindow = mNativeWindow.get();
+                err = mOMX->setParameter(
+                        mNode, OMX_IndexParamPortDefinition, &def, sizeof(def));
+            }
         }
     }
     return err;
-- 
1.7.4.1

