From 4b5794b51eea78b0b8067aaba19ebc592664d7d6 Mon Sep 17 00:00:00 2001
From: Gu, Wangyi <wangyi.gu@intel.com>
Date: Tue, 21 Aug 2012 09:37:56 +0800
Subject: [PORT FROM MAIN]Update the rotation information before playing new clips

BZ: 52749

The rotation degree information must be updated when
playing several video clips one by one in video editor.
The clips use the same ANativewindow to render video frames.
If the first rendered clip have 90, 180 or 270 rotation
degrees, the following clips will also use the this
information to rotate. This is not right. Rotation degree
must be updated before rendering frames of a new video clips.
Original BZ: 33132

DO NOT UPSTREAM!

Change-Id: I8a0ce05a2519ca35784b6b7dce20e98bb23ef354
Orig-Change-Id: I9cec4f59b718f785b29dc960cc98301af820d414
Signed-off-by: Gu, Wangyi <wangyi.gu@intel.com>
Signed-off-by: Dan Liang <dan.liang@intel.com>
---
 libvideoeditor/lvpp/NativeWindowRenderer.cpp |   13 +++++++++++++
 libvideoeditor/lvpp/NativeWindowRenderer.h   |    1 +
 2 files changed, 14 insertions(+), 0 deletions(-)

diff --git a/libvideoeditor/lvpp/NativeWindowRenderer.cpp b/libvideoeditor/lvpp/NativeWindowRenderer.cpp
index 702900b..d0fe8a8 100755
--- a/libvideoeditor/lvpp/NativeWindowRenderer.cpp
+++ b/libvideoeditor/lvpp/NativeWindowRenderer.cpp
@@ -317,6 +317,11 @@ NativeWindowRenderer::~NativeWindowRenderer() {
 void NativeWindowRenderer::render(RenderInput* input) {
     sp<GLConsumer> ST = input->mST;
     sp<Surface> STC = input->mSTC;
+    int err;
+    err = native_window_set_buffers_transform(STC.get(), input->mTransform);
+    if (err != 0) {
+        LOGE("native_window_set_buffers_transform failed!");
+    }
 
     if (input->mIsExternalBuffer) {
         queueExternalBuffer(STC.get(), input->mBuffer,
@@ -602,6 +607,14 @@ void RenderInput::updateVideoSize(sp<MetaData> meta) {
         mWidth = mHeight;
         mHeight = tmp;
     }
+
+    switch (rotationDegrees) {
+        case 0: mTransform= 0; break;
+        case 90: mTransform = HAL_TRANSFORM_ROT_90; break;
+        case 180: mTransform = HAL_TRANSFORM_ROT_180; break;
+        case 270: mTransform = HAL_TRANSFORM_ROT_270; break;
+        default: mTransform = 0; break;
+    }
 }
 
 void RenderInput::render(MediaBuffer* buffer, uint32_t videoEffect,
diff --git a/libvideoeditor/lvpp/NativeWindowRenderer.h b/libvideoeditor/lvpp/NativeWindowRenderer.h
index 26b4cba..79b096e 100755
--- a/libvideoeditor/lvpp/NativeWindowRenderer.h
+++ b/libvideoeditor/lvpp/NativeWindowRenderer.h
@@ -167,6 +167,7 @@ private:
     sp<GLConsumer> mST;
     sp<Surface> mSTC;
     int mWidth, mHeight;
+    uint32_t mTransform;
 
     // These are only valid during render() calls
     uint32_t mVideoEffect;
-- 
1.7.4.1

