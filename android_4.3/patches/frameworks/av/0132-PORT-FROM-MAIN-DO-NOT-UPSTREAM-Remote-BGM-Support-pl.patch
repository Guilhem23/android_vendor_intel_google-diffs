From 0a74fe40361494434bbd191fd631539c3df95f3f Mon Sep 17 00:00:00 2001
From: jerome <jerome.anand@intel.com>
Date: Tue, 12 Mar 2013 20:43:40 +0530
Subject: [PORT FROM MAIN][DO NOT UPSTREAM][Remote BGM] Support playback control using new flag

BZ: 92431

The audio/video playback is started based on the set
parameters by the customized player and using the same
in audio player for starting BGM

Change-Id: Ib0d1b7725fcbd107c38c0a030b084a6d98a1deb5
Orig-Change-Id: I6815271b4226418f6e3ebb9c84232ccfe9912efe
Signed-off-by: jerome <jerome.anand@intel.com>
Signed-off-by: jerome <jerome.anand@intel.com>
---
 include/media/stagefright/AudioPlayer.h |    3 +++
 media/libstagefright/Android.mk         |    4 ++++
 media/libstagefright/AudioPlayer.cpp    |   28 ++++++++++++++++++++++++++++
 3 files changed, 35 insertions(+), 0 deletions(-)

diff --git a/include/media/stagefright/AudioPlayer.h b/include/media/stagefright/AudioPlayer.h
index 1dc408f..cfe4337 100644
--- a/include/media/stagefright/AudioPlayer.h
+++ b/include/media/stagefright/AudioPlayer.h
@@ -101,6 +101,9 @@ private:
                                     // playback but implies high latency
     AwesomePlayer *mObserver;
     int64_t mPinnedTimeUs;
+#ifdef BGM_ENABLED
+    bool mAllowBackgroundPlayback;
+#endif
 
     static void AudioCallback(int event, void *user, void *info);
     void AudioCallback(int event, void *info);
diff --git a/media/libstagefright/Android.mk b/media/libstagefright/Android.mk
index 230bd38..0165141 100644
--- a/media/libstagefright/Android.mk
+++ b/media/libstagefright/Android.mk
@@ -115,6 +115,10 @@ LOCAL_STATIC_LIBRARIES := \
         libstagefright_id3 \
         libFLAC \
 
+ifeq ($(ENABLE_BACKGROUND_MUSIC),true)
+  LOCAL_CFLAGS += -DBGM_ENABLED
+endif
+
 ifeq ($(USE_INTEL_MDP),true)
 LOCAL_C_INCLUDES += $(TARGET_OUT_HEADERS)/media_codecs
 
diff --git a/media/libstagefright/AudioPlayer.cpp b/media/libstagefright/AudioPlayer.cpp
index f822c46..bfb61c4 100644
--- a/media/libstagefright/AudioPlayer.cpp
+++ b/media/libstagefright/AudioPlayer.cpp
@@ -126,8 +126,31 @@ status_t AudioPlayer::start(bool sourceAlreadyStarted) {
         channelMask = CHANNEL_MASK_USE_CHANNEL_ORDER;
     }
 
+#ifdef BGM_ENABLED
+    String8 reply;
+    char* bgmKVpair;
+
+    reply =  AudioSystem::getParameters(0,String8(AudioParameter::keyBGMState));
+    bgmKVpair = strpbrk((char *)reply.string(), "=");
+    ALOGV("%s [BGMUSIC] bgmKVpair = %s",__func__,bgmKVpair);
+    ++bgmKVpair;
+    mAllowBackgroundPlayback = strcmp(bgmKVpair,"true") ? false : true;
+    ALOGD("%s [BGMUSIC] mAllowBackgroundPlayback = %d",__func__,mAllowBackgroundPlayback);
+#endif
     if (mAudioSink.get() != NULL) {
 
+#ifdef BGM_ENABLED
+       if((mAllowBackgroundPlayback) &&(!mAllowDeepBuffering)) {
+          status_t  err = mAudioSink->open(
+                        mSampleRate, numChannels, channelMask, AUDIO_FORMAT_PCM_16_BIT,
+                        DEFAULT_AUDIOSINK_BUFFERCOUNT,
+                        &AudioPlayer::AudioSinkCallback,
+                        this,
+                        (mAllowBackgroundPlayback ?
+                            AUDIO_OUTPUT_FLAG_REMOTE_BGM :
+                            AUDIO_OUTPUT_FLAG_NONE));
+       } else {
+#endif
         status_t err = mAudioSink->open(
                 mSampleRate, numChannels, channelMask, AUDIO_FORMAT_PCM_16_BIT,
                 DEFAULT_AUDIOSINK_BUFFERCOUNT,
@@ -136,6 +159,11 @@ status_t AudioPlayer::start(bool sourceAlreadyStarted) {
                 (mAllowDeepBuffering ?
                             AUDIO_OUTPUT_FLAG_DEEP_BUFFER :
                             AUDIO_OUTPUT_FLAG_NONE));
+
+
+#ifdef BGM_ENABLED
+       }
+#endif
         if (err != OK) {
             if (mFirstBuffer != NULL) {
                 mFirstBuffer->release();
-- 
1.7.4.1

