From 1d2fbfa2f19ccbb8edd251e837de377193a2f16a Mon Sep 17 00:00:00 2001
From: ywan171 <yi.a.wang@intel.com>
Date: Tue, 27 Nov 2012 16:48:25 +0800
Subject: [PORT FROM MAIN] libstagefright: Add timeout check when waiting for teardown response in RTSP

BZ: 59828

when client gives up RTSP connection by sending RTSP "teardown" request,
it will wait until server sends the response back. In blocked network,
if the client can not recevie the response immediately, it will cause ANR issue.
add the timeout check when waiting for teardown response. If client can not
recevie "teardown" response in 3s, it will diconnect RTSP connection actively.

Change-Id: I0280a0607de23e4247c6737eda4306dbdd1074ea
Orig-Change-Id: I39abaddd478a8f81f8c14d56e446e4348817a90b
Signed-off-by: ywan171 <yi.a.wang@intel.com>
---
 media/libstagefright/rtsp/MyHandler.h |   14 ++++++++++++++
 1 files changed, 14 insertions(+), 0 deletions(-)

diff --git a/media/libstagefright/rtsp/MyHandler.h b/media/libstagefright/rtsp/MyHandler.h
index 9cee48a..8dd6176 100644
--- a/media/libstagefright/rtsp/MyHandler.h
+++ b/media/libstagefright/rtsp/MyHandler.h
@@ -50,6 +50,10 @@ static int64_t kAccessUnitTimeoutUs = 10000000ll;
 // stream, assume none ever will and signal EOS or switch transports.
 static int64_t kStartupTimeoutUs = 10000000ll;
 
+// If tear down can not finish in 3 secs , client will give up the conection
+// actively
+static int64_t kTearDownTimeoutUs = 3000000ll;
+
 static int64_t kDefaultKeepAliveTimeoutUs = 60000000ll;
 
 static int64_t kPauseDelayUs = 3000000ll;
@@ -202,6 +206,8 @@ struct MyHandler : public AHandler {
 
     void disconnect() {
         (new AMessage('abor', id()))->post();
+        sp<AMessage> timeout = new AMessage('tdto', id());
+        timeout->post(kTearDownTimeoutUs);
     }
 
     void seek(int64_t timeUs) {
@@ -882,6 +888,14 @@ struct MyHandler : public AHandler {
                 break;
             }
 
+            case 'tdto':
+            {
+                ALOGW("wait for tear down response time out");
+                sp<AMessage> reply = new AMessage('disc', id());
+                mConn->disconnect(reply);
+                break;
+            }
+
             case 'tear':
             {
                 int32_t result;
-- 
1.7.4.1

