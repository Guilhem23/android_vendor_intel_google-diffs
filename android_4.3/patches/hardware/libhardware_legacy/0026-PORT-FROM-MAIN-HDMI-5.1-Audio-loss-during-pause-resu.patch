From e41b3f157181be45cb3a50ea76f14bbd8998239a Mon Sep 17 00:00:00 2001
From: Arulselvan M <arulselvan.m@intel.com>
Date: Thu, 30 May 2013 20:16:41 +0530
Subject: [PORT FROM MAIN][HDMI-5.1] Audio loss during pause/resume of 5.1 contents over HDMI

BZ: 65974

When direct output is active, the strategy is overridden
to render data over IHF since mixing of contents with
multichannel data is not supported at present.

Change-Id: I0e2ffbe3846d596f19f558f4805c5af396476b8b
Orig-Change-Id: I199fc1b5e02b3dd6f2e1bc229f85d7901cb2ad83
Signed-off-by: Arulselvan M <arulselvan.m@intel.com>
---
 audio/AudioPolicyManagerBase.cpp                 |   31 +++++++++++++++++++--
 include/hardware_legacy/AudioPolicyManagerBase.h |    2 +
 2 files changed, 30 insertions(+), 3 deletions(-)

diff --git a/audio/AudioPolicyManagerBase.cpp b/audio/AudioPolicyManagerBase.cpp
index e0a5841..4cce00a 100644
--- a/audio/AudioPolicyManagerBase.cpp
+++ b/audio/AudioPolicyManagerBase.cpp
@@ -40,6 +40,8 @@
 
 namespace android_audio_legacy {
 
+bool AudioPolicyManagerBase :: mIsDirectOutputActive;
+
 // ----------------------------------------------------------------------------
 // AudioPolicyInterface implementation
 // ----------------------------------------------------------------------------
@@ -705,6 +707,11 @@ status_t AudioPolicyManagerBase::startOutput(audio_io_handle_t output,
     // necessary for a correct control of hardware output routing by startOutput() and stopOutput()
     outputDesc->changeRefCount(stream, 1);
 
+    if((outputDesc->mFlags & AudioSystem::OUTPUT_FLAG_DIRECT) && (mAvailableOutputDevices & AudioSystem::DEVICE_OUT_AUX_DIGITAL)){
+       ALOGD("startoutput() Direct thread is active");
+       mIsDirectOutputActive = true;
+    }
+
     if (outputDesc->mRefCount[stream] == 1) {
         audio_devices_t newDevice = getNewDevice(output, false /*fromCache*/);
         routing_strategy strategy = getStrategy(stream);
@@ -767,6 +774,11 @@ status_t AudioPolicyManagerBase::stopOutput(audio_io_handle_t output,
 
     AudioOutputDescriptor *outputDesc = mOutputs.valueAt(index);
 
+    if((outputDesc->mFlags & AudioSystem::OUTPUT_FLAG_DIRECT) && (mAvailableOutputDevices & AudioSystem::DEVICE_OUT_AUX_DIGITAL)){
+       ALOGD("startoutput() Direct thread is stopped -inactive");
+       mIsDirectOutputActive = false;
+    }
+
     // handle special case for sonification while in call
     if (isInCall()) {
         handleIncallSonification(stream, false, false);
@@ -2085,17 +2097,30 @@ AudioPolicyManagerBase::routing_strategy AudioPolicyManagerBase::getStrategy(
     case AudioSystem::RING:
         return STRATEGY_SONIFICATION_LOCAL;
     case AudioSystem::ALARM:
-        return STRATEGY_SONIFICATION;
+        if(mIsDirectOutputActive)
+          return STRATEGY_SONIFICATION_LOCAL;
+        else
+          return STRATEGY_SONIFICATION;
     case AudioSystem::NOTIFICATION:
-        return STRATEGY_SONIFICATION_RESPECTFUL;
+        if(mIsDirectOutputActive)
+          return STRATEGY_SONIFICATION_LOCAL;
+        else
+          return STRATEGY_SONIFICATION_RESPECTFUL;
     case AudioSystem::DTMF:
-        return STRATEGY_DTMF;
+        if(mIsDirectOutputActive)
+          return STRATEGY_SONIFICATION_LOCAL;
+        else
+          return STRATEGY_DTMF;
     default:
         ALOGE("unknown stream type");
     case AudioSystem::SYSTEM:
         // NOTE: SYSTEM stream uses MEDIA strategy because muting music and switching outputs
         // while key clicks are played produces a poor result
     case AudioSystem::TTS:
+        if(mIsDirectOutputActive)
+          return STRATEGY_SONIFICATION_LOCAL;
+        else
+          return STRATEGY_MEDIA;
     case AudioSystem::MUSIC:
         return STRATEGY_MEDIA;
     case AudioSystem::ENFORCED_AUDIBLE:
diff --git a/include/hardware_legacy/AudioPolicyManagerBase.h b/include/hardware_legacy/AudioPolicyManagerBase.h
index eaf3cf2..cef7510 100644
--- a/include/hardware_legacy/AudioPolicyManagerBase.h
+++ b/include/hardware_legacy/AudioPolicyManagerBase.h
@@ -570,6 +570,8 @@ protected:
 
         Vector <HwModule *> mHwModules;
 
+        static bool mIsDirectOutputActive; //check whether direct thread is active or not
+
 #ifdef AUDIO_POLICY_TEST
         Mutex   mLock;
         Condition mWaitWorkCV;
-- 
1.7.4.1

