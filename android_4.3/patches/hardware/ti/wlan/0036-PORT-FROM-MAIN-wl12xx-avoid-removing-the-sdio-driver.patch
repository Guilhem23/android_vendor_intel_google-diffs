From 2fc9528232dfe27e49f049cc8b6f98ddf1c7e1ee Mon Sep 17 00:00:00 2001
From: Quentin Casasnovas <quentinx.casasnovas@intel.com>
Date: Tue, 9 Oct 2012 20:16:06 +0200
Subject: [PORT FROM MAIN] wl12xx: avoid removing the sdio driver while loading nvs file

BZ: 60762

When rmmond'ing the wl12xx driver, we free all the private data attached to the
driver, without checking beforehand if no other part of the code was using
these private data.

The provided fix now waits in the clean_up function (wl12xx_remove) that the
firmware has been loaded before free'ing everything, so that the separate
kthread responsible for loading the firmware can access these private data
until it finishes executing.

Change-Id: If21cf1cc1eb93510a1d72812ca6aff6b0a76d9e8
Orig-Change-Id: I51334012a39b850481f7ee7a62a17eb3335cd0e8
Signed-off-by: Quentin Casasnovas <quentinx.casasnovas@intel.com>
Reviewed-on: http://android.intel.com:8080/69467
Reviewed-by: Zayet, Aymen <aymen.zayet@intel.com>
Reviewed-by: De Cesco, Jonathan <jonathan.de.cesco@intel.com>
Tested-by: Champciaux, Nicolas <nicolas.champciaux@intel.com>
Reviewed-by: buildbot <buildbot@intel.com>
Tested-by: buildbot <buildbot@intel.com>
Reviewed-on: http://android.intel.com:8080/77993
Reviewed-by: Li, XiaojingX <xiaojingx.li@intel.com>
Tested-by: Li, XiaojingX <xiaojingx.li@intel.com>
---
 wl12xx-compat/drivers/net/wireless/wl12xx/main.c   |    6 ++++++
 wl12xx-compat/drivers/net/wireless/wl12xx/wl12xx.h |    2 ++
 2 files changed, 8 insertions(+), 0 deletions(-)

diff --git a/wl12xx-compat/drivers/net/wireless/wl12xx/main.c b/wl12xx-compat/drivers/net/wireless/wl12xx/main.c
index 94af846..a0331d2 100644
--- a/wl12xx-compat/drivers/net/wireless/wl12xx/main.c
+++ b/wl12xx-compat/drivers/net/wireless/wl12xx/main.c
@@ -1299,6 +1299,8 @@ static void wl1271_nvs_complete(const struct firmware *fw, void *context)
 	ret = wl1271_register_hw(wl);
 	if (ret)
 		wl1271_error("%s returns %d", __func__, ret);
+
+	complete(&wl->fw_compl);
 }
 
 static int wl1271_fetch_nvs_nowait(struct wl1271 *wl)
@@ -6252,6 +6254,8 @@ static struct ieee80211_hw *wl1271_alloc_hw(void)
 	INIT_DELAYED_WORK(&wl->scan_complete_work, wl1271_scan_complete_work);
 	INIT_DELAYED_WORK(&wl->tx_watchdog_work, wl12xx_tx_watchdog_work);
 
+	init_completion(&wl->fw_compl);
+
 	wl->freezable_wq = create_freezable_workqueue("wl12xx_wq");
 	if (!wl->freezable_wq) {
 		ret = -ENOMEM;
@@ -6524,6 +6528,8 @@ static int __devexit wl12xx_remove(struct platform_device *pdev)
 {
 	struct wl1271 *wl = platform_get_drvdata(pdev);
 
+	wait_for_completion(&wl->fw_compl);
+
 	if (wl->irq_wake_enabled) {
 		device_init_wakeup(wl->dev, 0);
 		disable_irq_wake(wl->irq);
diff --git a/wl12xx-compat/drivers/net/wireless/wl12xx/wl12xx.h b/wl12xx-compat/drivers/net/wireless/wl12xx/wl12xx.h
index 52b1df4..f1d8331 100644
--- a/wl12xx-compat/drivers/net/wireless/wl12xx/wl12xx.h
+++ b/wl12xx-compat/drivers/net/wireless/wl12xx/wl12xx.h
@@ -477,6 +477,8 @@ struct wl1271 {
 	struct completion *elp_compl;
 	struct delayed_work elp_work;
 
+	struct completion fw_compl;
+
 	/* in dBm */
 	int power_level;
 
-- 
1.7.4.1

