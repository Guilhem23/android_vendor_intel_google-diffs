From 7268ed4fe8aa64087bc733e262b34e9516fc0dab Mon Sep 17 00:00:00 2001
From: Jonathan DE CESCO <jonathan.de.cesco@intel.com>
Date: Wed, 12 Dec 2012 12:31:48 +0100
Subject: [PORT FROM MAIN] wifi: mac80211: stop Rx during HW reconfig

BZ: 73498

Port from TI R5 SP3
From f0c37768eb64da6a1fa9e1cba7128203dbeda19a
From: Arik Nemtsov <arik@wizery.com>
Date: Wed, 6 Jun 2012 11:25:02 +0300
Subject: [PORT FROM MAIN] [PATCH 01/12] mac80211: stop Rx during HW reconfig

While HW reconfig is in progress, drop all incoming Rx. This prevents
incoming packets from changing the internal state of the driver or
calling callbacks of the low level driver while it is in inconsistent
state.

Change-Id: I62518e64e8dcc17d69df7d3fdd5e14ddb4dcb9d5
Orig-Change-Id: I2636607967bdaefb5e156b7ca706a8742cbee6f0
Signed-off-by: Arik Nemtsov <arik@wizery.com>
Signed-off-by: Johannes Berg <johannes.berg@intel.com>
Signed-off-by: Jonathan DE CESCO <jonathan.de.cesco@intel.com>
Reviewed-on: http://android.intel.com:8080/85612
Reviewed-by: Naoumenko, PaulX <paulx.naoumenko@intel.com>
Reviewed-by: Bachot, Jean-michel <jean-michel.bachot@intel.com>
Tested-by: Champciaux, Nicolas <nicolas.champciaux@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
---
 wl12xx-compat/net/mac80211/ieee80211_i.h |    3 +++
 wl12xx-compat/net/mac80211/main.c        |    7 +++++++
 wl12xx-compat/net/mac80211/rx.c          |    4 ++++
 wl12xx-compat/net/mac80211/util.c        |    3 +++
 4 files changed, 17 insertions(+), 0 deletions(-)

diff --git a/wl12xx-compat/net/mac80211/ieee80211_i.h b/wl12xx-compat/net/mac80211/ieee80211_i.h
index 4a160cd..d1571c3 100644
--- a/wl12xx-compat/net/mac80211/ieee80211_i.h
+++ b/wl12xx-compat/net/mac80211/ieee80211_i.h
@@ -835,6 +835,9 @@ struct ieee80211_local {
 	/* device is started */
 	bool started;
 
+	/* device is during a HW reconfig */
+	bool in_reconfig;
+
 	/* wowlan is enabled -- don't reconfig on resume */
 	bool wowlan;
 
diff --git a/wl12xx-compat/net/mac80211/main.c b/wl12xx-compat/net/mac80211/main.c
index 1a686ac..ca4bb75 100644
--- a/wl12xx-compat/net/mac80211/main.c
+++ b/wl12xx-compat/net/mac80211/main.c
@@ -357,6 +357,13 @@ void ieee80211_restart_hw(struct ieee80211_hw *hw)
 	ieee80211_stop_queues_by_reason(hw,
 		IEEE80211_QUEUE_STOP_REASON_SUSPEND);
 
+	/*
+	 * Stop all Rx during the reconfig. We don't want state changes
+	 * or driver callbacks while this is in progress.
+	 */
+	local->in_reconfig = true;
+	barrier();
+
 	schedule_work(&local->restart_work);
 }
 EXPORT_SYMBOL(ieee80211_restart_hw);
diff --git a/wl12xx-compat/net/mac80211/rx.c b/wl12xx-compat/net/mac80211/rx.c
index 535dec1..9d2539b 100644
--- a/wl12xx-compat/net/mac80211/rx.c
+++ b/wl12xx-compat/net/mac80211/rx.c
@@ -3064,6 +3064,10 @@ void ieee80211_rx(struct ieee80211_hw *hw, struct sk_buff *skb)
 	if (unlikely(local->quiescing || local->suspended))
 		goto drop;
 
+	/* We might be during a HW reconfig, prevent Rx for the same reason */
+	if (unlikely(local->in_reconfig))
+		goto drop;
+
 	/*
 	 * The same happens when we're not even started,
 	 * but that's worth a warning.
diff --git a/wl12xx-compat/net/mac80211/util.c b/wl12xx-compat/net/mac80211/util.c
index 94c5f56..41284ab 100644
--- a/wl12xx-compat/net/mac80211/util.c
+++ b/wl12xx-compat/net/mac80211/util.c
@@ -1325,6 +1325,9 @@ int ieee80211_reconfig(struct ieee80211_local *local)
 			ieee80211_enable_keys(sdata);
 
  wake_up:
+	local->in_reconfig = false;
+	barrier();
+
     /* wifi mac80211: fix ADDBA declined after suspend with wowlan
 	 * Clear the WLAN_STA_BLOCK_BA flag so new aggregation
 	 * sessions can be established after a resume.
-- 
1.7.4.1

