From fc9f7f7bc5285bdebab0d0c5d32878c44ef09665 Mon Sep 17 00:00:00 2001
From: Jonathan DE CESCO <jonathan.de.cesco@intel.com>
Date: Tue, 14 Aug 2012 12:14:16 +0200
Subject: [PORT FROM MAIN] wifi: rework recovery during suspend/resume and make wl->flags consistent

BZ: 51704 75240

Removing the interface may be called after suspending the driver.
As a result, wl->flags is cleared making all checks to WL1271_FLAG_SUSPENDED
bit unconsistent.

To avoid such issue, WL1271_FLAG_SUSPENDED bit should be set when the suspend
terminates successfully, and cleared on resume callback. When the interface
is removed, wl->flags should be cleared except WL1271_FLAG_SUSPENDED bit.

Change-Id: Ibe94d22e93545352e7c6b90c366ee60b8d309533
Orig-Change-Id: I108cf5815e9571e8dc722d7ca6a3114b0782f3e4
Signed-off-by: Jonathan DE CESCO <jonathan.de.cesco@intel.com>
Signed-off-by: Aymen Zayet <aymen.zayet@intel.com>
Reviewed-on: http://android.intel.com:8080/62111
Reviewed-by: Regairaz, Julie <julie.regairaz@intel.com>
Tested-by: Zurmely, PierreX <pierrex.zurmely@intel.com>
Reviewed-by: buildbot <buildbot@intel.com>
Tested-by: buildbot <buildbot@intel.com>
Signed-off-by: Quentin Casasnovas <quentinx.casasnovas@intel.com>
Reviewed-on: http://android.intel.com:8080/82499
Reviewed-by: Garcia, JeremieX <jeremiex.garcia@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
---
 wl12xx-compat/drivers/net/wireless/wl12xx/main.c |    8 +++++++-
 1 files changed, 7 insertions(+), 1 deletions(-)

diff --git a/wl12xx-compat/drivers/net/wireless/wl12xx/main.c b/wl12xx-compat/drivers/net/wireless/wl12xx/main.c
index b1649ed..511bf8b 100644
--- a/wl12xx-compat/drivers/net/wireless/wl12xx/main.c
+++ b/wl12xx-compat/drivers/net/wireless/wl12xx/main.c
@@ -2493,8 +2493,14 @@ static void wl1271_op_stop_locked(struct wl1271 *wl)
 	 * this is performed after the cancel_work calls and the associated
 	 * mutex_lock, so that wl1271_op_add_interface does not accidentally
 	 * get executed before all these vars have been reset.
+	 * don't erase WL1271_FLAG_SUSPENDED bit to avoid unconsistent value
+	 * while the interface is being removed.
 	 */
-	wl->flags = 0;
+	wl->flags &= WL1271_FLAG_SUSPENDED;
+
+	/* warn when removing the interface while the suspended */
+	if (test_bit(WL1271_FLAG_SUSPENDED, &wl->flags))
+		WARN(1, "Removing the interface during suspend\n");
 
 	wl->tx_blocks_freed = 0;
 
-- 
1.7.4.1

