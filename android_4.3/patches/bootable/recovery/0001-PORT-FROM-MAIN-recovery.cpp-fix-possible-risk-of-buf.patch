From 052040b9e7bada17c8adc4e7c57138482ac72603 Mon Sep 17 00:00:00 2001
From: Gabriel Touzeau <gabrielx.touzeau@intel.com>
Date: Tue, 4 Sep 2012 11:43:35 +0200
Subject: [PORT FROM MAIN] recovery.cpp: fix possible risk of buffer overflow

BZ: 55206

Make use of safer functions strlcpy/strlcat instead of
strcpy/strcat

Change-Id: I9f36627a1e0679861f3506677ed9d9929c8d2cfb
Orig-Change-Id: Id59e5a40742164aab18dc289818ca4bf709cca45
Signed-off-by: Gabriel Touzeau <gabrielx.touzeau@intel.com>
Reviewed-on: http://android.intel.com:8080/75775
Reviewed-by: Yao, Yong <yong.yao@intel.com>
Reviewed-by: lab_cactus <lab_cactus@intel.com>
Reviewed-by: Romieu, Benoit <benoit.romieu@intel.com>
Tested-by: Romieu, Benoit <benoit.romieu@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
---
 recovery.cpp |   10 ++++++++--
 1 files changed, 8 insertions(+), 2 deletions(-)

diff --git a/recovery.cpp b/recovery.cpp
index 7002cb8..33ddde9 100644
--- a/recovery.cpp
+++ b/recovery.cpp
@@ -371,8 +371,14 @@ copy_sideloaded_package(const char* original_path) {
   }
 
   char copy_path[PATH_MAX];
-  strcpy(copy_path, SIDELOAD_TEMP_DIR);
-  strcat(copy_path, "/package.zip");
+  if (strlcpy(copy_path, SIDELOAD_TEMP_DIR, PATH_MAX) > PATH_MAX) {
+    LOGE("Path too long !\n");
+    return NULL;
+  }
+  if (strlcat(copy_path, "/package.zip", PATH_MAX) > PATH_MAX) {
+    LOGE("Path too long !\n");
+    return NULL;
+  }
 
   char* buffer = (char*)malloc(BUFSIZ);
   if (buffer == NULL) {
-- 
1.7.4.1

