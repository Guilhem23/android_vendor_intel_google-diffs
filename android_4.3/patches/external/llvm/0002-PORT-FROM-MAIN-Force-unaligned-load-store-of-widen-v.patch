From c1d0487aadf1a7d24d0f794302baf1822e458bb6 Mon Sep 17 00:00:00 2001
From: Michael Liao <michael.liao@intel.com>
Date: Mon, 28 May 2012 07:52:22 -0700
Subject: [PORT FROM MAIN] Force unaligned load/store of widen vectors

BZ: 52880

Renderscript front-end compiles non-power-2 vector with additional
alignment in LLVM IR. It is incorrect as Renderscript only assume
element-alignement for vector types in load/store according to:
http://developer.android.com/reference/android/renderscript/Element.html

This workaround resets non-power-2 widen-vector s alignment specified
by frontend to 1 and forces load/store of widen vectors into unaligned one.
This results in unaligned instruction be used, e.g. movups instead of movaps.

In addition, a previous clang bug workaround of packed structure issue
is removed as this workaround covers it as well.

Change-Id: Iac89ead82298342ed340d52a2fa9aec7f3b85cc1
Orig-Change-Id: I315b120bca647854f8c8277c7907732b4f40a701
Author: Michael Liao <michael.liao@intel.com>
Signed-off-by: Bruce Beare <bruce.j.beare@intel.com>
Signed-off-by: Jack Ren <jack.ren@intel.com>
Signed-off-by: Yong Chen <yong.a.chen@intel.com>
Reviewed-on: http://android.intel.com:8080/63649
Reviewed-by: Li, XiaojingX <xiaojingx.li@intel.com>
Tested-by: Li, XiaojingX <xiaojingx.li@intel.com>
Reviewed-by: Vane, Edwin <edwin.vane@intel.com>
Reviewed-by: buildbot <buildbot@intel.com>
Tested-by: buildbot <buildbot@intel.com>
Reviewed-on: http://android.intel.com:8080/78280
Reviewed-by: Yao, Yong <yong.yao@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
---
 lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp |    9 +++++++++
 1 files changed, 9 insertions(+), 0 deletions(-)

diff --git a/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp b/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp
index 5ec8535..86493aa 100644
--- a/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp
+++ b/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp
@@ -2455,6 +2455,11 @@ SDValue DAGTypeLegalizer::GenWidenVectorLoads(SmallVector<SDValue, 16> &LdChain,
 
   int LdWidth = LdVT.getSizeInBits();
   int WidthDiff = WidenWidth - LdWidth;          // Difference
+
+  if (!LdVT.isPow2VectorType()) {
+    Align = 1; // Force unaligned load of widen vector
+  }
+
   unsigned LdAlign = (isVolatile) ? 0 : Align; // Allow wider loads
 
   // Find the vector type that can load from.
@@ -2655,6 +2660,10 @@ void DAGTypeLegalizer::GenWidenVectorStores(SmallVector<SDValue, 16>& StChain,
   unsigned ValEltWidth = ValEltVT.getSizeInBits();
   assert(StVT.getVectorElementType() == ValEltVT);
 
+  if (!StVT.isPow2VectorType()) {
+    Align = 1; // Force unaligned store of widen vector
+  }
+
   int Idx = 0;          // current index to store
   unsigned Offset = 0;  // offset from base to store
   while (StWidth != 0) {
-- 
1.7.4.1

