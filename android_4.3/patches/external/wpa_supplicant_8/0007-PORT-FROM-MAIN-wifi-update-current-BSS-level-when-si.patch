From fa9abda43fd09e8950247598ef3961336351d595 Mon Sep 17 00:00:00 2001
From: Matthieu Mauger <matthieux.mauger@intel.com>
Date: Wed, 20 Feb 2013 18:00:18 +0100
Subject: [PORT FROM MAIN] wifi: update current BSS level when signal change event occurs
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

BZ: 86937

When an “EVENT_SIGNAL_CHANGE” occurs the bgscan is informed about this change
but the new RSSI value is not stored. In consequence, when roaming candidates
are evaluated, the RSSI value of the current BSS used to compare is an old one
obtained during the last scan rather than the new one given by the signal change
event. This leads sometimes to bad decision when selecting a new BSS for
roaming.

This patch solve the issue by updating the current BSS level when receiving a
signal change event in order to have a very up-to-date current signal value when
choosing an new BSS.

Feature   : Wlan
Category  : Improvement
Purpose   : AOSP+
Origin    : Upstream
Upstream-candidate: yes

Change-Id: Id7346a9ea418b2f2d754ca1576d19f054e44163f
Orig-Change-Id: I13f485f4bc1dc573a7c0013f6c4d9499e0cbf7b2
Signed-off-by: Matthieu Mauger <matthieux.mauger@intel.com>
---
 wpa_supplicant/bss.c    |    5 +++++
 wpa_supplicant/bss.h    |    1 +
 wpa_supplicant/events.c |    1 +
 3 files changed, 7 insertions(+), 0 deletions(-)

diff --git a/wpa_supplicant/bss.c b/wpa_supplicant/bss.c
index 0e1576b..149e3d2 100644
--- a/wpa_supplicant/bss.c
+++ b/wpa_supplicant/bss.c
@@ -743,6 +743,11 @@ void wpa_bss_update_end(struct wpa_supplicant *wpa_s, struct scan_info *info,
 		   wpa_s->last_scan_full);
 }
 
+void wpa_bss_update_level(struct wpa_bss *bss, int new_level)
+{
+	if (bss != NULL && new_level < 0)
+		bss->level = new_level;
+}
 
 /**
  * wpa_bss_flush_by_age - Flush old BSS entries
diff --git a/wpa_supplicant/bss.h b/wpa_supplicant/bss.h
index 2b41948..bae01d2 100644
--- a/wpa_supplicant/bss.h
+++ b/wpa_supplicant/bss.h
@@ -101,6 +101,7 @@ void wpa_bss_update_scan_res(struct wpa_supplicant *wpa_s,
 			     struct os_time *fetch_time);
 void wpa_bss_update_end(struct wpa_supplicant *wpa_s, struct scan_info *info,
 			int new_scan);
+void wpa_bss_update_level(struct wpa_bss *bss, int new_level);
 int wpa_bss_init(struct wpa_supplicant *wpa_s);
 void wpa_bss_deinit(struct wpa_supplicant *wpa_s);
 void wpa_bss_flush(struct wpa_supplicant *wpa_s);
diff --git a/wpa_supplicant/events.c b/wpa_supplicant/events.c
index 6c0a246..c1781b9 100644
--- a/wpa_supplicant/events.c
+++ b/wpa_supplicant/events.c
@@ -2936,6 +2936,7 @@ void wpa_supplicant_event(void *ctx, enum wpa_event_type event,
 					data->eapol_rx.data_len);
 		break;
 	case EVENT_SIGNAL_CHANGE:
+		wpa_bss_update_level(wpa_s->current_bss, data->signal_change.current_signal);
 		bgscan_notify_signal_change(
 			wpa_s, data->signal_change.above_threshold,
 			data->signal_change.current_signal,
-- 
1.7.4.1

