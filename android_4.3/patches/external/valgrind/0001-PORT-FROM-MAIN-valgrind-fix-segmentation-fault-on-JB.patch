From 350346c6bf3871b446a12aa077703251d179da3b Mon Sep 17 00:00:00 2001
From: Zhang Dongxing <dongxing.zhang@intel.com>
Date: Tue, 9 Oct 2012 11:13:22 +0800
Subject: [PORT FROM MAIN] valgrind: fix segmentation fault on JB

BZ: 79065

Valgrind was crashing systematically on JB.
This crash is caused by AT_IGNORE-ing AT_BASE.
This AT_IGNORE was needed to have breakpoints in shared libs
be handled properly (not very clear what is the problem
in the interaction between Valgrind GDBSERVER, AT_BASE and GDB).
Waiting to better understand all this, as a temporary bypass,
this patch ensures we do not ignore the AT_BASE on android.

This fix is from http://comments.gmane.org/gmane.comp.debugging.valgrind.devel/18903
and is ported to x86.
This fix is considered as a workaround until proper support provided by MR1
on JB

The possible consequence is that breakpoints might be inserted
by the Valgrind gdbserver at wrong addresses in shared lib.

Orig-Change-Id: I83e4d5722058aed608825939700a7e2a122c50eb
Signed-off-by: Zhang Dongxing <dongxing.zhang@intel.com>
Signed-off-by: Christophe Guerard <christophe.guerard@intel.com>
Signed-off-by: Jin Wei <wei.a.jin@intel.com>
Reviewed-on: http://android.intel.com:8080/85707
Reviewed-by: Yao, Yong <yong.yao@intel.com>
Tested-by: Li, XiaojingX <xiaojingx.li@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>

Conflicts:

	main/coregrind/m_initimg/initimg-linux.c

Change-Id: Idbad82f578c0597a8d25f110ac30acb5467dd008
---
 main/coregrind/m_initimg/initimg-linux.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/main/coregrind/m_initimg/initimg-linux.c b/main/coregrind/m_initimg/initimg-linux.c
index f4db0b6..460327d 100644
--- a/main/coregrind/m_initimg/initimg-linux.c
+++ b/main/coregrind/m_initimg/initimg-linux.c
@@ -672,7 +672,7 @@ Addr setup_client_stack( void*  init_sp,
                However, ignoring AT_BASE makes V crash on Android 4.1.
                So, keep the AT_BASE on android for now.
                ??? Need to dig in depth about AT_BASE/GDB interaction */
-#           if !defined(VGPV_arm_linux_android)
+#           if !defined(VGPV_arm_linux_android) && !defined(VGPV_x86_linux_android)
             auxv->a_type = AT_IGNORE;
 #           endif
             auxv->u.a_val = info->interp_base;
-- 
1.7.4.1

