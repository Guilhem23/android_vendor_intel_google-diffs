From a518e08374db6b62fa8ec51900317218c271ffdb Mon Sep 17 00:00:00 2001
From: Cedric Bondier <cedricx.bondier@intel.com>
Date: Thu, 31 Jan 2013 10:35:59 +0100
Subject: [PORT FROM MAIN][BT] Dynamic properties for debug traces and snoop capture.

BZ: 84283

Add dynamic properties for BT log and snoop capture,
so that all bt_stack.conf parameters can be over-written
by a similar Android local property.

Change-Id: Ie94524d6781c29744f43d467ed8f37c651ef54ef
Orig-Change-Id: I17aef5d26553fa52565d5586e97b50db43a1ca9f
Feature: BT
Category: Improvement
Purpose: AOSP+
Origin: Internal
Upstream-candidate: yes
Signed-off-by: Cedric Bondier <cedricx.bondier@intel.com>
Reviewed-on: http://android.intel.com:8080/89596
Reviewed-by: Gros, Julien <julien.gros@intel.com>
Reviewed-by: Aquilone, RaffaeleX <raffaelex.aquilone@intel.com>
Tested-by: Champciaux, Nicolas <nicolas.champciaux@intel.com>
Reviewed-by: buildbot <buildbot@intel.com>
Tested-by: buildbot <buildbot@intel.com>
---
 main/bte_conf.c |   66 +++++++++++++++++++++++++++++++++++++++++++++++++++++++
 main/bte_main.c |    4 ++-
 2 files changed, 69 insertions(+), 1 deletions(-)

diff --git a/main/bte_conf.c b/main/bte_conf.c
index e001d59..2175c7e 100644
--- a/main/bte_conf.c
+++ b/main/bte_conf.c
@@ -32,6 +32,7 @@
 #include <string.h>
 #include <stdlib.h>
 #include <ctype.h>
+#include <cutils/properties.h>
 
 #include "bt_target.h"
 #include "bta_api.h"
@@ -447,3 +448,68 @@ void bte_load_did_conf (const char *p_path)
     }
 }
 
+/*****************************************************************************
+**   PROPERTIES INTERFACE FUNCTIONS
+*****************************************************************************/
+char *bt_trace_properties_name[] = {
+    "BtSnoopLogOutput",
+    "BtSnoopFileName",
+    "TraceConf",
+    "TRC_BTM",
+    "TRC_HCI",
+    "TRC_L2CAP",
+    "TRC_RFCOMM",
+    "TRC_OBEX",
+    "TRC_AVCT",
+    "TRC_AVDT",
+    "TRC_AVRC",
+    "TRC_AVDT_SCB",
+    "TRC_AVDT_CCB",
+    "TRC_A2D",
+    "TRC_SDP",
+    "TRC_GATT",
+    "TRC_SMP",
+    "TRC_BTAPP",
+    NULL
+};
+
+/*******************************************************************************
+**
+** Function        bte_load_prop
+**
+** Description     Read properties entry from local properties one by one and
+**                 call the corresponding config function
+**
+** Returns         None
+**
+*******************************************************************************/
+void bte_load_prop()
+{
+    char         **p_name = bt_trace_properties_name;
+    char         value[PROPERTY_VALUE_MAX];
+    BOOLEAN      name_matched;
+    conf_entry_t *p_entry;
+
+    ALOGI("Loading BT stack properties conf");
+    /* parse prop by prop */
+    while (*p_name != NULL) {
+        name_matched = FALSE;
+        if (property_get(*p_name, value, NULL) > 0) {
+            p_entry = (conf_entry_t *)conf_table;
+            while (p_entry->conf_entry != NULL) {
+                if (strcmp(p_entry->conf_entry, *p_name) == 0) {
+                    name_matched = TRUE;
+                    if (p_entry->p_action != NULL)
+                        p_entry->p_action(*p_name, value);
+                    break;
+                    }
+                    p_entry++;
+            }
+            if ((name_matched == FALSE) && (trace_conf_enabled == TRUE)) {
+                /* Check if this is a TRC config item */
+                bte_trace_conf(*p_name, value);
+            }
+        }
+        *p_name++;
+    }
+}
diff --git a/main/bte_main.c b/main/bte_main.c
index 3294d79..38ee957 100644
--- a/main/bte_main.c
+++ b/main/bte_main.c
@@ -106,7 +106,7 @@ BT_API void BTE_UnloadStack(void);
 extern void scru_flip_bda (BD_ADDR dst, const BD_ADDR src);
 extern void bte_load_conf(const char *p_path);
 extern bt_bdaddr_t btif_local_bd_addr;
-
+extern void bte_load_prop(void);
 
 /*******************************************************************************
 **                        System Task Configuration
@@ -157,6 +157,8 @@ void bte_main_boot_entry(void)
 
     bte_load_conf(BTE_STACK_CONF_FILE);
 
+    bte_load_prop(); // priority order Property > Conf > Static
+
 #if (BTTRC_INCLUDED == TRUE)
     /* Initialize trace feature */
     BTTRC_TraceInit(MAX_TRACE_RAM_SIZE, &BTE_TraceLogBuf[0], BTTRC_METHOD_RAM);
-- 
1.7.4.1

