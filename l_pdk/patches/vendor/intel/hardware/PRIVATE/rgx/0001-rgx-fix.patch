From 5ba4037176cc2e5e565e81ee5e5854d7cb2caf2f Mon Sep 17 00:00:00 2001
From: Yong Yao <yong.yao@intel.com>
Date: Tue, 24 Jun 2014 22:04:15 +0800
Subject: rgx fix

Change-Id: Ifed4f02b6f6856a1d1f69e023b78dbdd49402e0b
Signed-off-by: Yong Yao <yong.yao@intel.com>
---
 Android.mk                                         |    4 +-
 rogue/android/graphicshal/dumpstack.c              |   24 +-------------------
 rogue/build/linux/common/android/features.mk       |    2 +-
 .../build/linux/common/android/platform_version.mk |    1 +
 rogue/include/imgextensions.h                      |    4 +-
 .../tools/intern/oglcompiler/parser/glsl_parser.y  |   14 +++++-----
 rogue/tools/intern/oglcompiler/parser/symtab.c     |    4 +-
 .../tools/services/hwperfbin2json/hwperfbin2json.c |    4 +-
 .../tools/services/hwperfbin2json/hwperfbin2json.h |   10 ++++----
 rogue/tools/services/pvrtld/tld_common.c           |   18 +++++++-------
 .../unittests/android/testwrap/testwrapwindow.cpp  |    4 +-
 11 files changed, 34 insertions(+), 55 deletions(-)

diff --git a/Android.mk b/Android.mk
index b2288f9..7b1edf3 100644
--- a/Android.mk
+++ b/Android.mk
@@ -56,8 +56,8 @@ $(LOCAL_BUILT_MODULE): $(TARGET_OUT)/build.prop
 local_img_excluded_apis :=
 local_img_excluded_apis += composerhal
 local_img_excluded_apis += opengl
-## local_img_excluded_apis += rscompute
-## local_img_excluded_apis += opencl
+local_img_excluded_apis += rscompute
+local_img_excluded_apis += opencl
 local_img_excluded_apis += unittests
 
 $(LOCAL_BUILT_MODULE): $(LOCAL_MODULE_MAKEFILE) \
diff --git a/rogue/android/graphicshal/dumpstack.c b/rogue/android/graphicshal/dumpstack.c
index 277d07d..748a991 100644
--- a/rogue/android/graphicshal/dumpstack.c
+++ b/rogue/android/graphicshal/dumpstack.c
@@ -4,7 +4,7 @@
 */ /**************************************************************************/
 
 #include <stdlib.h>
-#include <corkscrew/backtrace.h>
+//#include <corkscrew/backtrace.h>
 
 #include "dumpstack.h"
 #include "img_types.h"
@@ -17,27 +17,5 @@
 IMG_INTERNAL
 void DumpStack(const char *const msg __attribute__((unused)))
 {
-	backtrace_frame_t frames[MAX_FRAMES];
-	backtrace_symbol_t symbols[MAX_FRAMES];
-	int nframes, i;
-	char bt_line[MAX_LINE];
 
-	nframes = unwind_backtrace(frames, IGNORE_DEPTH, MAX_FRAMES);
-	if (nframes > 0)
-	{
-		PVR_DPF((PVR_DBG_ERROR, "Stack trace: %s (%d frames)", msg, nframes));
-		get_backtrace_symbols(frames, nframes, symbols);
-
-		for (i = 0; i < nframes; i++)
-		{
-			format_backtrace_line(i, &frames[i], &symbols[i], bt_line, MAX_LINE);
-			PVR_DPF((PVR_DBG_ERROR, " %s", bt_line));
-		}
-
-		PVR_DPF((PVR_DBG_ERROR, "End of stack trace"));
-	}
-	else
-	{
-		PVR_DPF((PVR_DBG_ERROR, "Stack trace unwinding failed: %s", msg));
-	}
 }
diff --git a/rogue/build/linux/common/android/features.mk b/rogue/build/linux/common/android/features.mk
index d04cdba..de0827f 100644
--- a/rogue/build/linux/common/android/features.mk
+++ b/rogue/build/linux/common/android/features.mk
@@ -131,7 +131,7 @@ EGL_EXTENSION_ANDROID_FRAMEBUFFER_TARGET := 1
 # JB added a new corkscrew API for userland backtracing.
 #
 ifeq ($(is_at_least_jellybean),1)
-PVR_ANDROID_HAS_CORKSCREW_API := 1
+PVR_ANDROID_HAS_CORKSCREW_API := 0
 endif
 
 ##############################################################################
diff --git a/rogue/build/linux/common/android/platform_version.mk b/rogue/build/linux/common/android/platform_version.mk
index b551447..5df2dd1 100644
--- a/rogue/build/linux/common/android/platform_version.mk
+++ b/rogue/build/linux/common/android/platform_version.mk
@@ -12,6 +12,7 @@ PLATFORM_VERSION := $(shell \
 	else \
 		echo 1.6; \
 	fi)
+PLATFORM_VERSION := 4.4
 
 define version-starts-with
 $(shell echo $(PLATFORM_VERSION) | grep -q ^$(1); \
diff --git a/rogue/include/imgextensions.h b/rogue/include/imgextensions.h
index fd15e73..790c0c6 100644
--- a/rogue/include/imgextensions.h
+++ b/rogue/include/imgextensions.h
@@ -13,7 +13,7 @@
 #include <rgxdefs.h>
 
 /* GLES1 extensions */
-#define GLES1_EXTENSION_MULTI_DRAW_ARRAYS       
+//#define GLES1_EXTENSION_MULTI_DRAW_ARRAYS       
 #define GLES1_EXTENSION_REQUIRED_INTERNAL_FORMAT
 #define GLES1_EXTENSION_VERTEX_ARRAY_OBJECT
 #define GLES1_EXTENSION_EGL_IMAGE_EXTERNAL
@@ -24,7 +24,7 @@
 #define GLES1_EXTENSION_TEXTURE_2D_LIMITED_NPOT
 
 /* GLES2 extensions */
-#define GLES2_EXTENSION_MULTI_DRAW_ARRAYS       
+//#define GLES2_EXTENSION_MULTI_DRAW_ARRAYS       
 #define GLES2_EXTENSION_DISCARD_FRAMEBUFFER
 #define GLES2_EXTENSION_EGL_IMAGE_EXTERNAL
 #define GLES2_EXTENSION_MULTISAMPLED_RENDER_TO_TEXTURE
diff --git a/rogue/tools/intern/oglcompiler/parser/glsl_parser.y b/rogue/tools/intern/oglcompiler/parser/glsl_parser.y
index 913d711..65bb84f 100755
--- a/rogue/tools/intern/oglcompiler/parser/glsl_parser.y
+++ b/rogue/tools/intern/oglcompiler/parser/glsl_parser.y
@@ -256,7 +256,7 @@ static IMG_BOOL __CheckTypeIsStruct (GLSLTreeContext *psGLSLTreeContext, IMG_CHA
 		uNameLength = 0;
 	}
 
-	sprintf (pszName, STRUCT_DEFINITION_STRING, pszTypeName, GetStructureDefinitionMiddleName (psCPD, GLSLTQ_INVALID));
+	snprintf (pszName, 128, STRUCT_DEFINITION_STRING, pszTypeName, GetStructureDefinitionMiddleName (psCPD, GLSLTQ_INVALID));
 
 	bRet = FindSymbol (psGLSLTreeContext->psSymbolTable, pszName, puSymbolTableID, IMG_FALSE);
 
@@ -1861,7 +1861,7 @@ static IMG_BOOL __GetShadowStructureDefintionSymbolID(GLSLTreeContext			*psGLSLT
 		/* Mark no memory needs to be allocated for name */
 		uNameLength = 0;
 	}
-	sprintf(pszName, STRUCT_DEFINITION_STRING,  pszStructureName, GetStructureDefinitionMiddleName(psCPD, GLSLTQ_INVALID));
+	snprintf(pszName, 128, STRUCT_DEFINITION_STRING,  pszStructureName, GetStructureDefinitionMiddleName(psCPD, GLSLTQ_INVALID));
 
 	/* Find the normal struct definition symbol table, which must exist. */
 	bRet = FindSymbol(psGLSLTreeContext->psSymbolTable, pszName, &uSymbolTableID, IMG_FALSE);
@@ -1896,7 +1896,7 @@ static IMG_BOOL __GetShadowStructureDefintionSymbolID(GLSLTreeContext			*psGLSLT
 	for (i = 0; i < psStructDefinitionData->uShadowCopyInfo.uNumShadowCopies; ++i)
 	{
 		/* Get the shadow copy symbol name and find the shadow copy definition */
-		sprintf(pszName, SHADOW_STRUCT_DEFINITION_STRING, pszStructureName, i);
+		snprintf(pszName, 128, SHADOW_STRUCT_DEFINITION_STRING, pszStructureName, i);
 		bRet = FindSymbol(psGLSLTreeContext->psSymbolTable, pszName, &uShadowSymbolTableID, IMG_FALSE);
 		DebugAssert(bRet == IMG_TRUE);
 		
@@ -2011,7 +2011,7 @@ static IMG_BOOL __GetShadowStructureDefintionSymbolID(GLSLTreeContext			*psGLSLT
 	}
 	
 	/* Shadow name */
-	sprintf(pszName, SHADOW_STRUCT_DEFINITION_STRING, pszStructureName, psStructDefinitionData->uShadowCopyInfo.uNumShadowCopies);
+	snprintf(pszName, 128, SHADOW_STRUCT_DEFINITION_STRING, pszStructureName, psStructDefinitionData->uShadowCopyInfo.uNumShadowCopies);
 	
 	/* Add shadow struct definition data */
 	bRet = AddStructureDefinitionData(psCPD, psGLSLTreeContext->psSymbolTable, 
@@ -5880,7 +5880,7 @@ type_specifier:
 					uNameLength = 0;
 				}
 
-				sprintf (pszName, STRUCT_DEFINITION_STRING, pszTypeName, GetStructureDefinitionMiddleName(psCPD, GLSLTQ_INVALID));
+				snprintf (pszName, 128, STRUCT_DEFINITION_STRING, pszTypeName, GetStructureDefinitionMiddleName(psCPD, GLSLTQ_INVALID));
 			}
 
 			/* Find the definition symbol ID */
@@ -5953,7 +5953,7 @@ type_specifier:
 					uNameLength = 0;
 				}
 
-				sprintf(pszName, STRUCT_DEFINITION_STRING, pszTypeName, GetStructureDefinitionMiddleName(psCPD, GLSLTQ_INVALID));
+				snprintf(pszName, 128, STRUCT_DEFINITION_STRING, pszTypeName, GetStructureDefinitionMiddleName(psCPD, GLSLTQ_INVALID));
 			}
 
 			/* Find the structure definition symbol ID */
@@ -6174,7 +6174,7 @@ struct_specifier:
 			pszStructureName = acUnnamedStructureMem;
 
 			/* Create a unique name for this structure */
-			sprintf(pszStructureName, "UnnamedStruct%%%u", psGLSLTreeContext->uNumUnnamedStructures);
+			snprintf(pszStructureName, 128, "UnnamedStruct%%%u", psGLSLTreeContext->uNumUnnamedStructures);
 
 			psGLSLTreeContext->uNumUnnamedStructures++;
 		}
diff --git a/rogue/tools/intern/oglcompiler/parser/symtab.c b/rogue/tools/intern/oglcompiler/parser/symtab.c
index 146f9dc..23386e4 100644
--- a/rogue/tools/intern/oglcompiler/parser/symtab.c
+++ b/rogue/tools/intern/oglcompiler/parser/symtab.c
@@ -908,7 +908,7 @@ IMG_INTERNAL IMG_BOOL IncreaseScopeLevel(SymTable *psSymTable)
 
 	psSymTable->uCurrentScopeLevel++;
 
-	sprintf(acString, "@---- ScopeModifer %03u ----@", psSymTable->uCurrentScopeLevel);
+	snprintf(acString, 50, "@---- ScopeModifer %03u ----@", psSymTable->uCurrentScopeLevel);
 
 	return AddSymbolToTable(psSymTable,
 							acString,
@@ -944,7 +944,7 @@ IMG_INTERNAL IMG_BOOL DecreaseScopeLevel(SymTable *psSymTable)
 
 		psSymTable->uCurrentScopeLevel--;
 
-		sprintf(acString, "@---- ScopeModifer %03u ----@", psSymTable->uCurrentScopeLevel);
+		snprintf(acString, 50, "@---- ScopeModifer %03u ----@", psSymTable->uCurrentScopeLevel);
 
 		return AddSymbolToTable(psSymTable,
 								acString,
diff --git a/rogue/tools/services/hwperfbin2json/hwperfbin2json.c b/rogue/tools/services/hwperfbin2json/hwperfbin2json.c
index cdaeb7b..d2cf5ee 100644
--- a/rogue/tools/services/hwperfbin2json/hwperfbin2json.c
+++ b/rogue/tools/services/hwperfbin2json/hwperfbin2json.c
@@ -429,11 +429,11 @@ static void PrintRawV2PktHdr(FILE *out, RGX_HWPERF_V2_PACKET_HDR *packet, IMG_BO
 		{
 			if ((j+1)&0x3)
 			{
-				sprintf (line+strlen(line), "%02x ", *ptr);
+				snprintf (line+strlen(line), 100, "%02x ", *ptr);
 			}
 			else
 			{
-				sprintf (line+strlen(line), "%02x  ", *ptr);
+				snprintf (line+strlen(line), 100, "%02x  ", *ptr);
 			}
 			ptr++;
 		}
diff --git a/rogue/tools/services/hwperfbin2json/hwperfbin2json.h b/rogue/tools/services/hwperfbin2json/hwperfbin2json.h
index 62f1486..b2b4b46 100644
--- a/rogue/tools/services/hwperfbin2json/hwperfbin2json.h
+++ b/rogue/tools/services/hwperfbin2json/hwperfbin2json.h
@@ -398,23 +398,23 @@ static void PrintRawPacketHEX(FILE * out, IMG_UINT32* packet, IMG_UINT32* next)
 	fprintf(out, "    { size: %u\n", uiPacketSize);
 	for (i=uiPacketSize; i  >16 ; i -= 16)
 	{
-		sprintf (line, "--- %p : ", ptr);
-		sprintf (line+strlen(line), "%02x %02x %02x %02x  %02x %02x %02x %02x  %02x %02x %02x %02x  %02x %02x %02x %02x",
+		snprintf (line, 100, "--- %p : ", ptr);
+		snprintf (line+strlen(line), 100, "%02x %02x %02x %02x  %02x %02x %02x %02x  %02x %02x %02x %02x  %02x %02x %02x %02x",
 				ptr[0], ptr[1], ptr[2], ptr[3], ptr[4], ptr[5], ptr[6], ptr[7], ptr[8], ptr[9], ptr[10], ptr[11], ptr[12], ptr[13], ptr[14], ptr[15]);
 		ptr +=16;
 
 		fprintf(out, "%s\n", line);
 	}
-	sprintf (line, "--- %p : ", ptr);
+	snprintf (line, 100, "--- %p : ", ptr);
 	for (j = 0; j < i; j++)
 	{
 		if ((j+1)&0x3)
 		{
-			sprintf (line+strlen(line), "%02x ", *ptr);
+			snprintf (line+strlen(line), 100, "%02x ", *ptr);
 		}
 		else
 		{
-			sprintf (line+strlen(line), "%02x  ", *ptr);
+			snprintf (line+strlen(line), 100, "%02x  ", *ptr);
 		}
 		ptr++;
 	}
diff --git a/rogue/tools/services/pvrtld/tld_common.c b/rogue/tools/services/pvrtld/tld_common.c
index 59bcc89..90467fb 100644
--- a/rogue/tools/services/pvrtld/tld_common.c
+++ b/rogue/tools/services/pvrtld/tld_common.c
@@ -248,11 +248,11 @@ IMG_BOOL smartlyRenameFile(IMG_PCCHAR pszDirectoryPath, IMG_PCHAR pszNameAndExt,
 		{
 			if (pszSuffix != IMG_NULL)
 			{
-				sprintf(pszTmp, "%s%u_%s%s", pszDirectoryPath, ui8First + 1, pszNameAndExt, pszSuffix);
+				snprintf(pszTmp, MAX_PATH_LENGTH, "%s%u_%s%s", pszDirectoryPath, ui8First + 1, pszNameAndExt, pszSuffix);
 			}
 			else
 			{
-				sprintf(pszTmp, "%s%u_%s", pszDirectoryPath, ui8First + 1, pszNameAndExt);
+				snprintf(pszTmp, MAX_PATH_LENGTH, "%s%u_%s", pszDirectoryPath, ui8First + 1, pszNameAndExt);
 			}
 			DbgVerbose("[RIGHT] I am going to test access to '%s'.", pszTmp);
 			if (fileIsReadable(pszTmp))
@@ -267,11 +267,11 @@ IMG_BOOL smartlyRenameFile(IMG_PCCHAR pszDirectoryPath, IMG_PCHAR pszNameAndExt,
 		{
 			if (pszSuffix != IMG_NULL)
 			{
-				sprintf(pszTmp, "%s%u_%s%s", pszDirectoryPath, ui8First, pszNameAndExt, pszSuffix);
+				snprintf(pszTmp, MAX_PATH_LENGTH, "%s%u_%s%s", pszDirectoryPath, ui8First, pszNameAndExt, pszSuffix);
 			}
 			else
 			{
-				sprintf(pszTmp, "%s%u_%s", pszDirectoryPath, ui8First, pszNameAndExt);
+				snprintf(pszTmp, MAX_PATH_LENGTH, "%s%u_%s", pszDirectoryPath, ui8First, pszNameAndExt);
 			}
 			DbgVerbose("[MIDDLE] I am going to test access to '%s'.", pszTmp);
 			if (fileIsReadable(pszTmp))
@@ -285,11 +285,11 @@ IMG_BOOL smartlyRenameFile(IMG_PCCHAR pszDirectoryPath, IMG_PCHAR pszNameAndExt,
 		{
 			if (pszSuffix != IMG_NULL)
 			{
-				sprintf(pszTmp, "%s%u_%s%s", pszDirectoryPath, ui8First - 1, pszNameAndExt, pszSuffix);
+				snprintf(pszTmp, MAX_PATH_LENGTH, "%s%u_%s%s", pszDirectoryPath, ui8First - 1, pszNameAndExt, pszSuffix);
 			}
 			else
 			{
-				sprintf(pszTmp, "%s%u_%s", pszDirectoryPath, ui8First -1, pszNameAndExt);
+				snprintf(pszTmp, MAX_PATH_LENGTH, "%s%u_%s", pszDirectoryPath, ui8First -1, pszNameAndExt);
 			}
 			DbgVerbose("[LEFT] I am going to test access to '%s'.", pszTmp);
 			if (fileIsReadable(pszTmp))
@@ -330,14 +330,14 @@ IMG_BOOL smartlyRenameFile(IMG_PCCHAR pszDirectoryPath, IMG_PCHAR pszNameAndExt,
 
 	if (pszSuffix != IMG_NULL)
 	{
-		sprintf(pszOutName, "%s%u_%s%s", pszDirectoryPath, ui8Prefix, pszNameAndExt, pszSuffix);
+		snprintf(pszOutName, MAX_PATH_LENGTH, "%s%u_%s%s", pszDirectoryPath, ui8Prefix, pszNameAndExt, pszSuffix);
 	}
 	else
 	{
-		sprintf(pszOutName, "%s%u_%s", pszDirectoryPath, ui8Prefix, pszNameAndExt);
+		snprintf(pszOutName, MAX_PATH_LENGTH, "%s%u_%s", pszDirectoryPath, ui8Prefix, pszNameAndExt);
 	}
 
-	sprintf(pszTmp, "%s%s", pszDirectoryPath, pszNameAndExt);
+	snprintf(pszTmp, MAX_PATH_LENGTH, "%s%s", pszDirectoryPath, pszNameAndExt);
 
 	DbgVerbose("Renaming '%s' to '%s'.", pszTmp, pszOutName);
 
diff --git a/rogue/unittests/android/testwrap/testwrapwindow.cpp b/rogue/unittests/android/testwrap/testwrapwindow.cpp
index 523ba95..9dc43a2 100644
--- a/rogue/unittests/android/testwrap/testwrapwindow.cpp
+++ b/rogue/unittests/android/testwrap/testwrapwindow.cpp
@@ -238,7 +238,7 @@ TestwrapWindow::~TestwrapWindow()
 			{
 				if (apsBuffers[i]->iReleaseFenceFd >= 0)
 				{
-					sync_wait(apsBuffers[i]->iReleaseFenceFd, 0x7FFFFFFF);
+					//sync_wait(apsBuffers[i]->iReleaseFenceFd, 0x7FFFFFFF);
 					close(apsBuffers[i]->iReleaseFenceFd);
 				}
 				psAllocDevice->free(psAllocDevice, apsBuffers[i]->handle);
@@ -289,7 +289,7 @@ TestwrapWindow::dequeueBuffer_DEPRECATED(ANativeWindow* psWindow,
 	/* Before we return this buffer make sure the hwc is done with it. */
 	if (iFenceFd >= 0)
 	{
-		sync_wait(iFenceFd, 0x7FFFFFFF);
+		//sync_wait(iFenceFd, 0x7FFFFFFF);
 		close(iFenceFd);
 	}
 
-- 
1.7.4.1

