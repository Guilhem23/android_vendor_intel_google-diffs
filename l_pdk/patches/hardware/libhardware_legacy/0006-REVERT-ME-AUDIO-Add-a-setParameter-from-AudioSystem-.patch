From 0c5ffa1decb0d7d8696933bd3ac6a21a40383845 Mon Sep 17 00:00:00 2001
From: Francois Gaffie <francois.gaffie@intel.com>
Date: Mon, 8 Apr 2013 16:38:35 +0200
Subject: [PATCH 6/9] [REVERT ME][AUDIO] Add a setParameter from AudioSystem to
 the Policy

BZ: 217971

Orig-Bug: 163953

Some services use setParameter of AudioSystem to inform
of platform changes. These platform changes cannot be sent to the
policy in current implementation.
FM RX feature requires for example the policy to be aware of the
requested output device (speaker / headset). Policy needs to be informed.

This patch adds a setParameter link from AudioSystem to the policy
to handle generic setParameter call in the policy if needed.

Change-Id: Ifb6335557fd965d083338de159e9f02f0ae1cd77
Category: device enablement
Domain: AudioComms-Common
Origin: internal
Upstream-Candidate: yes
Signed-off-by: Francois Gaffie <francois.gaffie@intel.com>
---
 audio/AudioPolicyManagerBase.cpp                 | 11 +++++++++++
 audio/audio_policy_hal.cpp                       |  9 +++++++++
 include/hardware_legacy/AudioPolicyInterface.h   |  3 +++
 include/hardware_legacy/AudioPolicyManagerBase.h |  3 +++
 4 files changed, 26 insertions(+)

diff --git a/audio/AudioPolicyManagerBase.cpp b/audio/AudioPolicyManagerBase.cpp
index 54cfe77..9025dea 100644
--- a/audio/AudioPolicyManagerBase.cpp
+++ b/audio/AudioPolicyManagerBase.cpp
@@ -1526,6 +1526,17 @@ bool AudioPolicyManagerBase::isOffloadSupported(const audio_offload_info_t& offl
     return (profile != NULL);
 }
 
+status_t AudioPolicyManagerBase::setParameters(const String8 &keyValuePairs)
+{
+    AudioParameter param = AudioParameter(keyValuePairs);
+    return doParseParameters(param);
+}
+
+status_t AudioPolicyManagerBase::doParseParameters(AudioParameter &param)
+{
+    return NO_ERROR;
+}
+
 // ----------------------------------------------------------------------------
 // AudioPolicyManagerBase
 // ----------------------------------------------------------------------------
diff --git a/audio/audio_policy_hal.cpp b/audio/audio_policy_hal.cpp
index 87c4131..9ebea1b 100644
--- a/audio/audio_policy_hal.cpp
+++ b/audio/audio_policy_hal.cpp
@@ -330,6 +330,13 @@ static bool ap_is_offload_supported(const struct audio_policy *pol,
     return lap->apm->isOffloadSupported(*info);
 }
 
+static int ap_set_parameters(struct audio_policy *pol,
+                                  const char *keyValuePairs)
+{
+    struct legacy_audio_policy *lap = to_lap(pol);
+    return lap->apm->setParameters(String8(keyValuePairs));
+}
+
 static int create_legacy_ap(const struct audio_policy_device *device,
                             struct audio_policy_service_ops *aps_ops,
                             void *service,
@@ -379,6 +386,8 @@ static int create_legacy_ap(const struct audio_policy_device *device,
     lap->policy.dump = ap_dump;
     lap->policy.is_offload_supported = ap_is_offload_supported;
 
+    lap->policy.set_parameters = ap_set_parameters;
+
     lap->service = service;
     lap->aps_ops = aps_ops;
     lap->service_client =
diff --git a/include/hardware_legacy/AudioPolicyInterface.h b/include/hardware_legacy/AudioPolicyInterface.h
index da03ee3..2628861 100644
--- a/include/hardware_legacy/AudioPolicyInterface.h
+++ b/include/hardware_legacy/AudioPolicyInterface.h
@@ -166,6 +166,9 @@ public:
     virtual status_t    dump(int fd) = 0;
 
     virtual bool isOffloadSupported(const audio_offload_info_t& offloadInfo) = 0;
+
+    // setParameters interface in case a specific use of parameters should be done in the Policy
+    virtual status_t setParameters(const String8& keyValuePairs) = 0;
 };
 
 
diff --git a/include/hardware_legacy/AudioPolicyManagerBase.h b/include/hardware_legacy/AudioPolicyManagerBase.h
index 991d817..ff6e9be 100644
--- a/include/hardware_legacy/AudioPolicyManagerBase.h
+++ b/include/hardware_legacy/AudioPolicyManagerBase.h
@@ -148,6 +148,8 @@ public:
 
         virtual bool isOffloadSupported(const audio_offload_info_t& offloadInfo);
 
+        virtual status_t setParameters(const String8 &keyValuePairs);
+
 protected:
 
         enum routing_strategy {
@@ -526,6 +528,7 @@ protected:
         status_t loadAudioPolicyConfig(const char *path);
         void defaultAudioPolicyConfig(void);
 
+        virtual status_t doParseParameters(AudioParameter &param);
 
         AudioPolicyClientInterface *mpClientInterface;  // audio policy client interface
         audio_io_handle_t mPrimaryOutput;              // primary output handle
-- 
1.9.2

