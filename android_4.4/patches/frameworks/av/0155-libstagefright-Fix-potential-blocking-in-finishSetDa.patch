From 3373dc0cbe74f074f127ee3a88591eb402a1465a Mon Sep 17 00:00:00 2001
From: lwan89x <liangx.wang@intel.com>
Date: Tue, 12 Mar 2013 17:57:50 +0800
Subject: libstagefright: Fix potential blocking in finishSetDataSource_l.

BZ: 102648

It may be blocked when creating MediaExtractor with HTTP stream datasource.
We should do this work out of lock space.

Change-Id: I9f80253ef6b290b7878cc2c524cc61bde7c246c1
Orig-Change-Id: I76fad543f387ed24d3530a6d69512d544e12a9f2
Signed-off-by: lwan89x <liangx.wang@intel.com>
Signed-off-by: Dan Liang <dan.liang@intel.com>
---
 media/libstagefright/AwesomePlayer.cpp |   17 ++++++++++++++---
 1 files changed, 14 insertions(+), 3 deletions(-)

diff --git a/media/libstagefright/AwesomePlayer.cpp b/media/libstagefright/AwesomePlayer.cpp
index 39523bb..1b4c1be 100644
--- a/media/libstagefright/AwesomePlayer.cpp
+++ b/media/libstagefright/AwesomePlayer.cpp
@@ -2845,9 +2845,20 @@ status_t AwesomePlayer::finishSetDataSource_l() {
             mWVMExtractor->setUID(mUID);
         extractor = mWVMExtractor;
     } else {
-        extractor = MediaExtractor::Create(
-                dataSource, sniffedMIME.empty() ? NULL : sniffedMIME.c_str());
-
+        if (mCachedSource != NULL) {
+            // It's an HTTP stream, create extractor here may be blocked potentially.
+            // we should do it without mLock held.
+            mLock.unlock();
+            extractor = MediaExtractor::Create(
+                    dataSource, sniffedMIME.empty() ? NULL : sniffedMIME.c_str());
+            if (extractor != NULL) {
+                // ensure get the metadata
+                extractor->countTracks();
+            }
+            mLock.lock();
+        } else {
+            extractor = MediaExtractor::Create(dataSource, NULL);
+        }
         if (extractor == NULL) {
             return UNKNOWN_ERROR;
         }
-- 
1.7.4.1

