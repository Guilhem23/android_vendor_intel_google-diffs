From 8b5cc812bfb7baea590cd2b89fed4f39b4bd16f7 Mon Sep 17 00:00:00 2001
From: Xiaosong Wei <xiaosong.wei@intel.com>
Date: Tue, 20 Aug 2013 00:44:20 +0800
Subject: buffer processing logic fix in MPEG4/H263 OMX component

It should immediately start to process in/out buffers if both of
them are available. The original logic will only start to process
in/out buffers if all of output buffers are available, it will cause
OMXCodec read timeout if OMX Client don't release previous decoded
buffer and wait for next decoded buffer.

Category: AOSP Enhancement
Domain: MEDIA
Upstream-Candidate: yes

Change-Id: Id637614f103fbe7cd8bbb24baee4eeccb97d42df
Signed-off-by: Xiaosong Wei <xiaosong.wei@intel.com>
---
 .../codecs/m4v_h263/dec/SoftMPEG4.cpp              |   20 ++++++++++++++------
 .../libstagefright/codecs/m4v_h263/dec/SoftMPEG4.h |    1 +
 2 files changed, 15 insertions(+), 6 deletions(-)

diff --git a/media/libstagefright/codecs/m4v_h263/dec/SoftMPEG4.cpp b/media/libstagefright/codecs/m4v_h263/dec/SoftMPEG4.cpp
index fb2a430..f671930 100644
--- a/media/libstagefright/codecs/m4v_h263/dec/SoftMPEG4.cpp
+++ b/media/libstagefright/codecs/m4v_h263/dec/SoftMPEG4.cpp
@@ -91,6 +91,18 @@ status_t SoftMPEG4::initDecoder() {
     return OK;
 }
 
+OMX_BUFFERHEADERTYPE* SoftMPEG4::getAvailOutputBuffer()
+{
+    PortInfo *port = editPortInfo(1);
+    for (size_t j = 0; j < port->mBuffers.size(); ++j) {
+        struct BufferInfo* buffer = &(port->mBuffers.editItemAt(j));
+        if(buffer->mOwnedByUs == true){
+            return buffer->mHeader;
+        }
+    }
+    return NULL;
+}
+
 void SoftMPEG4::onQueueFilled(OMX_U32 portIndex) {
     if (mSignalledError || mOutputPortSettingsChange != NONE) {
         return;
@@ -99,14 +111,10 @@ void SoftMPEG4::onQueueFilled(OMX_U32 portIndex) {
     List<BufferInfo *> &inQueue = getPortQueue(0);
     List<BufferInfo *> &outQueue = getPortQueue(1);
 
-    while (!inQueue.empty() && outQueue.size() == kNumOutputBuffers) {
+    while (!inQueue.empty() && outQueue.size()) {
         BufferInfo *inInfo = *inQueue.begin();
         OMX_BUFFERHEADERTYPE *inHeader = inInfo->mHeader;
-
-        PortInfo *port = editPortInfo(1);
-
-        OMX_BUFFERHEADERTYPE *outHeader =
-            port->mBuffers.editItemAt(mNumSamplesOutput & 1).mHeader;
+        OMX_BUFFERHEADERTYPE *outHeader = getAvailOutputBuffer();
 
         if ((inHeader->nFlags & OMX_BUFFERFLAG_EOS) && inHeader->nFilledLen == 0) {
             inQueue.erase(inQueue.begin());
diff --git a/media/libstagefright/codecs/m4v_h263/dec/SoftMPEG4.h b/media/libstagefright/codecs/m4v_h263/dec/SoftMPEG4.h
index de14aaf..86a5a29 100644
--- a/media/libstagefright/codecs/m4v_h263/dec/SoftMPEG4.h
+++ b/media/libstagefright/codecs/m4v_h263/dec/SoftMPEG4.h
@@ -68,6 +68,7 @@ private:
 
     virtual void updatePortDefinitions();
     bool portSettingsChanged();
+    OMX_BUFFERHEADERTYPE* getAvailOutputBuffer();
 
     DISALLOW_EVIL_CONSTRUCTORS(SoftMPEG4);
 };
-- 
1.7.4.1

