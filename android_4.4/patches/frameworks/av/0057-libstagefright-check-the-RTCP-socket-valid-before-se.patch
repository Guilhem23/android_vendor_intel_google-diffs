From fa8542cd4a6a4b28a396f014c6fe15c6aad999dd Mon Sep 17 00:00:00 2001
From: ywan171 <yi.a.wang@intel.com>
Date: Tue, 31 Jul 2012 07:46:13 +0800
Subject: libstagefright: check the RTCP socket valid before sending RR

BZ: 49305

make sure the rtcp socket is valid before sending RR to avoid assertion failure

orig-patch
30070(BZ:18533) patch porting from R2 to R3 for RTSP
29714(BZ:16913) release the RTP socket when remove the stream check the socket
                valid before sending RR

Category: aosp improvement
Domain: Video.Media-streaming
Origin: internal
Upstream-Candidate: yes

Change-Id: Iaa9cd7b8cdf25a817cc3ab681c6b7ce4030b21e7
Orig-Change-Id: I877410326b23bd7936d700e75aa0909f7f4b5f24
Signed-off-by: ywan171 <yi.a.wang@intel.com>
Signed-off-by: chuzhoux <chux.zhou@intel.com>
---
 media/libstagefright/rtsp/ARTPConnection.cpp |   74 +++++++++++++++++---------
 1 files changed, 49 insertions(+), 25 deletions(-)

diff --git a/media/libstagefright/rtsp/ARTPConnection.cpp b/media/libstagefright/rtsp/ARTPConnection.cpp
index 3b8b3c7..b5d2822 100644
--- a/media/libstagefright/rtsp/ARTPConnection.cpp
+++ b/media/libstagefright/rtsp/ARTPConnection.cpp
@@ -321,7 +321,28 @@ void ARTPConnection::onPollStreams() {
     int64_t nowUs = ALooper::GetNowUs();
     if (mLastReceiverReportTimeUs <= 0
             || mLastReceiverReportTimeUs + 5000000ll <= nowUs) {
-        sp<ABuffer> buffer = new ABuffer(kMaxUDPSize);
+        struct timeval tv;
+        tv.tv_sec = 0;
+        tv.tv_usec = kSelectTimeoutUs;
+        fd_set ws;
+        FD_ZERO(&ws);
+        int maxSocket = -1;
+        for (List<StreamInfo>::iterator it = mStreams.begin(); it != mStreams.end(); ++it) {
+            if ((*it).mIsInjected) {
+                continue;
+            }
+            FD_SET(it->mRTCPSocket, &ws);
+            if (it->mRTCPSocket > maxSocket) {
+                maxSocket = it->mRTCPSocket;
+            }
+        }
+
+        if (maxSocket == -1) {
+            return;
+        }
+
+        int res = select(maxSocket + 1, NULL, &ws, NULL, &tv);
+
         List<StreamInfo>::iterator it = mStreams.begin();
         while (it != mStreams.end()) {
             StreamInfo *s = &*it;
@@ -338,40 +359,43 @@ void ARTPConnection::onPollStreams() {
                 continue;
             }
 
-            buffer->setRange(0, 0);
+            if (FD_ISSET(s->mRTCPSocket, &ws)) {
+                sp<ABuffer> buffer = new ABuffer(kMaxUDPSize);
+                buffer->setRange(0, 0);
 
-            for (size_t i = 0; i < s->mSources.size(); ++i) {
-                sp<ARTPSource> source = s->mSources.valueAt(i);
+                for (size_t i = 0; i < s->mSources.size(); ++i) {
+                    sp<ARTPSource> source = s->mSources.valueAt(i);
 
-                source->addReceiverReport(buffer);
+                    source->addReceiverReport(buffer);
 
-                if (mFlags & kRegularlyRequestFIR) {
-                    source->addFIR(buffer);
+                    if (mFlags & kRegularlyRequestFIR) {
+                        source->addFIR(buffer);
+                    }
                 }
-            }
 
-            if (buffer->size() > 0) {
-                ALOGV("Sending RR...");
+                if (buffer->size() > 0) {
+                    ALOGV("Sending RR...");
 
-                ssize_t n;
-                do {
-                    n = sendto(
-                        s->mRTCPSocket, buffer->data(), buffer->size(), 0,
-                        (const struct sockaddr *)&s->mRemoteRTCPAddr,
-                        sizeof(s->mRemoteRTCPAddr));
-                } while (n < 0 && errno == EINTR);
+                    ssize_t n;
+                    do {
+                        n = sendto(
+                            s->mRTCPSocket, buffer->data(), buffer->size(), 0,
+                            (const struct sockaddr *)&s->mRemoteRTCPAddr,
+                            sizeof(s->mRemoteRTCPAddr));
+                       } while (n < 0 && errno == EINTR);
 
-                if (n <= 0) {
-                    ALOGW("failed to send RTCP receiver report (%s).",
-                         n == 0 ? "connection gone" : strerror(errno));
+                    if (n <= 0) {
+                        ALOGW("failed to send RTCP receiver report (%s).",
+                            n == 0 ? "connection gone" : strerror(errno));
 
-                    it = mStreams.erase(it);
-                    continue;
-                }
+                        it = mStreams.erase(it);
+                        continue;
+                    }
 
-                CHECK_EQ(n, (ssize_t)buffer->size());
+                    CHECK_EQ(n, (ssize_t)buffer->size());
 
-                mLastReceiverReportTimeUs = nowUs;
+                    mLastReceiverReportTimeUs = nowUs;
+                }
             }
 
             ++it;
-- 
1.7.4.1

