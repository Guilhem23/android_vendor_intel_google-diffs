From 052913623fa21e2d9e31e7152b4a7e19ed3e7764 Mon Sep 17 00:00:00 2001
From: ywan171 <yi.a.wang@intel.com>
Date: Wed, 19 Sep 2012 22:40:05 +0800
Subject: libstagefright: use RTP time of first AU in the two track as the fake SR's TimpStamp

BZ: 57496

This is google's bug in Jellybean, and will be trigued by the long interval of the first SRs
from the audio and video track.should use RTP time of first AU in the two track as the fake SR's
RTP time if fake SR is used.

Category: aosp improvement
Domain: Video.Media-streaming
Origin: internal
Upstream-Candidate: yes

Change-Id: I087f645409d3d186c31dc2d3cbe7a2b923e624c7
Orig-Change-Id: I93f7fe28e47e81c3086aee5ad6e1765094a37957
Signed-off-by: ywan171 <yi.a.wang@intel.com>
Signed-off-by: chuzhoux <chux.zhou@intel.com>
---
 media/libstagefright/rtsp/MyHandler.h |   22 +++++++++++++++++++++-
 1 files changed, 21 insertions(+), 1 deletions(-)

diff --git a/media/libstagefright/rtsp/MyHandler.h b/media/libstagefright/rtsp/MyHandler.h
index 3298223..f14824b 100644
--- a/media/libstagefright/rtsp/MyHandler.h
+++ b/media/libstagefright/rtsp/MyHandler.h
@@ -850,6 +850,7 @@ struct MyHandler : public AHandler {
                 mSeekPending = false;
                 mFirstAccessUnit = true;
                 mAllTracksHaveTime = false;
+                mTryFakeRTCP = false;
                 mNTPAnchorUs = -1;
                 mMediaAnchorUs = -1;
                 mNumAccessUnitsReceived = 0;
@@ -945,7 +946,11 @@ struct MyHandler : public AHandler {
                     uint64_t ntpTime;
                     CHECK(msg->findInt32("rtp-time", (int32_t *)&rtpTime));
                     CHECK(msg->findInt64("ntp-time", (int64_t *)&ntpTime));
-
+                    if (mTryFakeRTCP) {
+                       // already use Fake RTCP to calculate time, so don't update track
+                       // mRTPAnchor or mNTPAnchorUs with the later arrived SR
+                       break;
+                    }
                     onTimeUpdate(trackIndex, rtpTime, ntpTime);
                     break;
                 }
@@ -1183,6 +1188,7 @@ struct MyHandler : public AHandler {
                 }
 
                 mAllTracksHaveTime = false;
+                mTryFakeRTCP = false;
                 mNTPAnchorUs = -1;
 
                 // Start new timeoutgeneration to avoid getting timeout
@@ -1321,6 +1327,7 @@ struct MyHandler : public AHandler {
                         ALOGW("We received some RTCP packets, but time "
                               "could not be established on all tracks, now "
                               "using fake timestamps");
+                        mTryFakeRTCP = true;
 
                         fakeTimestamps();
                     }
@@ -1471,6 +1478,7 @@ private:
         bool mNewSegment;
 
         uint32_t mRTPAnchor;
+        bool mFakeRTPAnchor;
         int64_t mNTPAnchorUs;
         int32_t mTimeScale;
         bool mEOSReceived;
@@ -1557,6 +1565,7 @@ private:
         info->mNTPAnchorUs = -1;
         info->mNormalPlayTimeRTP = 0;
         info->mNormalPlayTimeUs = 0ll;
+        info->mFakeRTPAnchor = false;
         info->mFirstAccessUnit = false;
 
         unsigned long PT;
@@ -1661,6 +1670,8 @@ private:
     void fakeTimestamps() {
         mNTPAnchorUs = -1ll;
         for (size_t i = 0; i < mTracks.size(); ++i) {
+            TrackInfo *track = &mTracks.editItemAt(i);
+            track->mFakeRTPAnchor = true;
             onTimeUpdate(i, 0, 0ll);
         }
     }
@@ -1793,6 +1804,15 @@ private:
             return;
         }
 
+        if (track->mFakeRTPAnchor && !track->mPackets.empty()) {
+            sp<ABuffer> accessUnit = *track->mPackets.begin();
+            uint32_t rtpTime;
+            CHECK(accessUnit->meta()->findInt32(
+                    "rtp-time", (int32_t *)&rtpTime));
+            track->mFakeRTPAnchor = false;
+            track->mRTPAnchor = rtpTime;
+        }
+
         while (!track->mPackets.empty()) {
             sp<ABuffer> accessUnit = *track->mPackets.begin();
             track->mPackets.erase(track->mPackets.begin());
-- 
1.7.4.1

