From 1f6c7d99c559b0ac0e510aa17e4337c681f7de59 Mon Sep 17 00:00:00 2001
From: ywan171 <yi.a.wang@intel.com>
Date: Tue, 27 Aug 2013 14:13:15 +0800
Subject: libmediaplayService: fix crash when HLS switches between fullscreen and inline mode in HTML5

BZ: 132240

fix crash when HLS switches between fullscreen and inline mode in HTML5
1. In waitUntilAllPossibleNativeWindowBuffersAreReady func, the minUndequeuedBufs
   should add 2 if OMXCodec::kRequiresHoldExtraBuffers is set
   or else there may be time out in dequeueBuffer when enters fullscreen

2. In feedDecoderInputData func, we must make sure all track are flushed completely,
   or else there may be check error in flushDecoder.
   If the track is still FLUSHED other than NONE, it means the other track is not flushed yet,
   return -EWOULDBLOCK error to wait.

Category:aosp improvement
Domain: Video.Media-video editor
Origin: internal
Upstream-Candidate: Yes

Change-Id: I38bb597b11cb608453e659438481b4f75d321bcd
Orig-Change-Id: I7b0d97c5a4da4e5f70379e50328b565986ab3586
Signed-off-by: ywan171 <yi.a.wang@intel.com>
Reviewed-on: http://android.intel.com:8080/127375
Reviewed-by: Feng, Wei <wei.feng@intel.com>
Reviewed-by: Shi, PingX <pingx.shi@intel.com>
Tested-by: Shi, PingX <pingx.shi@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
Signed-off-by: chuzhoux <chux.zhou@intel.com>
---
 media/libmediaplayerservice/nuplayer/NuPlayer.cpp |    6 ++++++
 media/libstagefright/ACodec.cpp                   |    8 ++++++++
 2 files changed, 14 insertions(+), 0 deletions(-)

diff --git a/media/libmediaplayerservice/nuplayer/NuPlayer.cpp b/media/libmediaplayerservice/nuplayer/NuPlayer.cpp
index 5d5bdcc..22802ca 100644
--- a/media/libmediaplayerservice/nuplayer/NuPlayer.cpp
+++ b/media/libmediaplayerservice/nuplayer/NuPlayer.cpp
@@ -1052,6 +1052,12 @@ status_t NuPlayer::feedDecoderInputData(bool audio, const sp<AMessage> &msg) {
     sp<AMessage> reply;
     CHECK(msg->findMessage("reply", &reply));
 
+    // if one track is in FLUSHED state, it means the other track has not finished flush,
+    // return -EWOULDBLOCK to wait all tracks finish flushed and become NONE state.
+    if ( (audio && mFlushingAudio == FLUSHED) || (!audio && mFlushingVideo == FLUSHED)) {
+        return -EWOULDBLOCK;
+    }
+ 
     if ((audio && IsFlushingState(mFlushingAudio))
             || (!audio && IsFlushingState(mFlushingVideo))) {
         reply->setInt32("err", INFO_DISCONTINUITY);
diff --git a/media/libstagefright/ACodec.cpp b/media/libstagefright/ACodec.cpp
index e3873ca..53999d8 100644
--- a/media/libstagefright/ACodec.cpp
+++ b/media/libstagefright/ACodec.cpp
@@ -2554,6 +2554,14 @@ void ACodec::waitUntilAllPossibleNativeWindowBuffersAreReturnedToUs() {
         minUndequeuedBufs = 0;
     }
 
+    // XXX: should hold extra two buffers in surface texture back end.
+    // Currently, intel hw overlay need always hold output buffer until
+    // flip to another buffer. So we should hold more buffers to avoid
+    // buffer overwrite by decoder.
+    if (mQuirks & OMXCodec::kRequiresHoldExtraBuffers) {
+        minUndequeuedBufs += 2;
+    }
+
     while (countBuffersOwnedByNativeWindow() > (size_t)minUndequeuedBufs
             && dequeueBufferFromNativeWindow() != NULL) {
         // these buffers will be submitted as regular buffers; account for this
-- 
1.7.4.1

