From 80ecebef3d1201f51d7cb2d8105deeca84e8512f Mon Sep 17 00:00:00 2001
From: Gu, Wangyi <wangyi.gu@intel.com>
Date: Tue, 18 Jun 2013 10:26:54 +0800
Subject: fix the messy thumbnail when imported one special clip

BZ: 113431

It's android defect.
root cause: When MP4 container hasn't stss table it assumes all samples are
sync samples. So it's possible to seek to a p frame and see messy thumbnail.
Use the meta data type kKeyFakeSync to check whether MP4 container has stss
table or not.

Category:aosp improvement
Domain: Video.Media-video editor
Origin: internal
Upstream-Candidate: Yes

Change-Id: I7c819c703054b8005d40b5bc74bb9fe309cb3cff
Orig-Change-Id: Ibd980dafd7de86351544b4da4efbc9bb84eb2288
Signed-off-by: Gu, Wangyi <wangyi.gu@intel.com>
Signed-off-by: chuzhoux <chux.zhou@intel.com>
---
 .../stagefrightshells/src/VideoEditor3gpReader.cpp |   24 ++++++++++++++++---
 1 files changed, 20 insertions(+), 4 deletions(-)

diff --git a/libvideoeditor/vss/stagefrightshells/src/VideoEditor3gpReader.cpp b/libvideoeditor/vss/stagefrightshells/src/VideoEditor3gpReader.cpp
index 3c8915a..9cb4fa7 100755
--- a/libvideoeditor/vss/stagefrightshells/src/VideoEditor3gpReader.cpp
+++ b/libvideoeditor/vss/stagefrightshells/src/VideoEditor3gpReader.cpp
@@ -973,7 +973,7 @@ M4OSA_ERR VideoEditor3gpReader_getNextAu(M4OSA_Context context,
     MediaSource::ReadOptions options;
     M4OSA_Bool flag = M4OSA_FALSE;
     status_t error;
-    int32_t i32Tmp = 0;
+    int32_t i32Tmp = 0, isFakeSync = 0;
 
     M4OSA_DEBUG_IF1(( pC== 0), M4ERR_PARAMETER,
         "VideoEditor3gpReader_getNextAu: invalid context");
@@ -1027,8 +1027,14 @@ M4OSA_ERR VideoEditor3gpReader_getNextAu(M4OSA_Context context,
                 {
                     if (mMediaBuffer->meta_data()->findInt32(kKeyIsSyncFrame,
                         &i32Tmp) && i32Tmp) {
+                        mMediaBuffer->meta_data()->findInt32(kKeyIsFakeSync, &isFakeSync);
+                        if (!isFakeSync){
                             ALOGV("SYNC FRAME FOUND--%d", i32Tmp);
-                        pAu->attribute = AU_RAP;
+                            pAu->attribute = AU_RAP;
+                        } else {
+                            ALOGW("It's a fake sync frame!");
+                            pAu->attribute = AU_P_Frame;
+                        }
                     }
                     else {
                         pAu->attribute = AU_P_Frame;
@@ -1051,8 +1057,14 @@ M4OSA_ERR VideoEditor3gpReader_getNextAu(M4OSA_Context context,
             if(mMediaBuffer != NULL) {
                 if (mMediaBuffer->meta_data()->findInt32(kKeyIsSyncFrame,
                     &i32Tmp) && i32Tmp) {
-                    ALOGV("SYNC FRAME FOUND--%d", i32Tmp);
-                    pAu->attribute = AU_RAP;
+                    mMediaBuffer->meta_data()->findInt32(kKeyIsFakeSync, &isFakeSync);
+                    if (!isFakeSync){
+                        ALOGV("SYNC FRAME FOUND--%d", i32Tmp);
+                        pAu->attribute = AU_RAP;
+                    } else {
+                        ALOGW("It's a fake sync frame!");
+                        pAu->attribute = AU_P_Frame;
+                    }
                 }
                 else {
                     pAu->attribute = AU_P_Frame;
@@ -1070,6 +1082,10 @@ M4OSA_ERR VideoEditor3gpReader_getNextAu(M4OSA_Context context,
         return M4ERR_PARAMETER;
     }
 
+    if (tempTime64 == 0 && pAu->attribute == AU_P_Frame) {
+        ALOGW("The first frame should be sync frame!");
+        pAu->attribute = AU_RAP;
+    }
     if (mMediaBuffer != NULL) {
         if( (pAu->dataAddress == NULL) ||  (pAu->size < \
             mMediaBuffer->range_length())) {
-- 
1.7.4.1

