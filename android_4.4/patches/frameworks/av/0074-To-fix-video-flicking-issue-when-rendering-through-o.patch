From 1e2acc45fa6c1635c65b6918a7319e6037c2507c Mon Sep 17 00:00:00 2001
From: Jason Hu <jason.hu@intel.com>
Date: Thu, 26 Jul 2012 17:25:57 -0400
Subject: To fix video flicking issue when rendering through overlay.

BZ: 48923

Currently, hw overlay need always hold an output buffer until flip
to another buffer. So we should hold two more buffers in surface
texture back end to avoid blocking on dequeue buffer by decoder.

Category: feature differentiation
Domain: Video.Rendering-HDMI
Origin: internal
Upstream-Candidate: no

Change-Id: I07a6b40b7664a37e9549e43146969946ca3006e0
Orig-Change-Id: I60c5483952a5c22bf008f259979f96ba50f292fe
Signed-off-by: Jason Hu <jason.hu@intel.com>
Signed-off-by: Dan Liang <dan.liang@intel.com>
---
 include/media/stagefright/OMXCodec.h |    1 +
 media/libstagefright/OMXCodec.cpp    |   12 ++++++++++++
 2 files changed, 13 insertions(+), 0 deletions(-)

diff --git a/include/media/stagefright/OMXCodec.h b/include/media/stagefright/OMXCodec.h
index 1597e9c..9072b71 100644
--- a/include/media/stagefright/OMXCodec.h
+++ b/include/media/stagefright/OMXCodec.h
@@ -100,6 +100,7 @@ struct OMXCodec : public MediaSource,
         kSupportsMultipleFramesPerInputBuffer = 1024,
         kRequiresLargerEncoderOutputBuffer    = 2048,
         kOutputBuffersAreUnreadable           = 4096,
+        kRequiresHoldExtraBuffers             = 65536,
     };
 
     struct CodecNameAndQuirks {
diff --git a/media/libstagefright/OMXCodec.cpp b/media/libstagefright/OMXCodec.cpp
index 8cb90fb..0e4e330 100644
--- a/media/libstagefright/OMXCodec.cpp
+++ b/media/libstagefright/OMXCodec.cpp
@@ -265,6 +265,10 @@ uint32_t OMXCodec::getComponentQuirks(
                 index, "output-buffers-are-unreadable")) {
         quirks |= kOutputBuffersAreUnreadable;
     }
+    if (list->codecHasQuirk(
+                index, "requires-hold-extra-buffers")) {
+        quirks |= kRequiresHoldExtraBuffers;
+    }
 
     return quirks;
 }
@@ -1898,6 +1902,14 @@ status_t OMXCodec::allocateOutputBuffersFromNativeWindow() {
         return err;
     }
 
+    // XXX: should hold extra two buffers in surface texture back end.
+    // Currently, intel hw overlay need always hold output buffer until
+    // flip to another buffer. So we should hold more buffers to avoid
+    // buffer overwrite by decoder.
+    if (mQuirks & kRequiresHoldExtraBuffers) {
+        minUndequeuedBufs += 2;
+    }
+
     // XXX: Is this the right logic to use?  It's not clear to me what the OMX
     // buffer counts refer to - how do they account for the renderer holding on
     // to buffers?
-- 
1.7.4.1

