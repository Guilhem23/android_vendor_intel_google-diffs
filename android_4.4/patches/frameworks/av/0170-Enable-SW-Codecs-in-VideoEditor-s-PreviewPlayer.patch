From 496ab7056e0d0cf0e7cfb40c9adba33a927c0266 Mon Sep 17 00:00:00 2001
From: Xiaosong Wei <xiaosong.wei@intel.com>
Date: Tue, 13 Aug 2013 22:56:39 +0800
Subject: Enable SW Codecs in VideoEditor's PreviewPlayer

fallback to SW codec When there's no related HW codec support and render
the buffer decoded by SW codec into NativeWindowRenderer as external
buffer so that Renderer can do I420->YV12 conversion and get it
rendered by SurfaceFlinger.

HSD:5179207
Category: AOSP Enhancement
Domain: MEDIA
Upstream-Candidate: yes

Change-Id: Ia105f800debf0f768e09a61e1effbec25cbeeee1
Signed-off-by: Xiaosong Wei <xiaosong.wei@intel.com>
---
 libvideoeditor/lvpp/PreviewPlayer.cpp |   18 +++++++++++++++++-
 libvideoeditor/lvpp/PreviewPlayer.h   |    2 ++
 2 files changed, 19 insertions(+), 1 deletions(-)

diff --git a/libvideoeditor/lvpp/PreviewPlayer.cpp b/libvideoeditor/lvpp/PreviewPlayer.cpp
index 7bc0f44..8e0b239 100755
--- a/libvideoeditor/lvpp/PreviewPlayer.cpp
+++ b/libvideoeditor/lvpp/PreviewPlayer.cpp
@@ -746,11 +746,22 @@ status_t PreviewPlayer::initVideoDecoder_l(uint32_t flags) {
         return UNKNOWN_ERROR;
     }
 
+    mIsVideoDecoderHW = true;
+
     mVideoSource = OMXCodec::Create(
             mClient.interface(), mVideoTrack->getFormat(),
             false,
             mVideoTrack,
             NULL, flags, mVideoRenderer->getTargetWindow());
+    if(mVideoSource == NULL){
+        ALOGW("No HW Decoder found, fall back to SW Decoder");
+        mVideoSource = OMXCodec::Create(
+            mClient.interface(), mVideoTrack->getFormat(),
+            false,
+            mVideoTrack,
+            NULL, 0, mVideoRenderer->getTargetWindow());
+        mIsVideoDecoderHW = false;
+    }
 
     if (mVideoSource != NULL) {
         int64_t durationUs;
@@ -1062,8 +1073,13 @@ void PreviewPlayer::onVideoEvent() {
     }
 
     if (mVideoRenderer != NULL) {
+        bool isExtBuffer = false;
+        if(mIsVideoSourceJpg || !mIsVideoDecoderHW){
+            isExtBuffer = true;
+            ALOGV("Render external buffer");
+        }
         mVideoRenderer->render(mVideoBuffer, mCurrentVideoEffect,
-                mRenderingMode, mIsVideoSourceJpg);
+                mRenderingMode, isExtBuffer);
     }
 
     mVideoBuffer->release();
diff --git a/libvideoeditor/lvpp/PreviewPlayer.h b/libvideoeditor/lvpp/PreviewPlayer.h
index 5a13b58..9e6eab5 100755
--- a/libvideoeditor/lvpp/PreviewPlayer.h
+++ b/libvideoeditor/lvpp/PreviewPlayer.h
@@ -235,6 +235,8 @@ private:
     M4VIFI_UInt8*  mFrameRGBBuffer;
     M4VIFI_UInt8*  mFrameYUVBuffer;
 
+    bool mIsVideoDecoderHW;
+
     void cancelPlayerEvents_l(bool updateProgressCb = false);
     status_t setDataSource_l(const sp<MediaExtractor> &extractor);
     status_t setDataSource_l(const char *path);
-- 
1.7.4.1

