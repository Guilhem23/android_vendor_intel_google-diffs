From eebadb2450690f27b66016f5ba6c4feeaa76c1ae Mon Sep 17 00:00:00 2001
From: Dan Liang <dan.liang@intel.com>
Date: Wed, 28 Aug 2013 11:59:06 +0800
Subject: NuPlayer: make sure RTSPSource resume can be handled in right state

BZ: 130321

Sometimes the network conditions are bad, the client initiates a TEARDOWN.
In this case, mHanlder has been destructed when NuPlayer::RTSPSource::resume
is called.

Solution: check the state before resume.

Category: aosp improvement
Domain: Video.Media-streaming
Origin: internal
Upstream-Candidate: yes

Change-Id: I93a80e37f15d1bfa592cebe41a53e82198b915fc
Orig-Change-Id: Icc8e07e40270e83282b13bcff28212175c122a32
Signed-off-by: Dan Liang <dan.liang@intel.com>
Reviewed-on: http://android.intel.com:8080/128127
Reviewed-by: Wang, Yi A <yi.a.wang@intel.com>
Reviewed-by: Shi, PingX <pingx.shi@intel.com>
Tested-by: Shi, PingX <pingx.shi@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
Signed-off-by: chuzhoux <chux.zhou@intel.com>
---
 .../libmediaplayerservice/nuplayer/RTSPSource.cpp  |    6 +++++-
 1 files changed, 5 insertions(+), 1 deletions(-)

diff --git a/media/libmediaplayerservice/nuplayer/RTSPSource.cpp b/media/libmediaplayerservice/nuplayer/RTSPSource.cpp
index f89bd1d..62921ef 100644
--- a/media/libmediaplayerservice/nuplayer/RTSPSource.cpp
+++ b/media/libmediaplayerservice/nuplayer/RTSPSource.cpp
@@ -137,7 +137,11 @@ void NuPlayer::RTSPSource::pause() {
 }
 
 void NuPlayer::RTSPSource::resume() {
-    mHandler->resume();
+    if (mState == DISCONNECTED) {
+        return;
+    } else if (mHandler !=  NULL) {
+        mHandler->resume();
+    }
 }
 
 status_t NuPlayer::RTSPSource::feedMoreTSData() {
-- 
1.7.4.1

