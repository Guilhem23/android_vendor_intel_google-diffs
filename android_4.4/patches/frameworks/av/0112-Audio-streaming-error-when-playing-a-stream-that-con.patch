From d36dd6cdb010adb3c0f5a45756027241f2bef05a Mon Sep 17 00:00:00 2001
From: gbhakteX <gurudattax.bhakte@intel.com>
Date: Thu, 26 Jul 2012 15:40:18 +0530
Subject: Audio streaming error when playing a stream that contains "end of file".

BZ: 24194

Although EOS is being posted upon receipt of BYE message from RTSP
server, still it didn't reach the media framework and application.
This happens because the Nuplayer::Renderer::onDrainAudioQueue() funtion
returns false after mAudioSink->getPosition() call , and the EOS message
present in mAudioQueue was lost.The mAudioSink->getPosition() returns
NO_INIT as mAudioSink->open() is not yet called,
hence no audio track exists in MediaPlayerService::AudioOutput.

Category: aosp improvement
Domain: AUDIO_MEDIA-Audio Framework
Origin: Internal
Upstream-Candidate: Yes

Change-Id: I1934bab1fe72b9960ba9e253bb6665b97e51b19e
Orig-Change-Id: Icf68e01c4580df4ab91d3000f54a70a0c439cb14
Signed-off-by: gbhakteX <gurudattax.bhakte@intel.com>
Reviewed-on: http://android.intel.com:8080/77935
Reviewed-by: Yao, Yong <yong.yao@intel.com>
Reviewed-by: M, Arulselvan <arulselvan.m@intel.com>
Tested-by: M, Arulselvan <arulselvan.m@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
Signed-off-by: Arulselvan M <arulselvan.m@intel.com>
---
 .../nuplayer/NuPlayerRenderer.cpp                  |   19 +++++++++++++++++--
 1 files changed, 17 insertions(+), 2 deletions(-)

diff --git a/media/libmediaplayerservice/nuplayer/NuPlayerRenderer.cpp b/media/libmediaplayerservice/nuplayer/NuPlayerRenderer.cpp
index 81556f3..486c5cf 100644
--- a/media/libmediaplayerservice/nuplayer/NuPlayerRenderer.cpp
+++ b/media/libmediaplayerservice/nuplayer/NuPlayerRenderer.cpp
@@ -265,8 +265,23 @@ void NuPlayer::Renderer::notifyIfMediaRenderingStarted() {
 
 bool NuPlayer::Renderer::onDrainAudioQueue() {
     uint32_t numFramesPlayed;
-    if (mAudioSink->getPosition(&numFramesPlayed) != OK) {
-        return false;
+    status_t positionStatus = mAudioSink->getPosition(&numFramesPlayed);
+    if (positionStatus == NO_INIT) {
+        // The AudioSink track may not have been created yet, which returns NO_INIT.
+        // Check if EOS has been reached and call notifyEOS, so that this message
+        // is not lost before this funtion returns false below.
+        if (!mAudioQueue.empty()) {
+            QueueEntry *firstEntry = &*mAudioQueue.begin();
+            if (firstEntry->mBuffer == NULL) {
+                // EOS is reached
+                notifyEOS(true /*audio */, firstEntry->mFinalResult);
+                mAudioQueue.erase(mAudioQueue.begin());
+            }
+            firstEntry = NULL;
+         }
+         return false;
+    } else if (positionStatus != OK) {
+               return false;
     }
 
     ssize_t numFramesAvailableToWrite =
-- 
1.7.4.1

