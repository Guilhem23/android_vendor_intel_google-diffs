From 42b9d94dea8be2d83753200f52dbfc71724109d0 Mon Sep 17 00:00:00 2001
From: ywan171 <yi.a.wang@intel.com>
Date: Tue, 31 Jul 2012 01:50:57 +0800
Subject: libstagefright: enhance rtsp assembler to avoid video stuck in bad wifi environmemnt

BZ: 49305

enhance rtsp assembler to avoid video stuck, for too much packet lost and
waiting for each packet for 10ms will cause video stuck.add a disorder threshold
to fix the issue.

orig-patch:
54752(BZ:43890)add the tolerance for packet disorder of RTP
51058(BZ:38132)libmediaplayservice: enhance the seek operation for rtsp stream

Category: aosp improvement
Domain: Video.Media-streaming
Origin: internal
Upstream-Candidate: yes

Change-Id: I2512117ec7c9a7063d070dc84efc36a8fa5c67ab
Orig-Change-Id: I357cc99d49604eb0c290b5252698dceb23b73388
Signed-off-by: ywan171 <yi.a.wang@intel.com>
Signed-off-by: chuzhoux <chux.zhou@intel.com>
---
 media/libstagefright/rtsp/AAVCAssembler.cpp        |    8 +++++++-
 .../rtsp/AMPEG4ElementaryAssembler.cpp             |    8 +++++++-
 2 files changed, 14 insertions(+), 2 deletions(-)

diff --git a/media/libstagefright/rtsp/AAVCAssembler.cpp b/media/libstagefright/rtsp/AAVCAssembler.cpp
index a6825eb..0c3d34d 100644
--- a/media/libstagefright/rtsp/AAVCAssembler.cpp
+++ b/media/libstagefright/rtsp/AAVCAssembler.cpp
@@ -30,6 +30,7 @@
 #include <stdint.h>
 
 namespace android {
+static const size_t kPacketDisorderThresh = 50;
 
 // static
 AAVCAssembler::AAVCAssembler(const sp<AMessage> &notify)
@@ -73,7 +74,12 @@ ARTPAssembler::AssemblyStatus AAVCAssembler::addNALUnit(
         mNextExpectedSeqNo = (uint32_t)buffer->int32Data();
     } else if ((uint32_t)buffer->int32Data() != mNextExpectedSeqNo) {
         ALOGV("Not the sequence number I expected");
-
+        // too much packet lost and waiting for each packet for 10ms  will cause video stuck.
+        // directly drop the packets if the lost packet surpass the threshold
+        if (((uint32_t)buffer->int32Data() - mNextExpectedSeqNo) > kPacketDisorderThresh) {
+            mNextExpectedSeqNo = (uint32_t)buffer->int32Data();
+            return MALFORMED_PACKET;
+        }
         return WRONG_SEQUENCE_NUMBER;
     }
 
diff --git a/media/libstagefright/rtsp/AMPEG4ElementaryAssembler.cpp b/media/libstagefright/rtsp/AMPEG4ElementaryAssembler.cpp
index b9176a1..2ace475 100644
--- a/media/libstagefright/rtsp/AMPEG4ElementaryAssembler.cpp
+++ b/media/libstagefright/rtsp/AMPEG4ElementaryAssembler.cpp
@@ -35,6 +35,7 @@
 
 namespace android {
 
+static const size_t kPacketDisorderThresh = 50;
 static bool GetAttribute(const char *s, const char *key, AString *value) {
     value->clear();
 
@@ -233,7 +234,12 @@ ARTPAssembler::AssemblyStatus AMPEG4ElementaryAssembler::addPacket(
         mNextExpectedSeqNo = (uint32_t)buffer->int32Data();
     } else if ((uint32_t)buffer->int32Data() != mNextExpectedSeqNo) {
         ALOGV("Not the sequence number I expected");
-
+        // too much packet lost and waiting for each packet for 10ms  will cause video stuck.
+        // directly drop the packets if the lost packet surpass the threshold
+        if (!mIsGeneric && ((uint32_t)buffer->int32Data() - mNextExpectedSeqNo) > kPacketDisorderThresh) {
+            mNextExpectedSeqNo = (uint32_t)buffer->int32Data() ;
+            return MALFORMED_PACKET;
+        }
         return WRONG_SEQUENCE_NUMBER;
     }
 
-- 
1.7.4.1

