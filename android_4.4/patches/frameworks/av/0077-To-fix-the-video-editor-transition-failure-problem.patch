From 5329988f9f7ee0873f913539ed1ef7c054cbd17b Mon Sep 17 00:00:00 2001
From: wfeng6 <wei.feng@intel.com>
Date: Wed, 1 Aug 2012 00:34:59 +0800
Subject: To fix the video editor transition failure problem

BZ: 49712

The patch fixes the Android defects in video editor native code. When
the encoded bitstream contains more than one slice in one picture,
the original design cannot handle such a situation.

Moreover, if the encode bitstreams contains more than one Sequence
Parameter Set (SPS) or/and Picture Parameter Set (PPS), the codes
can't deal with it, either.

Original Patches:
R3 55417 BZ: 45017
   40300 BZ: 22828
   40778 BZ: 26405
   55417 BZ: 45017

Category:aosp improvement
Domain: Video.Media-video editor
Origin: internal
Upstream-Candidate: Yes

Change-Id: Ib5cc72875dfa380de7928a1e834e6093c396471c
Orig-Change-Id: Id324aaec389e88dfbba1990f05979f6418236655
Signed-off-by: wfeng6 <wei.feng@intel.com>
Signed-off-by: Dan Liang <dan.liang@intel.com>
Signed-off-by: chuzhoux <chux.zhou@intel.com>
---
 libvideoeditor/vss/mcs/src/M4MCS_API.c |   42 ++++++++++++++++++++++++-------
 1 files changed, 32 insertions(+), 10 deletions(-)

diff --git a/libvideoeditor/vss/mcs/src/M4MCS_API.c b/libvideoeditor/vss/mcs/src/M4MCS_API.c
index c056ef0..ab8f887 100755
--- a/libvideoeditor/vss/mcs/src/M4MCS_API.c
+++ b/libvideoeditor/vss/mcs/src/M4MCS_API.c
@@ -753,6 +753,7 @@ M4OSA_ERR H264MCS_ProcessEncodedNALU(   M4OSA_Void *ainstance,
     M4OSA_UInt32 nal_size_low16, nal_size_high16;
     M4OSA_UInt32 frame_size = 0;
     M4OSA_UInt32 temp = 0;
+    M4OSA_UInt8 *buff;
 
     // StageFright encoder does not provide the size in the first 4 bytes of the AU, add it
     M4OSA_Int8 *pTmpBuff1 = M4OSA_NULL;
@@ -807,15 +808,16 @@ M4OSA_ERR H264MCS_ProcessEncodedNALU(   M4OSA_Void *ainstance,
         mask_bits = 0xFFFFFFFF;
         p_bs->Buffer = (M4OSA_UInt8 *)(inbuff + frame_size);
 
-        // Use unsigned value to fix errors due to bit sign extension, this fix should be generic
-
-        nal_size_high16 = ( ( (M4OSA_UInt8 *)p_bs->Buffer)[0] << 8)
-            + ((M4OSA_UInt8 *)p_bs->Buffer)[1];
-        nal_size_low16 = ( ( (M4OSA_UInt8 *)p_bs->Buffer)[2] << 8)
-            + ((M4OSA_UInt8 *)p_bs->Buffer)[3];
-
         nalu_info = (unsigned char)p_bs->Buffer[4];
 
+        if (frame_size > 0)
+        {
+            outbuff[outbuffpos++] = 0x00;
+            outbuff[outbuffpos++] = 0x00;
+            outbuff[outbuffpos++] = 0x00;
+            outbuff[outbuffpos++] = 0x01;
+        }
+
         outbuff[outbuffpos] = p_bs->Buffer[4];
 
         p_bs->Buffer = p_bs->Buffer + 5;
@@ -832,7 +834,25 @@ M4OSA_ERR H264MCS_ProcessEncodedNALU(   M4OSA_Void *ainstance,
 
         H264MCS_getBits(p_bs, 0);
 
-        nal_size = ( nal_size_high16 << 16) + nal_size_low16;
+        nal_size = inbuf_size - frame_size - 4;
+        buff = inbuff + frame_size + 4;
+
+        while( nal_size > 4 )
+        {
+            if( ( buff[0] == 0x00) && (buff[1] == 0x00) && (buff[2] == 0x00)
+                && (buff[3] == 0x01) )
+            {
+                break;
+            }
+            buff = buff + 1;
+            nal_size = nal_size - 1;
+        }
+
+        if( nal_size <= 4 )
+        {
+            nal_size = 0;
+        }
+        nal_size = ( inbuf_size - frame_size - 4) - nal_size;
 
         frame_size += nal_size + 4;
 
@@ -1445,14 +1465,14 @@ M4OSA_ERR H264MCS_ProcessSPS_PPS( NSWAVC_MCS_t *instance, M4OSA_UInt8 *inbuff,
         if( nal_unit_type == 8 )
         {
             M4OSA_TRACE1_0("H264MCS_ProcessSPS_PPS() Error: PPS");
-            return err;
+            break;
         }
 
         if( nal_unit_type == 7 )
         {
             /*SPS Packet */
             M4OSA_TRACE1_0("H264MCS_ProcessSPS_PPS() Error: SPS");
-            return err;
+            break;
         }
 
         if( ( nal_unit_type == 1) || (nal_unit_type == 5) )
@@ -1849,6 +1869,7 @@ M4OSA_ERR H264MCS_ProcessNALU( NSWAVC_MCS_t *ainstance, M4OSA_UInt8 *inbuff,
         if( nal_unit_type == 8 )
         {
             M4OSA_TRACE1_0("H264MCS_ProcessNALU() Error: PPS");
+            instance->is_done = 1;
             return err;
         }
 
@@ -1856,6 +1877,7 @@ M4OSA_ERR H264MCS_ProcessNALU( NSWAVC_MCS_t *ainstance, M4OSA_UInt8 *inbuff,
         {
             /*SPS Packet */
             M4OSA_TRACE1_0("H264MCS_ProcessNALU() Error: SPS");
+            instance->is_done = 1;
             return 0;
         }
 
-- 
1.7.4.1

