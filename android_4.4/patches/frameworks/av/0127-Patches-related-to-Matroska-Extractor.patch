From 1504cdb4d8c849c3a1523154b16fb1e9ffc9d473 Mon Sep 17 00:00:00 2001
From: gbhakteX <gurudattax.bhakte@intel.com>
Date: Tue, 24 Jul 2012 15:12:16 +0530
Subject: Patches related to Matroska Extractor.

BZ: 48377

Original BZ: 24170, 27388

Video Frame drops seen during playback of certain mkv files
and mediaserver crash issue (mka extractor fatal error) have
been fixed with these patches.

Category: AOSP Improvement
Domain: AUDIO_MEDIA-Audio Framework
Origin: Internal
Upstream-Candidate: yes

Change-Id: I13ec62ae7a20c4fa973cf74fed8ef79deb1f1027
Orig-Change-Id: Ie2afd74026739731bbcda471a8b3476a00d4d8cd
Signed-off-by: Arulselvan M <arulselvan.m@intel.com>
---
 .../libstagefright/matroska/MatroskaExtractor.cpp  |   33 +++++++++++++++----
 media/libstagefright/matroska/MatroskaExtractor.h  |    2 +-
 2 files changed, 27 insertions(+), 8 deletions(-)

diff --git a/media/libstagefright/matroska/MatroskaExtractor.cpp b/media/libstagefright/matroska/MatroskaExtractor.cpp
index 9acb1cc..dc38108 100755
--- a/media/libstagefright/matroska/MatroskaExtractor.cpp
+++ b/media/libstagefright/matroska/MatroskaExtractor.cpp
@@ -476,28 +476,39 @@ status_t MatroskaSource::readBlock() {
     }
 
     const mkvparser::Block *block = mBlockIter.block();
-
+    const mkvparser::Tracks *tracks = (mExtractor->mSegment)->GetTracks();
+    const mkvparser::Track *track = tracks->GetTrackByNumber(block->GetTrackNumber());
+    int64_t nextBlkTimeUs, diffTimeUs, frameTimeUs;
     int64_t timeUs = mBlockIter.blockTimeUs();
+    mBlockIter.advance();
+    enum { VIDEO_TRACK = 1, AUDIO_TRACK = 2 };
+    frameTimeUs = timeUs;
+    diffTimeUs = 0;
+    if (track->GetType() == AUDIO_TRACK) {
+        if (!mBlockIter.eos()) {
+            nextBlkTimeUs = mBlockIter.blockTimeUs();
+            diffTimeUs = (nextBlkTimeUs - timeUs) / block->GetFrameCount();
+        }
+     }
 
     for (int i = 0; i < block->GetFrameCount(); ++i) {
         const mkvparser::Block::Frame &frame = block->GetFrame(i);
 
         MediaBuffer *mbuf = new MediaBuffer(frame.len);
-        mbuf->meta_data()->setInt64(kKeyTime, timeUs);
+        mbuf->meta_data()->setInt64(kKeyTime, frameTimeUs);
+        frameTimeUs += diffTimeUs;
         mbuf->meta_data()->setInt32(kKeyIsSyncFrame, block->IsKey());
 
         long n = frame.Read(mExtractor->mReader, (unsigned char *)mbuf->data());
         if (n != 0) {
             mPendingFrames.clear();
 
-            mBlockIter.advance();
             return ERROR_IO;
         }
 
         mPendingFrames.push_back(mbuf);
     }
 
-    mBlockIter.advance();
 
     return OK;
 }
@@ -689,7 +700,12 @@ MatroskaExtractor::MatroskaExtractor(const sp<DataSource> &source)
          info->GetWritingAppAsUTF8());
 #endif
 
-    addTracks();
+    ret = addTracks();
+    if (ret < 0) {
+        delete mSegment;
+        mSegment = NULL;
+        return;
+    }
 }
 
 MatroskaExtractor::~MatroskaExtractor() {
@@ -838,7 +854,7 @@ status_t addVorbisCodecInfo(
     return OK;
 }
 
-void MatroskaExtractor::addTracks() {
+int MatroskaExtractor::addTracks() {
     const mkvparser::Tracks *tracks = mSegment->GetTracks();
 
     for (size_t index = 0; index < tracks->GetTracksCount(); ++index) {
@@ -914,7 +930,9 @@ void MatroskaExtractor::addTracks() {
 
                 if (!strcmp("A_AAC", codecID)) {
                     meta->setCString(kKeyMIMEType, MEDIA_MIMETYPE_AUDIO_AAC);
-                    CHECK(codecPrivateSize >= 2);
+                    if (codecPrivateSize < 2) {
+                        return -1;
+                    }
 
                     addESDSFromCodecPrivate(
                             meta, true, codecPrivate, codecPrivateSize);
@@ -952,6 +970,7 @@ void MatroskaExtractor::addTracks() {
         trackInfo->mTrackNum = track->GetNumber();
         trackInfo->mMeta = meta;
     }
+    return 0;
 }
 static int compareTimeCode(const int64_t* timeUs1, const int64_t* timeUs2) {
 
diff --git a/media/libstagefright/matroska/MatroskaExtractor.h b/media/libstagefright/matroska/MatroskaExtractor.h
index 6e0b455..2be56be 100644
--- a/media/libstagefright/matroska/MatroskaExtractor.h
+++ b/media/libstagefright/matroska/MatroskaExtractor.h
@@ -70,7 +70,7 @@ private:
     bool mIsLiveStreaming;
     bool mIsWebm;
 
-    void addTracks();
+    int addTracks();
     void findThumbnails();
 
     bool isLiveStreaming() const;
-- 
1.7.4.1

