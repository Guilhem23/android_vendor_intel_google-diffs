From 48da89301682547396dede90e9251ccb8b36aa3d Mon Sep 17 00:00:00 2001
From: wanglili <lili.a.wang@intel.com>
Date: Tue, 28 May 2013 21:45:51 +0800
Subject: Disable VPP for protected content playback.

BZ: 96675

Disable VPP for pretected content playback to eliminate side effect
of vpp rotation workaround patch http://android.intel.com:8080/109681,
which forces GPU to conduct rotation when VPP is on. Because for
protected clips, display has been forced to go through overlay.

Category: feature differentiation
Domain: Video.Media-VPP
Origin:  internal
Upstream-Candidate: No

Change-Id: I332e7b62db805b3ee39999a7e10afefa238e010b
Orig-Change-Id: I64a15968a0c68aef0b24b0522a36cfe0744012a0
Signed-off-by: wanglili <lili.a.wang@intel.com>
Signed-off-by: Yu, Linda <linda.yu@intel.com>
---
 include/media/stagefright/OMXCodec.h   |    1 +
 media/libstagefright/AwesomePlayer.cpp |    7 +------
 media/libstagefright/OMXCodec.cpp      |   14 ++++++--------
 3 files changed, 8 insertions(+), 14 deletions(-)

diff --git a/include/media/stagefright/OMXCodec.h b/include/media/stagefright/OMXCodec.h
index e1ecc82..b72092a 100644
--- a/include/media/stagefright/OMXCodec.h
+++ b/include/media/stagefright/OMXCodec.h
@@ -141,6 +141,7 @@ private:
     friend class VPPProcessor;
     uint32_t mVppInBufNum;
     uint32_t mVppOutBufNum;
+    bool mVppBufAvail;
 #endif
 
     // Call this with mLock hold
diff --git a/media/libstagefright/AwesomePlayer.cpp b/media/libstagefright/AwesomePlayer.cpp
index 9c421e7..49d9c68 100644
--- a/media/libstagefright/AwesomePlayer.cpp
+++ b/media/libstagefright/AwesomePlayer.cpp
@@ -1774,12 +1774,7 @@ status_t AwesomePlayer::initVideoDecoder(uint32_t flags) {
 #ifdef TARGET_HAS_VPP
         if (mVPPProcessor != NULL) {
             bool success = omxCodec->isVppBufferAvail();
-            if (success) {
-                if(err != VPP_OK) {
-                    delete mVPPProcessor;
-                    mVPPProcessor = NULL;
-                }
-            } else {
+            if (!success) {
                 delete mVPPProcessor;
                 mVPPProcessor = NULL;
             }
diff --git a/media/libstagefright/OMXCodec.cpp b/media/libstagefright/OMXCodec.cpp
index f13fc8c..96b263e 100644
--- a/media/libstagefright/OMXCodec.cpp
+++ b/media/libstagefright/OMXCodec.cpp
@@ -1508,6 +1508,7 @@ OMXCodec::OMXCodec(
 #ifdef TARGET_HAS_VPP
       mVppInBufNum(0),
       mVppOutBufNum(0),
+      mVppBufAvail(false),
 #endif
       mOMXLivesLocally(omx->livesLocally(node, getpid())),
       mNode(node),
@@ -1904,8 +1905,7 @@ void OMXCodec::setVppBufferNum(uint32_t inBufNum, uint32_t outBufNum) {
 }
 
 bool OMXCodec::isVppBufferAvail() {
-    if (mVppInBufNum == 0) return false;
-    return true;
+    return mVppBufAvail && (mVppInBufNum != 0) && (mVppOutBufNum != 0);
 }
 #endif
 
@@ -2012,7 +2012,7 @@ status_t OMXCodec::allocateOutputBuffersFromNativeWindow() {
 
 #ifdef TARGET_HAS_VPP
     //add more buffers
-    bool isVppOn = VPPProcessor::isVppOn();
+    bool isVppOn = VPPProcessor::isVppOn() && !(usage & GRALLOC_USAGE_PROTECTED);
     if (isVppOn) {
         ALOGE("def.nBufferCountActual = %d",def.nBufferCountActual);
         int totalBufferCount = def.nBufferCountActual + mVppInBufNum + mVppOutBufNum;
@@ -2028,13 +2028,11 @@ status_t OMXCodec::allocateOutputBuffersFromNativeWindow() {
                     def.nBufferCountActual, err);
                 return err;
             }
+            mVppBufAvail = true;
         } else {
             err = native_window_set_buffer_count(
                 mNativeWindow.get(), def.nBufferCountActual);
-            if (err == 0) {
-                mVppInBufNum = 0;
-                mVppOutBufNum = 0;
-            } else {
+            if (err != 0) {
                 ALOGE("native_window_set_buffer_count failed: %s (%d)", strerror(-err),
                         -err);
                 return err;
@@ -2106,7 +2104,7 @@ status_t OMXCodec::allocateOutputBuffersFromNativeWindow() {
     } else {
         // Return the last two buffers to the native window.
 #ifdef TARGET_HAS_VPP
-        if (isVppOn) {
+        if (mVppBufAvail) {
             cancelStart = def.nBufferCountActual - minUndequeuedBufs - mVppOutBufNum;
         } else {
             cancelStart = def.nBufferCountActual - minUndequeuedBufs;
-- 
1.7.4.1

