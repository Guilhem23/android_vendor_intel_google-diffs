From d425a1830355eee2a4e7cd2514c8062cba5eb01b Mon Sep 17 00:00:00 2001
From: Yong Chen <yong.a.chen@intel.com>
Date: Fri, 11 Oct 2013 21:05:10 +0800
Subject: Add RS allocation destroy functions

BZ: 143436

Define AllocationDestroy in rs.spec, add destroy functions in libRS so
we can invoke rs hal destroy function to cleanup allocation resource.

Category: aosp improvement
Domain: AOSP-RenderScript
Origin: internal
Upstream-Candidate: yes

Change-Id: Id7dd630719b21dddf1ad80380482eccacd33e370
Orig-MCG-Change-Id: If8c5bf05adfcac1799bb9eb62bb6e132eaa9ba9b
Signed-off-by: Yong Chen <yong.a.chen@intel.com>
---
 driver/rsdAllocation.cpp |    1 +
 rs.spec                  |    5 +++++
 rsAllocation.cpp         |    9 +++++++++
 rsAllocation.h           |    1 +
 4 files changed, 16 insertions(+), 0 deletions(-)

diff --git a/driver/rsdAllocation.cpp b/driver/rsdAllocation.cpp
index edadf90..5eb87d6 100644
--- a/driver/rsdAllocation.cpp
+++ b/driver/rsdAllocation.cpp
@@ -497,6 +497,7 @@ bool rsdAllocationInit(const Context *rsc, Allocation *alloc, bool forceZero) {
 
 void rsdAllocationDestroy(const Context *rsc, Allocation *alloc) {
     DrvAllocation *drv = (DrvAllocation *)alloc->mHal.drv;
+    if (!drv) return;
 
 #ifndef RS_COMPATIBILITY_LIB
     if (drv->bufferID) {
diff --git a/rs.spec b/rs.spec
index aab3d46..a249852 100644
--- a/rs.spec
+++ b/rs.spec
@@ -82,6 +82,11 @@ AllocationSetSurface {
     sync
     }
 
+AllocationDestroy {
+    direct
+    param RsAllocation alloc
+    }
+
 ContextFinish {
     sync
     }
diff --git a/rsAllocation.cpp b/rsAllocation.cpp
index f6f4ac9..fabffa2 100644
--- a/rsAllocation.cpp
+++ b/rsAllocation.cpp
@@ -513,6 +513,10 @@ void Allocation::ioReceive(const Context *rsc) {
 #endif
 }
 
+void Allocation::destroy(const Context *rsc) {
+    freeChildrenUnlocked();
+    rsc->mHal.funcs.allocation.destroy(rsc, this);
+}
 
 /////////////////
 //
@@ -716,6 +720,11 @@ void rsi_AllocationIoReceive(Context *rsc, RsAllocation valloc) {
     alloc->ioReceive(rsc);
 }
 
+void rsi_AllocationDestroy(Context *rsc, RsAllocation valloc) {
+    Allocation *alloc = static_cast<Allocation *>(valloc);
+    alloc->destroy(rsc);
+}
+
 void rsi_Allocation1DRead(Context *rsc, RsAllocation va, uint32_t xoff, uint32_t lod,
                           uint32_t count, void *data, size_t sizeBytes) {
     Allocation *a = static_cast<Allocation *>(va);
diff --git a/rsAllocation.h b/rsAllocation.h
index b0f2f9e..f660d5e 100644
--- a/rsAllocation.h
+++ b/rsAllocation.h
@@ -162,6 +162,7 @@ public:
     void setSurface(const Context *rsc, RsNativeWindow sur);
     void ioSend(const Context *rsc);
     void ioReceive(const Context *rsc);
+    void destroy(const Context *rsc);
 
 protected:
     Vector<const Program *> mToDirtyList;
-- 
1.7.4.1

