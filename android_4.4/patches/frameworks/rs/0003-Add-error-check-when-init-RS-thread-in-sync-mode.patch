From 8b3a8a72e238898a8c0ac3714126ae1829247db7 Mon Sep 17 00:00:00 2001
From: Yong Chen <yong.a.chen@intel.com>
Date: Fri, 6 Sep 2013 10:03:16 +0800
Subject: Add error check when init RS thread in sync mode

BZ: 133778

When init RS thread failed, RS should return false and stop further
waiting, or else it causes RS caller ANR errors. Update destructor
functions for the exception handling accordingly.

Category: aosp improvement
Domain: AOSP-RenderScript
Origin: internal
Upstream-Candidate: yes

Change-Id: Iee854ad4bcec029a233791e2c0498110ff178b90
Orig-MCG-Change-Id: I11c5763708de95d5457b95fdc0855e7ffb7af0cc
Signed-off-by: Yong Chen <yong.a.chen@intel.com>
Reviewed-on: http://android.intel.com:8080/130320
Reviewed-by: Lu, Shenghua <shenghua.lu@intel.com>
Tested-by: Shentu, JiazhenX <jiazhenx.shentu@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
---
 cpp/RenderScript.cpp |   18 +++++++++++-------
 driver/rsdCore.cpp   |    1 +
 rsContext.cpp        |    8 +++++++-
 3 files changed, 19 insertions(+), 8 deletions(-)

diff --git a/cpp/RenderScript.cpp b/cpp/RenderScript.cpp
index 30d530e..a31ba93 100644
--- a/cpp/RenderScript.cpp
+++ b/cpp/RenderScript.cpp
@@ -54,15 +54,19 @@ RS::~RS() {
     if (mInit == true) {
         mMessageRun = false;
 
-        RS::dispatch->ContextDeinitToClient(mContext);
+        if (mContext) {
+            RS::dispatch->ContextDeinitToClient(mContext);
 
-        void *res = NULL;
-        int status = pthread_join(mMessageThreadId, &res);
+            void *res = NULL;
+            int status = pthread_join(mMessageThreadId, &res);
 
-        RS::dispatch->ContextDestroy(mContext);
-        mContext = NULL;
-        RS::dispatch->DeviceDestroy(mDev);
-        mDev = NULL;
+            RS::dispatch->ContextDestroy(mContext);
+            mContext = NULL;
+        }
+        if (mDev) {
+            RS::dispatch->DeviceDestroy(mDev);
+            mDev = NULL;
+        }
     }
 }
 
diff --git a/driver/rsdCore.cpp b/driver/rsdCore.cpp
index ed421ee..624e935 100644
--- a/driver/rsdCore.cpp
+++ b/driver/rsdCore.cpp
@@ -191,6 +191,7 @@ extern "C" bool rsdHalInit(RsContext c, uint32_t version_major,
     if (!dc->mCpuRef) {
         ALOGE("RsdCpuReference::create for driver hal failed.");
         free(dc);
+        rsc->mHal.drv = NULL;
         return false;
     }
 
diff --git a/rsContext.cpp b/rsContext.cpp
index 65ee4d3..f7fbb94 100644
--- a/rsContext.cpp
+++ b/rsContext.cpp
@@ -575,6 +575,12 @@ bool Context::initContext(Device *dev, const RsSurfaceConfig *sc) {
     timerSet(RS_TIMER_INTERNAL);
     if (mSynchronous) {
         threadProc(this);
+
+        if (mError != RS_ERROR_NONE) {
+            ALOGE("Errors during thread init (sync mode)");
+            return false;
+        }
+
     } else {
         status = pthread_create(&mThreadId, &threadAttr, threadProc, this);
         if (status) {
@@ -606,7 +612,7 @@ Context::~Context() {
         int status = pthread_join(mThreadId, &res);
         rsAssert(mExit);
 
-        if (mHal.funcs.shutdownDriver) {
+        if (mHal.funcs.shutdownDriver && mHal.drv) {
             mHal.funcs.shutdownDriver(this);
         }
 
-- 
1.7.4.1

