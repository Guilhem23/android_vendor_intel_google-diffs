From 0d921f13504b6503b2d7fa402ed72d1d6fe6e606 Mon Sep 17 00:00:00 2001
From: wfeng6 <wei.feng@intel.com>
Date: Fri, 17 May 2013 11:22:13 +0800
Subject: To fix the out-of-memory problem when playing video in VideoEditor

BZ: 74638

Root cause:
1. In JB MR1, the ConsumerBase class is introduced, and it's used as
the base class for SurfaceTexture.

2. There is a virtual function called freeLockedBuffer in both
ConsumerBase and SurfaceTexture.

3. When a SurfaceTexture instance is deconstructed, the ConsumerBase
deconstrutor is called. In ~ConsumerBase, freeLockedBuffer() is called.
The author's intent is to call the freeLockedBuffer() in the derived
SurfaceTexture class. However, according to the C++ language,
only the freeLockedBuffer() in ConsumerBase is called.

4. This leads to wrong GraphicBuffer reference counts. When a
SurfaceTexture instance is destroyed in video editor, the GraphicBuffer
decontructor is not called. The allocated GraphicBuffer instances are not
freed correctly, which causes the sharedbuffer in the Gralloc HAL
out-of-memory...

The solution is that use the SurfaceTexture decontructor to all
the SurfaceTexture::freeLockedBuffer().

Category:aosp improvement
Domain: Video.Media-video editor
Origin: internal
Upstream-Candidate: yes

Change-Id: Ic9a602e617f62a5288687f413129200d30b4ca2e
Orig-Change-Id: Ibc7be92a0824248e0af1283f46a80f3116f89e53
Signed-off-by: wfeng6 <wei.feng@intel.com>
Signed-off-by: Dan Liang <dan.liang@intel.com>
Signed-off-by: Yuanjun Huang <yuanjun.huang@intel.com>
---
 include/gui/GLConsumer.h |    2 ++
 libs/gui/GLConsumer.cpp  |    5 +++++
 2 files changed, 7 insertions(+), 0 deletions(-)

diff --git a/include/gui/GLConsumer.h b/include/gui/GLConsumer.h
index a5fdfb9..74399ab 100644
--- a/include/gui/GLConsumer.h
+++ b/include/gui/GLConsumer.h
@@ -85,6 +85,8 @@ public:
             uint32_t tex, uint32_t texureTarget = TEXTURE_EXTERNAL,
             bool useFenceSync = true, bool isControlledByApp = false);
 
+    virtual ~GLConsumer();
+
     // updateTexImage acquires the most recently queued buffer, and sets the
     // image contents of the target texture to it.
     //
diff --git a/libs/gui/GLConsumer.cpp b/libs/gui/GLConsumer.cpp
index 7ee3081..08db699 100644
--- a/libs/gui/GLConsumer.cpp
+++ b/libs/gui/GLConsumer.cpp
@@ -143,6 +143,11 @@ GLConsumer::GLConsumer(const sp<IGraphicBufferConsumer>& bq, uint32_t tex,
     mConsumer->setConsumerUsageBits(DEFAULT_USAGE_FLAGS);
 }
 
+GLConsumer::~GLConsumer() {
+    ST_LOGV("~GLConsumer");
+    abandon();
+}
+
 status_t GLConsumer::setDefaultMaxBufferCount(int bufferCount) {
     Mutex::Autolock lock(mMutex);
     return mConsumer->setDefaultMaxBufferCount(bufferCount);
-- 
1.7.4.1

