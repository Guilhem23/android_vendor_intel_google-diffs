From 8cd3cf1ced493750e97f66baedd165a87a46ba80 Mon Sep 17 00:00:00 2001
From: Yong Chen <yong.a.chen@intel.com>
Date: Fri, 11 Oct 2013 15:44:45 +0800
Subject: Add destroy for renderscript allocation

BZ: 143436

Add destroy functions in renderscript jni and java allocation.

Category: aosp improvement
Domain: AOSP-RenderScript
Origin: internal
Upstream-Candidate: yes

Change-Id: If9b09ccaca17da7eef0240676a11376c54f41799
Depends-Change-Id: Id7dd630719b21dddf1ad80380482eccacd33e370
Orig-MCG-Change-Id: I04bc1334cb38d5dfa12fc6855fbf2878b580698d
Signed-off-by: Yong Chen <yong.a.chen@intel.com>
---
 graphics/java/android/renderscript/Allocation.java |    6 ++++++
 .../java/android/renderscript/RenderScript.java    |    5 +++++
 graphics/jni/android_renderscript_RenderScript.cpp |   18 +++++++++++++-----
 3 files changed, 24 insertions(+), 5 deletions(-)

diff --git a/graphics/java/android/renderscript/Allocation.java b/graphics/java/android/renderscript/Allocation.java
index dca934f..03c52d3 100644
--- a/graphics/java/android/renderscript/Allocation.java
+++ b/graphics/java/android/renderscript/Allocation.java
@@ -435,6 +435,12 @@ public class Allocation extends BaseObj {
         Trace.traceEnd(RenderScript.TRACE_TAG);
     }
 
+    public synchronized void destroy() {
+        mRS.validate();
+        mRS.nAllocationDestroy(getID(mRS));
+        super.destroy();
+    }
+
     /**
      * Copy an array of RS objects to the Allocation.
      *
diff --git a/graphics/java/android/renderscript/RenderScript.java b/graphics/java/android/renderscript/RenderScript.java
index 7d4a5c4..d47b3f6 100644
--- a/graphics/java/android/renderscript/RenderScript.java
+++ b/graphics/java/android/renderscript/RenderScript.java
@@ -373,6 +373,11 @@ public class RenderScript {
         rsnAllocationIoReceive(mContext, alloc);
     }
 
+    native void rsnAllocationDestroy(int con, int alloc);
+    synchronized void nAllocationDestroy(int alloc) {
+        validate();
+        rsnAllocationDestroy(mContext, alloc);
+    }
 
     native void rsnAllocationGenerateMipmaps(int con, int alloc);
     synchronized void nAllocationGenerateMipmaps(int alloc) {
diff --git a/graphics/jni/android_renderscript_RenderScript.cpp b/graphics/jni/android_renderscript_RenderScript.cpp
index cbc4e5a..9b42145 100644
--- a/graphics/jni/android_renderscript_RenderScript.cpp
+++ b/graphics/jni/android_renderscript_RenderScript.cpp
@@ -510,6 +510,12 @@ nAllocationIoReceive(JNIEnv *_env, jobject _this, RsContext con, RsAllocation al
     rsAllocationIoReceive(con, alloc);
 }
 
+static void
+nAllocationDestroy(JNIEnv *_env, jobject _this, RsContext con, RsAllocation alloc)
+{
+    LOG_API("nAllocationDestroy, con(%p), alloc(%p)", con, alloc);
+    rsAllocationDestroy(con, alloc);
+}
 
 static void
 nAllocationGenerateMipmaps(JNIEnv *_env, jobject _this, RsContext con, jint alloc)
@@ -775,11 +781,12 @@ nAllocationData3D_alloc(JNIEnv *_env, jobject _this, RsContext con,
                         jint srcAlloc, jint srcXoff, jint srcYoff, jint srcZoff,
                         jint srcMip)
 {
-    LOG_API("nAllocationData3D_alloc, con(%p), dstAlloc(%p), dstXoff(%i), dstYoff(%i),"
-            " dstMip(%i), width(%i), height(%i),"
-            " srcAlloc(%p), srcXoff(%i), srcYoff(%i), srcMip(%i)",
-            con, (RsAllocation)dstAlloc, dstXoff, dstYoff, dstMip, dstFace,
-            width, height, (RsAllocation)srcAlloc, srcXoff, srcYoff, srcMip, srcFace);
+    LOG_API("nAllocationData3D_alloc, con(%p), dstAlloc(%p), dstXoff(%i), dstYoff(%i), dstZoff(%i),"
+            " dstMip(%i), width(%i), height(%i), depth(%i),"
+            " srcAlloc(%p), srcXoff(%i), srcYoff(%i), srcZoff(%i), srcMip(%i)",
+            con, (RsAllocation)dstAlloc, dstXoff, dstYoff, dstZoff,
+            dstMip, width, height, depth,
+            (RsAllocation)srcAlloc, srcXoff, srcYoff, srcZoff, srcMip);
 
     rsAllocationCopy3DRange(con,
                             (RsAllocation)dstAlloc,
@@ -1613,6 +1620,7 @@ static JNINativeMethod methods[] = {
 {"rsnAllocationSetSurface",          "(IILandroid/view/Surface;)V",           (void*)nAllocationSetSurface },
 {"rsnAllocationIoSend",              "(II)V",                                 (void*)nAllocationIoSend },
 {"rsnAllocationIoReceive",           "(II)V",                                 (void*)nAllocationIoReceive },
+{"rsnAllocationDestroy",             "(II)V",                                 (void*)nAllocationDestroy },
 {"rsnAllocationData1D",              "(IIIII[II)V",                           (void*)nAllocationData1D_i },
 {"rsnAllocationData1D",              "(IIIII[SI)V",                           (void*)nAllocationData1D_s },
 {"rsnAllocationData1D",              "(IIIII[BI)V",                           (void*)nAllocationData1D_b },
-- 
1.7.4.1

