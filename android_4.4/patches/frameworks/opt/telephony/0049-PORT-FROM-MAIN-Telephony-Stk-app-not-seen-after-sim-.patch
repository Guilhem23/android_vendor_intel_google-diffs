From 52b0cbc140a72cc2e7f74a539b4e02c177ed4549 Mon Sep 17 00:00:00 2001
From: Jeevaka Badrappan <jeevaka.badrappan@intel.com>
Date: Tue, 17 Sep 2013 12:06:25 +0300
Subject: [PORT FROM MAIN] Telephony: Stk app not seen after sim hot swap

BZ: 127194

Upon sim removal, CatService is disposed and set
to null in UiccCard. On dispose, CatService
unregisters from the ril events. When the sim is
reinserted, existing CatService is reinitialized but
it doesn't register to ril events again. Due to this,
proactive commands are not notified to CatService.

If sRegisterForRilEvents is set, then register to ril
events on CatService reinitialization.

Change-Id: Ibec6f49e51095579fd90a222049f1e3412a69f9c
Orig-Change-Id: Ib9fed328701254b2dced26804076753e9451ed4e
Category: aosp improvement
Domain: Telephony-Telephony-FWK
Origin: internal
Upstream-Candidate: yes
Signed-off-by: Jeevaka Badrappan <jeevaka.badrappan@intel.com>
---
 .../android/internal/telephony/cat/CatService.java |   24 +++++++++++++++----
 1 files changed, 19 insertions(+), 5 deletions(-)

diff --git a/src/java/com/android/internal/telephony/cat/CatService.java b/src/java/com/android/internal/telephony/cat/CatService.java
index 271a112..6a5a3b6 100644
--- a/src/java/com/android/internal/telephony/cat/CatService.java
+++ b/src/java/com/android/internal/telephony/cat/CatService.java
@@ -77,6 +77,7 @@ public class CatService extends Handler implements AppInterface {
     // Class members
     private static IccRecords mIccRecords;
     private static UiccCardApplication mUiccApplication;
+    private static boolean sRegisterForRilEvents = true;
 
     // Service members.
     // Protects singleton instance lazy initialization.
@@ -136,11 +137,9 @@ public class CatService extends Handler implements AppInterface {
         mMsgDecoder = RilMessageDecoder.getInstance(this, fh);
 
         // Register ril events handling.
-        mCmdIf.setOnCatSessionEnd(this, MSG_ID_SESSION_END, null);
-        mCmdIf.setOnCatProactiveCmd(this, MSG_ID_PROACTIVE_COMMAND, null);
-        mCmdIf.setOnCatEvent(this, MSG_ID_EVENT_NOTIFY, null);
-        mCmdIf.setOnCatCallSetUp(this, MSG_ID_CALL_SETUP, null);
-        //mCmdIf.setOnSimRefresh(this, MSG_ID_REFRESH, null);
+        if (sRegisterForRilEvents) {
+            registerForRilEvents();
+        }
 
         mIccRecords = ir;
         mUiccApplication = ca;
@@ -168,6 +167,7 @@ public class CatService extends Handler implements AppInterface {
 
         removeCallbacksAndMessages(null);
         PhoneFactory.getDefaultPhone().unregisterForServiceStateChanged(this);
+        sRegisterForRilEvents = true;
     }
 
     @Override
@@ -175,6 +175,14 @@ public class CatService extends Handler implements AppInterface {
         CatLog.d(this, "Service finalized");
     }
 
+    private void registerForRilEvents() {
+        mCmdIf.setOnCatSessionEnd(this, MSG_ID_SESSION_END, null);
+        mCmdIf.setOnCatProactiveCmd(this, MSG_ID_PROACTIVE_COMMAND, null);
+        mCmdIf.setOnCatEvent(this, MSG_ID_EVENT_NOTIFY, null);
+        mCmdIf.setOnCatCallSetUp(this, MSG_ID_CALL_SETUP, null);
+        sRegisterForRilEvents = false;
+    }
+
     private void handleRilMsg(RilMessage rilMsg) {
         if (rilMsg == null) {
             return;
@@ -645,6 +653,12 @@ public class CatService extends Handler implements AppInterface {
             } else {
                 CatLog.d(sInstance, "Return current sInstance");
             }
+
+            // Register ril events handling.
+            if (sRegisterForRilEvents) {
+                sInstance.registerForRilEvents();
+            }
+
             return sInstance;
         }
     }
-- 
1.7.4.1

