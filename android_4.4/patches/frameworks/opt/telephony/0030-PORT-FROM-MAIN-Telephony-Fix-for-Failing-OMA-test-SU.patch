From 6d47a3f1942e14caa309c78f00b1678d856c36b2 Mon Sep 17 00:00:00 2001
From: jerome Pantaloni <jeromex.pantaloni@intel.com>
Date: Fri, 20 Sep 2013 17:44:37 +0300
Subject: [PORT FROM MAIN] Telephony: Fix for Failing OMA test SUPL-1.0-con-13

BZ: 55252

The WAP Push message from an SLP (SLC for non-proxy mode) to a PPG
SHALL contain the SUPL INIT message and SHALL follow [WAP PAP]. And
when the device receive a NI request and normally we shall not answer
to it. Currently this is answered resulting in test failure.

This patch corrects this issue.

Change-Id: I53b2310e78e9e201795dc2ff8557c1fdc0538d63
Orig-Change-Id: Ifab87a40778f8ffea9f4991516352efe647fa80e
Category: device enablement
Domain: CWS.GPS-Framework
Origin: internal
Upstream-Candidate: no, proprietary
Signed-off-by: jerome Pantaloni <jeromex.pantaloni@intel.com>
Signed-off-by: Arun Ravindran <arun.ravindran@intel.com>
---
 .../android/internal/telephony/WapPushOverSms.java |   10 ++++++++++
 .../android/internal/telephony/WspTypeDecoder.java |    1 +
 2 files changed, 11 insertions(+), 0 deletions(-)

diff --git a/src/java/com/android/internal/telephony/WapPushOverSms.java b/src/java/com/android/internal/telephony/WapPushOverSms.java
index 2f22794..0d5af6d 100755
--- a/src/java/com/android/internal/telephony/WapPushOverSms.java
+++ b/src/java/com/android/internal/telephony/WapPushOverSms.java
@@ -38,6 +38,8 @@ import com.android.internal.telephony.uicc.IccUtils;
 public class WapPushOverSms implements ServiceConnection {
     private static final String TAG = "WAP PUSH";
     private static final boolean DBG = true;
+    private static final String APP_ID_URN = "x-oma-application:ulp.ua";
+    private static final String APP_ID_SUPL = "16";
 
     private final Context mContext;
 
@@ -187,6 +189,14 @@ public class WapPushOverSms implements ServiceConnection {
                         Long.toString(binaryContentType) : mimeType);
                 if (DBG) Rlog.v(TAG, "appid found: " + wapAppId + ":" + contentType);
 
+            // add 16 to support supl application_id Number. not only application_id URN
+            if (contentType.equals(WspTypeDecoder.CONTENT_TYPE_B_PUSH_SUPL_INIT)
+                    && !(APP_ID_URN.equals(wapAppId) || APP_ID_SUPL.equals(wapAppId))) {
+                if (DBG) Rlog.w(TAG,"Received a wrong appId wap push sms."
+                                    + "will not send out to AGPS. wrong appid=" + wapAppId);
+                return Intents.RESULT_SMS_HANDLED;
+            }
+
                 try {
                     boolean processFurther = true;
                     IWapPushManager wapPushMan = mWapPushManager;
diff --git a/src/java/com/android/internal/telephony/WspTypeDecoder.java b/src/java/com/android/internal/telephony/WspTypeDecoder.java
index 281488a..e044c3c 100755
--- a/src/java/com/android/internal/telephony/WspTypeDecoder.java
+++ b/src/java/com/android/internal/telephony/WspTypeDecoder.java
@@ -195,6 +195,7 @@ public class WspTypeDecoder {
     public static final String CONTENT_TYPE_B_PUSH_CO = "application/vnd.wap.coc";
     public static final String CONTENT_TYPE_B_MMS = "application/vnd.wap.mms-message";
     public static final String CONTENT_TYPE_B_PUSH_SYNCML_NOTI = "application/vnd.syncml.notification";
+    public static final String CONTENT_TYPE_B_PUSH_SUPL_INIT = "application/vnd.omaloc-supl-init";
 
     byte[] mWspData;
     int    mDataLength;
-- 
1.7.4.1

