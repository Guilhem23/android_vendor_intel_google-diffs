From 0ce1253b30609e9497654a2ae65c0ad5a40f9b74 Mon Sep 17 00:00:00 2001
From: Jean-Michel Bachot <jean-michel.bachot@intel.com>
Date: Fri, 12 Jul 2013 11:20:02 +0200
Subject: [PORT FROM MAIN]P2P : make a clean wpa_supplicant shutdown

BZ: 99166 111626

Shutdown wpa_supplicant with SIGTERM signal instead of
SIGKILL sent by ctl.stop systen command .
SIGTERM allows to deinit properly all the wifi interfaces,
specially p2p0 and p2p-p2p0-X virtual interfaces. It is fixing
further p2p connections after an Android framework softreboot

Change-Id: I129f0b03426bcfe5091f3fd403cf45f8b247f840
Orig-Change-Id: Idb3e60f7d461504095606501f1e26441d1a422c5
Category: device enablement
Domain: CWS.WIFI-Common
Origin: upstream
Upstream-Candidate: yes
Signed-off-by: Jean-Michel Bachot <jean-michel.bachot@intel.com>
---
 wifi/wifi.c |   26 ++++++++++++++++++++++++++
 1 files changed, 26 insertions(+), 0 deletions(-)

diff --git a/wifi/wifi.c b/wifi/wifi.c
index 4202e1f..aa71e79 100644
--- a/wifi/wifi.c
+++ b/wifi/wifi.c
@@ -570,6 +570,9 @@ int wifi_stop_supplicant(int p2p_supported)
 {
     char supp_status[PROPERTY_VALUE_MAX] = {'\0'};
     int count = 50; /* wait at most 5 seconds for completion */
+    char pidpropname[] = "wpa_supplicant.pid";
+    char pidpropval[PROPERTY_VALUE_MAX];
+    int ret, pid;
 
     if (p2p_supported) {
         strcpy(supplicant_name, P2P_SUPPLICANT_NAME);
@@ -585,6 +588,29 @@ int wifi_stop_supplicant(int p2p_supported)
         return 0;
     }
 
+    /* Shutdown wpa_supplicant with SIGTERM signal instead of
+     * SIGKILL sent by ctl.stop system command .
+     * SIGTERM allows to deinit properly all the wifi interfaces,
+     * specially p2p0 and p2p-p2p0-X virtual interfaces. It fixes
+     * further p2p connections after an Android framework softreboot
+     */
+
+    property_get(pidpropname, pidpropval, "-1");
+    pid = atoi(pidpropval);
+
+    LOGD("wpa_supplicant pid %d", pid);
+    if (pid > 0) {
+        /* try a nice wpa_supplicant shutdown */
+        ret = kill(pid, SIGTERM);
+        if (ret == 0) {
+            waitpid(pid, NULL, 0);
+            usleep(800000);
+            LOGD("wpa_supplicant pid %d stopped with SIGTERM", pid);
+            property_set(pidpropname, "");
+        } else {
+            LOGE("wpa_supplicant pid %d failed to stop", pid);
+        }
+    }
     property_set("ctl.stop", supplicant_name);
     sched_yield();
 
-- 
1.7.4.1

