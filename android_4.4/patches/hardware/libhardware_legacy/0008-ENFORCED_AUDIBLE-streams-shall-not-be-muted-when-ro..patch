From 21141914eae4efb32bc2d9dfa4dd6858bbfccbb2 Mon Sep 17 00:00:00 2001
From: pdiopX <piotrx.diop@intel.com>
Date: Mon, 27 May 2013 09:36:54 +0200
Subject: ENFORCED_AUDIBLE streams shall not be muted when ro.camera.sound.forced is true

BZ: 108930
[CLEAN]

There were missing rules in the policy to define the non-mutable
aspect of ENFORCED_AUDIBLE streams.

This fix allows the usage of mCanBeMuted pararameter to determine
whether ENFORCED_AUDIBLE streams can be muted or not.

Category: device enablement
Domain: AudioComms-Common
Origin: internal
Upstream-Candidate: yes
Change-Id: Iae690282c29bb2ece18b02ef720d6b67a64220f0
Orig-Change-Id: I3906cf3f83f13328239ca4310ee88298ed903a85
Signed-off-by: pdiopX <piotrx.diop@intel.com>
---
 audio/AudioPolicyManagerBase.cpp |   10 ++++++++++
 1 files changed, 10 insertions(+), 0 deletions(-)

diff --git a/audio/AudioPolicyManagerBase.cpp b/audio/AudioPolicyManagerBase.cpp
index 8831fb3..3ea244f 100644
--- a/audio/AudioPolicyManagerBase.cpp
+++ b/audio/AudioPolicyManagerBase.cpp
@@ -504,6 +504,16 @@ AudioSystem::forced_config AudioPolicyManagerBase::getForceUse(AudioSystem::forc
 void AudioPolicyManagerBase::setSystemProperty(const char* property, const char* value)
 {
     ALOGV("setSystemProperty() property %s, value %s", property, value);
+    if (strcmp(property, "ro.camera.sound.forced") == 0) {
+        if (atoi(value)) {
+            ALOGV("ENFORCED_AUDIBLE cannot be muted");
+            mStreams[AudioSystem::ENFORCED_AUDIBLE].mCanBeMuted = false;
+        } else {
+            ALOGV("ENFORCED_AUDIBLE can be muted");
+            mStreams[AudioSystem::ENFORCED_AUDIBLE].mCanBeMuted = true;
+        }
+    }
+
 }
 
 // Find a direct output profile compatible with the parameters passed, even if the input flags do
-- 
1.7.4.1

