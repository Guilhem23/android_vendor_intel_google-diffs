From 7f27d7f9300040ec1dcbc89f330386bfbfb30a2c Mon Sep 17 00:00:00 2001
From: Quentin Casasnovas <quentinx.casasnovas@intel.com>
Date: Tue, 9 Jul 2013 11:33:58 +0200
Subject: [PORT FROM MAIN]wifi: Add support for MTK

BZ: 125764

Change-Id: I1fea0e8e8206e6c04e3b436816c1108010fe3486
Orig-Change-Id: Ib01a409d61930dfa9736758e6269b458fedad9c3
Category: device enablement
Domain: CWS.WIFI-Mediatek
Origin: internal
Upstream-Candidate: no,proprietary
Signed-off-by: Quentin Casasnovas <quentinx.casasnovas@intel.com>
---
 wifi/Android.mk          |    7 +++
 wifi/vendors/mtk.c       |  116 ++++++++++++++++++++++++++++++++++++++++++++++
 wifi/vendors/mtk.h       |   33 +++++++++++++
 wifi/vendors/vendors.def |    5 ++
 wifi/wifi.c              |    4 ++
 5 files changed, 165 insertions(+), 0 deletions(-)
 create mode 100644 wifi/vendors/mtk.c
 create mode 100644 wifi/vendors/mtk.h

diff --git a/wifi/Android.mk b/wifi/Android.mk
index ab38afb..ef6ffc7 100644
--- a/wifi/Android.mk
+++ b/wifi/Android.mk
@@ -58,6 +58,13 @@ ifneq (,$(filter wifi_ti%,$(PRODUCTS.$(INTERNAL_PRODUCT).PRODUCT_PACKAGES)))
 	LOCAL_CFLAGS += -DWIFI_GLUE_WITH_TI
 endif
 
+ifneq (,$(filter wifi_mtk%,$(PRODUCTS.$(INTERNAL_PRODUCT).PRODUCT_PACKAGES)))
+
+	LOCAL_CFLAGS += -DWIFI_GLUE_WITH_MTK
+	LOCAL_SRC_FILES += wifi/vendors/mtk.c
+
+endif
+
 	LOCAL_SRC_FILES += wifi/wifi.c
 	LOCAL_SRC_FILES += wifi/utils.c
 	LOCAL_SRC_FILES += wifi/supplicant.c
diff --git a/wifi/vendors/mtk.c b/wifi/vendors/mtk.c
new file mode 100644
index 0000000..2c6952a
--- /dev/null
+++ b/wifi/vendors/mtk.c
@@ -0,0 +1,116 @@
+/*
+ * Copyright 2008, The Android Open Source Project
+ * Copyright 2012-2013, Intel Corporation
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include "../wifi.h"
+#include "mtk.h"
+
+static int mtk_set_power(int on)
+{
+    ALOGE("set_power %d\n", on);
+    return write_to_file(MTK_POWER_PATH, on ? "1" : "0", 1);
+}
+
+static int mtk_set_p2p_mode(int enable, int mode)
+{
+    struct iwreq req = {0};
+    int param[2];
+    int sk = -1;
+
+    ALOGD("mtk_set_p2p_mode: enable==%d mode==%d", enable, mode);
+
+    if ((sk = socket(PF_INET, SOCK_DGRAM, 0)) < 0) {
+        ALOGE("switch_driver_mode: Cannot open socket!");
+        return -errno;
+    }
+
+    param[0] = enable;
+    param[1] = mode;
+
+    req.u.data.pointer = &(param[0]);
+    req.u.data.length = 2;
+    req.u.mode =  MTK_PRIV_CMD_P2P_MODE;
+    memcpy(req.u.name + 4, param, sizeof(param));
+    strncpy(req.ifr_name, "wlan0", IFNAMSIZ);
+
+    if (ioctl(sk, MTK_IOCTL_SET_INT, &req) < 0) {
+        ALOGE("switch_driver_mode: Error while sending ioctl %s", strerror(errno));
+        close(sk);
+        return -errno;
+    }
+
+    close(sk);
+
+    return 0;
+}
+
+int mtk_switch_driver_mode(int mode)
+{
+    ALOGE("wifi_switch_driver_mode: %d", mode);
+
+    switch (mode) {
+    case WIFI_STA_MODE:
+    case WIFI_P2P_MODE:
+        return mtk_set_p2p_mode(1, 0);
+        break;
+    case WIFI_AP_MODE:
+        if (!mtk_is_driver_loaded())
+                mtk_set_power(1);
+        mtk_set_p2p_mode(1, 1);
+        return 0;
+        break;
+    default:
+        ALOGE("switch_driver_mode: Unknown mode!");
+        return -EINVAL;
+    }
+
+    return 0;
+}
+
+int mtk_load_driver(void)
+{
+    ALOGE("load_driver called");
+
+    if (mtk_set_power(1) > 0)
+        return -1;
+
+    property_set(DRIVER_PROP_NAME, "loaded");
+
+    return 0;
+}
+
+int mtk_unload_driver(void)
+{
+    ALOGE("unload_driver called");
+
+    /* if (mtk_set_power(0) > 0) */
+    /*  return -1; */
+
+    property_set(DRIVER_PROP_NAME, "unloaded");
+
+    return 0;
+}
+
+int mtk_is_driver_loaded(void)
+{
+        char driver_loaded[PROPERTY_VALUE_MAX];
+
+        if (!property_get(DRIVER_PROP_NAME, driver_loaded, NULL) ||
+            strcmp(driver_loaded, "loaded") != 0)
+                return 0;
+
+        return 1;
+}
diff --git a/wifi/vendors/mtk.h b/wifi/vendors/mtk.h
new file mode 100644
index 0000000..93b1b50
--- /dev/null
+++ b/wifi/vendors/mtk.h
@@ -0,0 +1,33 @@
+/*
+ * Copyright 2008, The Android Open Source Project
+ * Copyright 2012-2013, Intel Corporation
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#ifndef MTK_H_
+# define MTK_H_
+
+#include <linux/wireless.h>
+
+#define MTK_PRIV_CMD_P2P_MODE   28
+#define MTK_IOCTL_SET_INT       (SIOCIWFIRSTPRIV + 0)
+#define MTK_IOCTL_GET_INT       (SIOCIWFIRSTPRIV + 1)
+#define MTK_POWER_PATH          "/dev/wmtWifi"
+
+int mtk_switch_driver_mode(int mode);
+int mtk_load_driver(void);
+int mtk_unload_driver(void);
+int mtk_is_driver_loaded(void);
+
+#endif /* !MTK_H_ */
diff --git a/wifi/vendors/vendors.def b/wifi/vendors/vendors.def
index a3b0f61..521c5e2 100644
--- a/wifi/vendors/vendors.def
+++ b/wifi/vendors/vendors.def
@@ -40,3 +40,8 @@ WIFI_GLUE(TI, NULL, NULL, NULL, NULL, NULL, NULL)
 WIFI_GLUE(BC, bc_load_driver, bc_unload_driver, NULL,
 	  NULL, NULL, bc_is_driver_loaded)
 #endif
+
+#ifdef WIFI_GLUE_WITH_MTK
+WIFI_GLUE(MTK, mtk_load_driver, mtk_unload_driver, mtk_switch_driver_mode,
+	  NULL, NULL, mtk_is_driver_loaded)
+#endif
diff --git a/wifi/wifi.c b/wifi/wifi.c
index a5bae33..538076d 100644
--- a/wifi/wifi.c
+++ b/wifi/wifi.c
@@ -30,6 +30,10 @@ static const char BCM_PROP_CHIP[]	= "wlan.bcm.chip";
 #  include "vendors/bc.h"
 #endif
 
+#ifdef WIFI_GLUE_WITH_MTK
+#  include "vendors/mtk.h"
+#endif
+
 enum {
     /* See X Macro trick on Wikipedia */
 #define WIFI_GLUE(Vendor, Ops...) VENDOR_ ## Vendor,
-- 
1.7.4.1

