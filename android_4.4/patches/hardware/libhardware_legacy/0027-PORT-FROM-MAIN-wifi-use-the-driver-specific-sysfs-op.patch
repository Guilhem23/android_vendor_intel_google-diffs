From 306c1bbce3e1a90e354c5abf4e501986354e055a Mon Sep 17 00:00:00 2001
From: Jeremie GARCIA <jeremiex.garcia@intel.com>
Date: Fri, 15 Mar 2013 16:22:52 +0100
Subject: [PORT FROM MAIN]wifi: use the driver specific sysfs op_mode file

BZ: 98573

Each BCM driver exposes through sysfs its own op_mode file.
This patch ensures that we use the right one.

Change-Id: Ia5ee9a43845ee6e31c963a73ecf35d59a5b08177
Orig-Change-Id: I78d4434eb37557304a619b50a322d3970480ed90
Category: device enablement
Domain: CWS.WIFI-Bluewoods
Origin: upstream
Upstream-Candidate: no
Signed-off-by: Jeremie GARCIA <jeremiex.garcia@intel.com>
---
 wifi/wifi.c |   20 +++++++++++++-------
 1 files changed, 13 insertions(+), 7 deletions(-)

diff --git a/wifi/wifi.c b/wifi/wifi.c
index 77995e9..4202e1f 100644
--- a/wifi/wifi.c
+++ b/wifi/wifi.c
@@ -80,10 +80,6 @@ static char primary_iface[PROPERTY_VALUE_MAX];
 #define WIFI_DRIVER_FW_PATH_PARAM	"/sys/module/wlan/parameters/fwpath"
 #endif
 
-#ifndef WIFI_DRIVER_MODE_PATH_PARAM
-#define WIFI_DRIVER_MODE_PATH_PARAM	"/sys/module/bcmdhd/parameters/op_mode"
-#endif
-
 #define WIFI_DRIVER_LOADER_DELAY	1000000
 
 static const char IFACE_DIR[]           = "/data/system/wpa_supplicant";
@@ -916,7 +912,7 @@ const char *wifi_get_fw_path(int fw_type)
 static int write_to_file(const char *path, const char *data, size_t len)
 {
     int ret = 0;
-    int fd = -1
+    int fd = -1;
 
     assert(path);
     assert(data);
@@ -948,6 +944,7 @@ int wifi_change_fw_path(const char *fwpath)
 int wifi_switch_driver_mode(int mode)
 {
     char mode_str[8];
+    char bcm_prop_chip[PROPERTY_VALUE_MAX]="";
 
     /**
      * BIT(0), BIT(1),.. come from dhd.h in the driver code, and we need to
@@ -972,6 +969,15 @@ int wifi_switch_driver_mode(int mode)
 	return -EINVAL;
     }
 
-    return write_to_file(WIFI_DRIVER_MODE_PATH_PARAM,
-			 mode_str, strlen(mode_str));
+    property_get(BCM_PROP_CHIP, bcm_prop_chip, "");
+    if(strlen(bcm_prop_chip)) {
+      char file_to_write[4096]="";
+      sprintf(file_to_write,"/sys/module/bcm%s/parameters/op_mode",bcm_prop_chip);
+      return write_to_file(file_to_write,mode_str, strlen(mode_str));
+    }
+    else {
+      ALOGE("wifi_switch_driver_mode: error! %s property is empty", BCM_PROP_CHIP);
+      return -1;
+    }
 }
+
-- 
1.7.4.1

