From 526d0a1b8e1121dc8d27bd36f613b227ac3cc7cb Mon Sep 17 00:00:00 2001
From: Raffaele Aquilone <raquiloX>
Date: Tue, 19 Feb 2013 15:37:45 +0100
Subject: [PORT FROM MAIN][BT] Set optional SCO parameters into bt_vendor.conf

BZ: 84920 90117 93118 93102 96516 104022 108334 118400 121847

Handle SCO parameters from bt_vendor.conf in
order to be able to change them without recompiling.

Creation of configurations for the clovertrail, merrifield
and baytrail platforms.

Parameters name are:
For PCM:
SCO_PCM_ROUTING
SCO_PCM_IF_CLOCK_RATE
SCO_PCM_IF_FRAME_TYPE
SCO_PCM_IF_SYNC_MODE
SCO_PCM_IF_CLOCK_MODE
PCM_DATA_FMT_SHIFT_MODE
PCM_DATA_FMT_FILL_BITS
PCM_DATA_FMT_FILL_METHOD
PCM_DATA_FMT_FILL_NUM
PCM_DATA_FMT_JUSTIFY_MODE

For I2S:
SCO_I2SPCM_IF_MODE
SCO_I2SPCM_IF_ROLE
SCO_I2SPCM_IF_SAMPLE_RATE
SCO_I2SPCM_IF_CLOCK_RATE

Notes:
- baytrail: Configuration :
 . BT chip is slave
 . PCM 8kHz mono
 . 16 bits of data (13 data bits + 3 LSB not considered by BT chip)
 . 1 dummy bit for FrameSync

Change-Id: I1c2ce8db1d5c7254a915284f61b142cfc2e0f5f2
Orig-Change-Id: I833288795e062eaeddad2fcdeac7923ccc35a86b
Category: device enablement
Domain: CWS.BT-Common
Origin: internal
Upstream-Candidate: no, proprietary
Signed-off-by: Cedric Bondier <cedricx.bondier@intel.com>
Signed-off-by: Cedric Poignet <cedric.poignet@intel.com>
Signed-off-by: Xavier Boniface <xavierx.boniface@intel.com>
Signed-off-by: Julien Gros <julien.gros@intel.com>
Signed-off-by: MiguelX Gaio <miguelx.gaio@intel.com>
Signed-off-by: Patrick Combes <patrick.combes@intel.com>
Signed-off-by: Axel Haslam <axelx.haslam@intel.com>
Reviewed-by: Aquilone, RaffaeleX <raffaelex.aquilone@intel.com>
Reviewed-by: Chen, HuaqiangX <huaqiangx.chen@intel.com>
Reviewed-by: Yao, Yong <yong.yao@intel.com>
Reviewed-by: Bellouard, Jean-marie <jean-marie.bellouard@intel.com>
Reviewed-by: Gros, Julien <julien.gros@intel.com>
Reviewed-by: Gaio, MiguelX <miguelx.gaio@intel.com>
Reviewed-by: Cohen, David A <david.a.cohen@intel.com>
Reviewed-by: Lee, JhinX <jhinx.lee@intel.com>
Reviewed-by: Gaffie, Francois <francois.gaffie@intel.com>
Reviewed-by: Bondier, Cedric <cedric.bondier@intel.com>
Reviewed-by: Boniface, XavierX <xavierx.boniface@intel.com>
Reviewed-by: Poignet, Cedric <cedric.poignet@intel.com>
Reviewed-by: Zayet, Aymen <aymen.zayet@intel.com>
Tested-by: Dixon, CharlesX <charlesx.dixon@intel.com>
Tested-by: Zurmely, PierreX <pierrex.zurmely@intel.com>
Tested-by: Champciaux, Nicolas <nicolas.champciaux@intel.com>
Tested-by: Lestienne, ChristopheX <christophex.lestienne@intel.com>
---
 include/vnd_byt_t_ffrd8.txt |   18 +++++++
 include/vnd_redhookbay.txt  |    8 +++
 include/vnd_saltbay.txt     |   20 ++++++++
 src/conf.c                  |   32 +++++++++++-
 src/hardware.c              |  113 ++++++++++++++++++++++++++++++++++++++++++-
 5 files changed, 187 insertions(+), 4 deletions(-)
 create mode 100644 include/vnd_byt_t_ffrd8.txt
 create mode 100644 include/vnd_redhookbay.txt
 create mode 100644 include/vnd_saltbay.txt

diff --git a/include/vnd_byt_t_ffrd8.txt b/include/vnd_byt_t_ffrd8.txt
new file mode 100644
index 0000000..2aed6d9
--- /dev/null
+++ b/include/vnd_byt_t_ffrd8.txt
@@ -0,0 +1,18 @@
+BLUETOOTH_UART_DEVICE_PORT = "/dev/ttyMFD0"
+FW_PATCHFILE_LOCATION = "/system/etc/firmware/bt/"
+LPM_IDLE_TIMEOUT_MULTIPLE = 5
+SCO_USE_I2S_INTERFACE = FALSE
+SCO_PCM_ROUTING = 0
+SCO_PCM_IF_CLOCK_RATE = 0
+SCO_PCM_IF_FRAME_TYPE = 0
+SCO_PCM_IF_SYNC_MODE = 0
+SCO_PCM_IF_CLOCK_MODE = 0
+PCM_DATA_FMT_SHIFT_MODE = 0
+PCM_DATA_FMT_FILL_BITS = 0
+PCM_DATA_FMT_FILL_METHOD = 3
+PCM_DATA_FMT_FILL_NUM = 3
+PCM_DATA_FMT_JUSTIFY_MODE = 0
+BTVND_DBG = TRUE
+BTHW_DBG = TRUE
+VNDUSERIAL_DBG = TRUE
+UPIO_DBG = TRUE
diff --git a/include/vnd_redhookbay.txt b/include/vnd_redhookbay.txt
new file mode 100644
index 0000000..256fbec
--- /dev/null
+++ b/include/vnd_redhookbay.txt
@@ -0,0 +1,8 @@
+BLUETOOTH_UART_DEVICE_PORT = "/dev/ttyMFD0"
+FW_PATCHFILE_LOCATION = "/vendor/firmware/"
+LPM_IDLE_TIMEOUT_MULTIPLE = 5
+SCO_USE_I2S_INTERFACE = FALSE
+BTVND_DBG = TRUE
+BTHW_DBG = TRUE
+VNDUSERIAL_DBG = TRUE
+UPIO_DBG = TRUE
diff --git a/include/vnd_saltbay.txt b/include/vnd_saltbay.txt
new file mode 100644
index 0000000..fef2802
--- /dev/null
+++ b/include/vnd_saltbay.txt
@@ -0,0 +1,20 @@
+BLUETOOTH_UART_DEVICE_PORT = "/dev/ttyMFD0"
+FW_PATCHFILE_LOCATION = "/vendor/firmware/"
+LPM_IDLE_TIMEOUT_MULTIPLE = 5
+SCO_USE_I2S_INTERFACE = FALSE
+SCO_I2SPCM_IF_ROLE = 0
+SCO_I2SPCM_IF_SAMPLE_RATE = 0
+SCO_I2SPCM_IF_CLOCK_RATE = 0
+SCO_PCM_IF_CLOCK_RATE = 0
+SCO_PCM_IF_FRAME_TYPE = 0
+SCO_PCM_IF_SYNC_MODE = 0
+SCO_PCM_IF_CLOCK_MODE = 0
+PCM_DATA_FMT_SHIFT_MODE = 0
+PCM_DATA_FMT_FILL_BITS = 0
+PCM_DATA_FMT_FILL_METHOD = 3
+PCM_DATA_FMT_FILL_NUM = 3
+PCM_DATA_FMT_JUSTIFY_MODE = 0
+BTVND_DBG = TRUE
+BTHW_DBG = TRUE
+VNDUSERIAL_DBG = TRUE
+UPIO_DBG = TRUE
diff --git a/src/conf.c b/src/conf.c
index 39ac12e..438f114 100644
--- a/src/conf.c
+++ b/src/conf.c
@@ -40,8 +40,12 @@ int hw_set_patch_file_name(char *p_conf_name, char *p_conf_value, int param);
 #if (VENDOR_LIB_RUNTIME_TUNING_ENABLED == TRUE)
 int hw_set_patch_settlement_delay(char *p_conf_name, char *p_conf_value, int param);
 #endif
-
-
+#if (!defined(SCO_USE_I2S_INTERFACE) || (SCO_USE_I2S_INTERFACE == FALSE))
+int hw_pcm_set_param(char *p_conf_name, char *p_conf_value, int param);
+int hw_pcm_fmt_set_param(char *p_conf_name, char *p_conf_value, int param);
+#else
+int hw_i2s_set_param(char *p_conf_name, char *p_conf_value, int param);
+#endif
 /******************************************************************************
 **  Local type definitions
 ******************************************************************************/
@@ -73,6 +77,24 @@ static const conf_entry_t conf_table[] = {
 #if (VENDOR_LIB_RUNTIME_TUNING_ENABLED == TRUE)
     {"FwPatchSettlementDelay", hw_set_patch_settlement_delay, 0},
 #endif
+#if (!defined(SCO_USE_I2S_INTERFACE) || (SCO_USE_I2S_INTERFACE == FALSE))
+    {"SCO_PCM_ROUTING", hw_pcm_set_param, 0},
+    {"SCO_PCM_IF_CLOCK_RATE", hw_pcm_set_param, 0},
+    {"SCO_PCM_IF_FRAME_TYPE", hw_pcm_set_param, 0},
+    {"SCO_PCM_IF_SYNC_MODE", hw_pcm_set_param, 1},
+    {"SCO_PCM_IF_CLOCK_MODE", hw_pcm_set_param, 1},
+
+    {"PCM_DATA_FMT_SHIFT_MODE", hw_pcm_fmt_set_param, 0},
+    {"PCM_DATA_FMT_FILL_BITS", hw_pcm_fmt_set_param, 0},
+    {"PCM_DATA_FMT_FILL_METHOD", hw_pcm_fmt_set_param, 0},
+    {"PCM_DATA_FMT_FILL_NUM", hw_pcm_fmt_set_param, 3},
+    {"PCM_DATA_FMT_JUSTIFY_MODE", hw_pcm_fmt_set_param, 0},
+#else
+    {"SCO_I2SPCM_IF_MODE", hw_i2s_set_param, 1},
+    {"SCO_I2SPCM_IF_ROLE", hw_i2s_set_param, 1},
+    {"SCO_I2SPCM_IF_SAMPLE_RATE", hw_i2s_set_param, 0},
+    {"SCO_I2SPCM_IF_CLOCK_RATE", hw_i2s_set_param, 1},
+#endif
     {(const char *) NULL, NULL, 0}
 };
 
@@ -100,6 +122,12 @@ void vnd_load_conf(const char *p_path)
 
     ALOGI("Attempt to load conf from %s", p_path);
 
+#if (!defined(SCO_USE_I2S_INTERFACE) || (SCO_USE_I2S_INTERFACE == FALSE))
+    ALOGI("PCM define ");
+#else
+    ALOGI("I2S define");
+#endif
+
     if ((p_file = fopen(p_path, "r")) != NULL)
     {
         /* read line by line */
diff --git a/src/hardware.c b/src/hardware.c
index c8bf746..9bd48e6 100644
--- a/src/hardware.c
+++ b/src/hardware.c
@@ -192,6 +192,19 @@ static uint8_t bt_sco_param[SCO_PCM_PARAM_SIZE] =
     SCO_PCM_IF_SYNC_MODE,
     SCO_PCM_IF_CLOCK_MODE
 };
+/*
+ * Parameter names used in bt_vendor.conf to configure BT SCO PCM settings.
+ * Below table should always matches the previous table in terms of size
+ * and elements order.
+ */
+static const char* sco_pcm_parameter_name[SCO_PCM_PARAM_SIZE] =
+{
+    "SCO_PCM_ROUTING",
+    "SCO_PCM_IF_CLOCK_RATE",
+    "SCO_PCM_IF_FRAME_TYPE",
+    "SCO_PCM_IF_SYNC_MODE",
+    "SCO_PCM_IF_CLOCK_MODE"
+};
 
 static uint8_t bt_pcm_data_fmt_param[PCM_DATA_FORMAT_PARAM_SIZE] =
 {
@@ -201,7 +214,21 @@ static uint8_t bt_pcm_data_fmt_param[PCM_DATA_FORMAT_PARAM_SIZE] =
     PCM_DATA_FMT_FILL_NUM,
     PCM_DATA_FMT_JUSTIFY_MODE
 };
-#else
+/*
+ * Parameter names used in bt_vendor.conf to configure BT SCO PCM FORMAT settings.
+ * Below table should always matches the previous table in terms of size
+ * and elements order.
+ */
+static const char* pcm_data_fmt_parameter_name[PCM_DATA_FORMAT_PARAM_SIZE] =
+{
+    "PCM_DATA_FMT_SHIFT_MODE",
+    "PCM_DATA_FMT_FILL_BITS",
+    "PCM_DATA_FMT_FILL_METHOD",
+    "PCM_DATA_FMT_FILL_NUM",
+    "PCM_DATA_FMT_JUSTIFY_MODE"
+};
+
+#else // (!defined(SCO_USE_I2S_INTERFACE) || (SCO_USE_I2S_INTERFACE == FALSE))
 static uint8_t bt_sco_param[SCO_I2SPCM_PARAM_SIZE] =
 {
     SCO_I2SPCM_IF_MODE,
@@ -209,7 +236,19 @@ static uint8_t bt_sco_param[SCO_I2SPCM_PARAM_SIZE] =
     SCO_I2SPCM_IF_SAMPLE_RATE,
     SCO_I2SPCM_IF_CLOCK_RATE
 };
-#endif
+/*
+ * Parameter names use in bt_vendor.conf to configure BT SCO I2S settings.
+ * Below table should always match the previous table in term of size
+ * and element order.
+ */
+static const char* sco_i2s_parameter_name[SCO_I2SPCM_PARAM_SIZE] = {
+    "SCO_I2SPCM_IF_MODE",
+    "SCO_I2SPCM_IF_ROLE",
+    "SCO_I2SPCM_IF_SAMPLE_RATE",
+    "SCO_I2SPCM_IF_CLOCK_RATE"
+};
+
+#endif // (!defined(SCO_USE_I2S_INTERFACE) || (SCO_USE_I2S_INTERFACE == FALSE))
 
 /*
  * The look-up table of recommended firmware settlement delay (milliseconds) on
@@ -1231,6 +1270,76 @@ int hw_set_patch_settlement_delay(char *p_conf_name, char *p_conf_value, int par
 }
 #endif  //VENDOR_LIB_RUNTIME_TUNING_ENABLED
 
+static inline int set_param(char *p_name, char *p_value, int param, int size, \
+                            const char *param_name[], uint8_t *bt_param)
+{
+    int i;
+    ALOGE( "%s: parameter: %s value: %s", __func__, p_name, p_value);
+
+    for (i = 0; i < size; i++) {
+         if (strcmp(param_name[i], p_name) == 0) {
+           bt_param[i] = atoi(p_value);
+           return 0;
+        }
+    }
+
+    // no parameter matching
+    ALOGE( "%s: invalid parameter %s", __func__, p_name);
+    return -EINVAL;
+}
+
+#if (!defined(SCO_USE_I2S_INTERFACE) || (SCO_USE_I2S_INTERFACE == FALSE))
+/*******************************************************************************
+**
+** Function        hw_pcm_set_param
+**
+** Description     Set SCO PCM parameters
+**
+** Returns         0 : Success
+**                 Otherwise : Fail
+**
+*******************************************************************************/
+int hw_pcm_set_param(char *p_name, char *p_value, int param)
+{
+    return set_param(p_name, p_value, param, SCO_PCM_PARAM_SIZE, \
+                     sco_pcm_parameter_name, bt_sco_param);
+}
+
+/*******************************************************************************
+**
+** Function        hw_pcm_fmt_set_param
+**
+** Description     Set SCO PCM Format parameters
+**
+** Returns         0 : Success
+**                 Otherwise : Fail
+**
+*******************************************************************************/
+int hw_pcm_fmt_set_param(char *p_name, char *p_value, int param)
+{
+    return set_param(p_name, p_value, param, PCM_DATA_FORMAT_PARAM_SIZE, \
+                     pcm_data_fmt_parameter_name, bt_pcm_data_fmt_param);
+}
+
+#else // (!defined(SCO_USE_I2S_INTERFACE) || (SCO_USE_I2S_INTERFACE == FALSE))
+/*******************************************************************************
+**
+** Function        hw_i2s_set_param
+**
+** Description     Set SCO I2S parameters
+**
+** Returns         0 : Success
+**                 Otherwise : Fail
+**
+*******************************************************************************/
+int hw_i2s_set_param(char *p_name, char *p_value, int param)
+{
+    return set_param(p_name, p_value, param, SCO_I2SPCM_PARAM_SIZE, \
+                     sco_i2s_parameter_name, bt_sco_param);
+}
+#endif // (!defined(SCO_USE_I2S_INTERFACE) || (SCO_USE_I2S_INTERFACE == FALSE))
+
+
 /*****************************************************************************
 **   Sample Codes Section
 *****************************************************************************/
-- 
1.7.4.1

