From 22a0e12049f6d93cf38fcd4814c3acf78b2b11b0 Mon Sep 17 00:00:00 2001
From: Xavier Boniface <xavierx.boniface@intel.com>
Date: Thu, 28 Feb 2013 19:25:14 +0100
Subject: [PORT FROM MAIN][BT] Fix Broadcom Bluetooth chip autodetection (BCM4335B0)

BZ: 86462 104381

Port patch device-common-libbt-01.patch provided by Broadcom
(see CSP case 618841).

This patch checks the LMP_Subversion field for BCM4335 to decide
if this is an A0 or B0.

This patch will be included in Broadcom's bplus release.

Note: KW reported an error on the BCM patch about a possible
unitialized variable with usage of 'p_name'.
'tmp_path' should be preferred over 'p_name' to avoid this
unitialized pointer condition.
This fix has been applied over the BCM patch.

Change-Id: Id9d663c667e3b4c5246f818e7ad7d00c18cd787e
Orig-Change-Id: Ib7facf50cc1a9d1665980c7e44f5c0bdd594c5ce
Category: device enablement
Domain: CWS.BT-BCM
Origin: 3rd-party broadcom
Upstream-Candidate: no, proprietary
Orig-Change-Id: Ibcb93c00e79f6e5552fff9ea441f8736c51cd8ca
Signed-off-by: Xavier Boniface <xavierx.boniface@intel.com>
Signed-off-by: Patrick Combes <patrick.combes@intel.com>
Reviewed-by: Jayaraman, Venkat <venkat.jayaraman@intel.com>
Reviewed-by: Gros, Julien <julien.gros@intel.com>
Reviewed-by: Yao, Yong <yong.yao@intel.com>
Tested-by: Zurmely, PierreX <pierrex.zurmely@intel.com>
Reviewed-on: http://android.intel.com:8080/123803
Reviewed-on: http://android.intel.com:8080/123805
Reviewed-by: Poignet, Cedric <cedric.poignet@intel.com>
Tested-by: Champciaux, Nicolas <nicolas.champciaux@intel.com>
---
 src/hardware.c |   93 +++++++++++++++++++++++++++++++++++++++++++------------
 1 files changed, 72 insertions(+), 21 deletions(-)

diff --git a/src/hardware.c b/src/hardware.c
index 9bd48e6..ce6cf21 100644
--- a/src/hardware.c
+++ b/src/hardware.c
@@ -81,6 +81,7 @@
 
 #define HCI_EVT_CMD_CMPL_STATUS_RET_BYTE        5
 #define HCI_EVT_CMD_CMPL_LOCAL_NAME_STRING      6
+#define HCI_EVT_CMD_CMPL_LOCAL_REVISION         12
 #define HCI_EVT_CMD_CMPL_LOCAL_BDADDR_ARRAY     6
 #define HCI_EVT_CMD_CMPL_OPCODE                 3
 #define LPM_CMD_PARAM_SIZE                      12
@@ -91,6 +92,9 @@
 #define LOCAL_NAME_BUFFER_LEN                   32
 #define LOCAL_BDADDR_PATH_BUFFER_LEN            256
 
+#define HCI_READ_LOCAL_VERSION_INFORMATION      0x1001
+
+
 #define STREAM_TO_UINT16(u16, p) {u16 = ((uint16_t)(*(p)) + (((uint16_t)(*((p) + 1))) << 8)); (p) += 2;}
 #define UINT16_TO_STREAM(p, u16) {*(p)++ = (uint8_t)(u16); *(p)++ = (uint8_t)((u16) >> 8);}
 #define UINT32_TO_STREAM(p, u32) {*(p)++ = (uint8_t)(u32); *(p)++ = (uint8_t)((u32) >> 8); *(p)++ = (uint8_t)((u32) >> 16); *(p)++ = (uint8_t)((u32) >> 24);}
@@ -105,6 +109,8 @@ enum {
     HW_CFG_SET_UART_CLOCK,
     HW_CFG_SET_UART_BAUD_1,
     HW_CFG_READ_LOCAL_NAME,
+    HW_CFG_CHECK_LOCAL_REVISION,
+    HW_CFG_CHECK_LOCAL_NAME,
     HW_CFG_DL_MINIDRIVER,
     HW_CFG_DL_FW_PATCH,
     HW_CFG_SET_UART_BAUD_2,
@@ -683,40 +689,85 @@ void hw_config_cback(void *p_mem)
                 {
                     strncpy(hw_cfg_cb.local_chip_name, "UNKNOWN", \
                             LOCAL_NAME_BUFFER_LEN-1);
-                    p_name = p_tmp;
+                    break;
                 }
 
                 hw_cfg_cb.local_chip_name[LOCAL_NAME_BUFFER_LEN-1] = 0;
 
-                BTHWDBG("Chipset %s", hw_cfg_cb.local_chip_name);
+                /* Additional check for revision if chip is BCM4335 */
+                if (strstr(hw_cfg_cb.local_chip_name, "BCM4335") != NULL)
+                {
+                    ALOGI("bt vendor lib: BCM4335 chip detected, needs to check for the lmp version...");
+
+                    /* read local revision to check lmp version to differentiate between A0 and B0 revision of BCM4335 */
+                    UINT16_TO_STREAM(p, HCI_READ_LOCAL_VERSION_INFORMATION);
+                    *p = 0; /* parameter length */
 
-                if ((status = hw_config_findpatch(p_name)) == TRUE)
+                    p_buf->len = HCI_CMD_PREAMBLE_SIZE;
+                    hw_cfg_cb.state = HW_CFG_CHECK_LOCAL_REVISION;
+
+                    is_proceeding = bt_vendor_cbacks->xmit_cb( \
+                                        HCI_READ_LOCAL_VERSION_INFORMATION, \
+                                        p_buf, hw_config_cback);
+                    break;
+                }
+                goto check_local_name;
+
+
+            case HW_CFG_CHECK_LOCAL_REVISION:
                 {
-                    if ((hw_cfg_cb.fw_fd = open(p_name, O_RDONLY)) == -1)
+                    uint16_t    lmp_subversion;
+                    uint8_t     *p_lmp;
+
+                    p_lmp = (uint8_t *) (p_evt_buf + 1) + HCI_EVT_CMD_CMPL_LOCAL_REVISION;
+                                        STREAM_TO_UINT16(lmp_subversion, p_lmp);
+
+                    ALOGI("bt vendor lib: lmp version : %04x.", lmp_subversion);
+                    if (lmp_subversion == 0x4106)
                     {
-                        ALOGE("vendor lib preload failed to open [%s]", p_name);
+                        /* Found BCM4335B0 revision */
+                        hw_cfg_cb.local_chip_name[7] = 'B';
                     }
-                    else
+                }
+                /* fall through intentionally */
+
+            case HW_CFG_CHECK_LOCAL_NAME:
+
+check_local_name:
+                {
+                    char tmp_path[255];
+
+                    BTHWDBG("Chipset %s", hw_cfg_cb.local_chip_name);
+
+                    strcpy(tmp_path, hw_cfg_cb.local_chip_name);
+
+                    if ((status = hw_config_findpatch(tmp_path)) == TRUE)
                     {
-                        /* vsc_download_minidriver */
-                        UINT16_TO_STREAM(p, HCI_VSC_DOWNLOAD_MINIDRV);
-                        *p = 0; /* parameter length */
+                        if ((hw_cfg_cb.fw_fd = open(tmp_path, O_RDONLY)) == -1)
+                        {
+                            ALOGE("vendor lib preload failed to open [%s]", tmp_path);
+                        }
+                        else
+                        {
+                            /* vsc_download_minidriver */
+                            UINT16_TO_STREAM(p, HCI_VSC_DOWNLOAD_MINIDRV);
+                            *p = 0; /* parameter length */
 
-                        p_buf->len = HCI_CMD_PREAMBLE_SIZE;
-                        hw_cfg_cb.state = HW_CFG_DL_MINIDRIVER;
+                            p_buf->len = HCI_CMD_PREAMBLE_SIZE;
+                            hw_cfg_cb.state = HW_CFG_DL_MINIDRIVER;
 
-                        is_proceeding = bt_vendor_cbacks->xmit_cb( \
-                                            HCI_VSC_DOWNLOAD_MINIDRV, p_buf, \
-                                            hw_config_cback);
+                            is_proceeding = bt_vendor_cbacks->xmit_cb( \
+                                                HCI_VSC_DOWNLOAD_MINIDRV, p_buf, \
+                                                hw_config_cback);
+                        }
+                    }
+                    else
+                    {
+                        ALOGE( \
+                        "vendor lib preload failed to locate firmware patch file" \
+                        );
                     }
                 }
-                else
-                {
-                    ALOGE( \
-                    "vendor lib preload failed to locate firmware patch file" \
-                    );
-                }
-
                 if (is_proceeding == FALSE)
                 {
                     is_proceeding = hw_config_set_bdaddr(p_buf);
-- 
1.7.4.1

