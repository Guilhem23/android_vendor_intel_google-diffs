From 170a538c9b62b7193c8c8d0349beb7bc2a7c77dc Mon Sep 17 00:00:00 2001
From: Du Chenyang <chenyang.du@intel.com>
Date: Thu, 1 Aug 2013 10:42:32 +0800
Subject: [PORT FROM MAIN] Bionic: Disable mem leak tracker

BZ: 54138

Disable the default mem leak tracker which will report fake mem leaks
sometimes. As some mem will not be released at the time the process
exit, then mark them as leaks is improperty.

Domian: AOSP-Bionic

Change-Id: I18cc569727fb6b9b2355124a71b74a253c11a015
Orig-Change-Id: I08f2f441958fd75339a0b82e0b788fd11e715839
Category: device enablement
Domain: AOSP-bionic
Origin: internal
Upstream-Candidate: no
Reviewed-on: http://android.intel.com:8080/63542
Reviewed-by: Du, Chenyang <chenyang.du@intel.com>
Reviewed-by: Yin, Fengwei <fengwei.yin@intel.com>
---
 libc/bionic/malloc_debug_check.cpp  |    3 ++-
 libc/bionic/malloc_debug_common.cpp |    7 +++++++
 2 files changed, 9 insertions(+), 1 deletions(-)

diff --git a/libc/bionic/malloc_debug_check.cpp b/libc/bionic/malloc_debug_check.cpp
index 1a9244f..01ab127 100644
--- a/libc/bionic/malloc_debug_check.cpp
+++ b/libc/bionic/malloc_debug_check.cpp
@@ -54,6 +54,7 @@
 
 /* libc.debug.malloc.backlog */
 extern unsigned int gMallocDebugBacklog;
+extern int gMallocDebugTrackLeak;
 extern int gMallocDebugLevel;
 
 #define MAX_BACKTRACE_DEPTH 16
@@ -507,7 +508,7 @@ extern "C" size_t chk_malloc_usable_size(const void* ptr) {
 
 static void ReportMemoryLeaks() {
   // We only track leaks at level 10.
-  if (gMallocDebugLevel != 10) {
+  if (gMallocDebugLevel != 10 || gMallocDebugTrackLeak != 1) {
     return;
   }
 
diff --git a/libc/bionic/malloc_debug_common.cpp b/libc/bionic/malloc_debug_common.cpp
index ccceb14..24d5c84 100644
--- a/libc/bionic/malloc_debug_common.cpp
+++ b/libc/bionic/malloc_debug_common.cpp
@@ -289,6 +289,8 @@ static void* libc_malloc_impl_handle = NULL;
 unsigned int gMallocDebugBacklog;
 #define BACKLOG_DEFAULT_LEN 100
 
+int gMallocDebugTrackLeak;
+
 /* The value of libc.debug.malloc. */
 int gMallocDebugLevel;
 
@@ -379,6 +381,11 @@ static void malloc_init_impl() {
             if (gMallocDebugBacklog == 0) {
                 gMallocDebugBacklog = BACKLOG_DEFAULT_LEN;
             }
+
+            if (__system_property_get("libc.debug.malloc.trackleak", env)) {
+                gMallocDebugTrackLeak = atoi(env);
+            }
+
             so_name = "/system/lib/libc_malloc_debug_leak.so";
             break;
         }
-- 
1.7.4.1

