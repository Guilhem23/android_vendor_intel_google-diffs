From 85c051830efcdf3648e59ce1075e89ec621d2ca7 Mon Sep 17 00:00:00 2001
From: David L Kreitzer <david.l.kreitzer@intel.com>
Date: Wed, 11 Sep 2013 07:15:57 -0700
Subject: Dalvik: Writebacks of the upper half of 64-bit integer objects clobber an extra 4 bytes of memory

BZ: 137802

Make sure to convert LLreg objects to INTreg after the shift and before the
store when writing back the upper 4 bytes of the object.  Due to some PCG
internal details, this bug does not cause incorrect code to get generated
until we enable the LLreg to XMM optimization.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-CG
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: I2570443a37074a1ab3933fa53023007f372356ff
Orig-MCG-Change-Id: I2ab626e75fcc970181cd993d027186272311a43f
Signed-off-by: David L Kreitzer <david.l.kreitzer@intel.com>
Reviewed-on: http://android.intel.com:8080/131406
Reviewed-by: Beyler, Jean Christophe <jean.christophe.beyler@intel.com>
Reviewed-by: Lupusoru, Razvan A <razvan.a.lupusoru@intel.com>
Reviewed-by: lab_aqa <lab_aqa@intel.com>
Reviewed-by: Popov, Ivan G <ivan.g.popov@intel.com>
Reviewed-by: Hartley, Timothy D <timothy.d.hartley@intel.com>
Reviewed-by: Chen, Dong-Yuan <dong-yuan.chen@intel.com>
Tested-by: Chen, Dong-Yuan <dong-yuan.chen@intel.com>
Reviewed-by: Ansari, Zia <zia.ansari@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/codegen/x86/pcg/LowerMemory.cpp |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

diff --git a/vm/compiler/codegen/x86/pcg/LowerMemory.cpp b/vm/compiler/codegen/x86/pcg/LowerMemory.cpp
index 9571955..c28540c 100644
--- a/vm/compiler/codegen/x86/pcg/LowerMemory.cpp
+++ b/vm/compiler/codegen/x86/pcg/LowerMemory.cpp
@@ -92,6 +92,7 @@ void dvmCompilerPcgStoreVirtualReg (CompilationUnitPCG *cUnit, int ssaNum, int s
         //
         if (dtype == LLreg)
         {
+            storeVal = CGCreateNewInst ("xtract", "r", storeVal);
             opcode = "st";
         }
         else
@@ -113,6 +114,7 @@ void dvmCompilerPcgStoreVirtualReg (CompilationUnitPCG *cUnit, int ssaNum, int s
             if (dtype == LLreg)
             {
                 storeVal = CGCreateNewInst ("lshri", "ri", storeVal, 32);
+                storeVal = CGCreateNewInst ("xtract", "r", storeVal);
                 opcode = "st";
             }
             else
-- 
1.7.4.1

