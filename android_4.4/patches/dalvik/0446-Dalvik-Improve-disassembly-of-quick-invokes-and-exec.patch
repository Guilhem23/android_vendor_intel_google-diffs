From c2e3cf463506a0b0cea19eddfe2c3de7260a2567 Mon Sep 17 00:00:00 2001
From: Razvan A Lupusoru <razvan.a.lupusoru@intel.com>
Date: Thu, 12 Dec 2013 14:43:44 -0800
Subject: Dalvik: Improve disassembly of quick invokes and execute-inline

BZ: 158732

The quick version of invoke refer to an index into vtable. This index is now
printed as part of the disassembly. For execute-inline, the method being
invoked can be printed in more detail because the index into native table is known.

Change-Id: I75f210d3a59fc5c7c8240638f2390c583aa6c4e9
Category: device enablement
Domain: AOSP.Dalvik-Compiler-ME
Origin: internal
Upstream-Candidate: yes
Signed-off-by: Razvan A Lupusoru <razvan.a.lupusoru@intel.com>
---
 vm/compiler/Dataflow.cpp |   27 ++++++++++++++++++++++++++-
 1 files changed, 26 insertions(+), 1 deletions(-)

diff --git a/vm/compiler/Dataflow.cpp b/vm/compiler/Dataflow.cpp
index 38a371a..8445bcb 100644
--- a/vm/compiler/Dataflow.cpp
+++ b/vm/compiler/Dataflow.cpp
@@ -16,6 +16,7 @@
 
 #include "Dalvik.h"
 #include "Dataflow.h"
+#include "InlineNative.h"
 #include "Loop.h"
 #include "LoopInformation.h"
 #include "libdex/DexOpcodes.h"
@@ -1167,7 +1168,7 @@ void dvmCompilerExtendedDisassembler (const CompilationUnit *cUnit,
                         if (left <= 0)
                             break;
 
-                        snprintf(buffer + strlen (buffer), len - left, ", %s",
+                        snprintf(buffer + strlen (buffer), left, ", %s",
                                 getSSAName(cUnit, mir->ssaRep->uses[i], operand0));
                     }
 
@@ -1461,6 +1462,30 @@ char *dvmCompilerFullDisassembler(const CompilationUnit *cUnit,
             snprintf(buffer + offset, left, "%s%s", sep,
                      getSSAName(cUnit, mir->ssaRep->uses[i], operand0));
         }
+
+        //Now print some more information about method being invoked
+        InstructionFormat dalvikFormat = dexGetFormatFromOpcode ((Opcode) opcode);
+        offset = strlen (buffer);
+        left = sizeof(buffer) - offset;
+        switch (dalvikFormat)
+        {
+            case kFmt35ms:
+            case kFmt3rms:
+                //For quick invokes, this offset represents index into vtable
+                snprintf (buffer + offset, left, " vtable[#%#x]", insn->vB);
+                break;
+            case kFmt35mi:
+            case kFmt3rmi:
+            {
+                //For execute-inline, the offset represents an inline operation
+                const InlineOperation &operation = gDvmInlineOpsTable[insn->vB];
+                snprintf (buffer + offset, left, " %s.%s%s", operation.classDescriptor, operation.methodName,
+                        operation.methodSignature);
+                break;
+            }
+            default:
+                break;
+        }
     } else {
         int udIdx;
         if (mir->ssaRep->numDefs) {
-- 
1.7.4.1

