From 32a46589fa2021d2dc0f80cb2285cfadd86d5a7a Mon Sep 17 00:00:00 2001
From: Sebastien MICHEL <sebastien.michel@intel.com>
Date: Wed, 10 Jul 2013 17:13:39 +0200
Subject: Prefer memcmp16() use on String.regionMatches()

BZ: 121980

When available use __memcmp16() instead of memcmp() on
String.regionMatches() (BZ: 117506).

Add an extern to be able to use the ssse3 optimized __memcmp16() on
Dalvik vm.

Category: device-enablement
Domain: AOSP-Dalvik-Runtime
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: I1f230f7b2c5caca1b6f722cd069d62e6cc342ae9
Orig-MCG-Change-Id: Icd29a6f8def13f7d72adc581743b9626e87c1da2
Signed-off-by: Sebastien MICHEL <sebastien.michel@intel.com>
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/native/java_lang_String.cpp |   12 +++++++++---
 1 files changed, 9 insertions(+), 3 deletions(-)

diff --git a/vm/native/java_lang_String.cpp b/vm/native/java_lang_String.cpp
index 7c05735..973f824 100644
--- a/vm/native/java_lang_String.cpp
+++ b/vm/native/java_lang_String.cpp
@@ -20,6 +20,12 @@
 #include "Dalvik.h"
 #include "native/InternalNativePriv.h"
 
+#ifdef HAVE__MEMCMP16
+/* hand-coded assembly implementation, available on some platforms */
+/* "count" is in 16-bit units */
+extern "C" u4 __memcmp16(const u2* s0, const u2* s1, size_t count);
+#endif
+
 static void String_charAt(const u4* args, JValue* pResult)
 {
     MAKE_INTRINSIC_TRAMPOLINE(javaLangString_charAt);
@@ -131,14 +137,14 @@ static void String_regionMatches(const u4* args, JValue* pResult)
 
 
     // Now compare the characters
-#if defined(ARCH_IA32)
+#if defined(HAVE__MEMCMP16)
+    bool result = (__memcmp16(thisChars, otherChars, length) == 0);
+#elif defined(ARCH_IA32)
     // Each Java char is 2 bytes
     int numBytes = length * 2;
 
     // For x86 we can use the SSE optimized memcmp
     bool result = (memcmp(thisChars, otherChars, numBytes) == 0);
-#elif defined(HAVE__MEMCMP16)
-    bool result = (__memcmp16(thisChars, otherChars, length) == 0);
 #else
     // Eagerly set regionMatches return value to true unless otherwise proven
     bool result = true;
-- 
1.7.4.1

