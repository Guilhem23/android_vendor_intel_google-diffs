From f234e385002d43cec677c0525a917c05f885f845 Mon Sep 17 00:00:00 2001
From: Vladimir Kostyukov <vladimir.kostyukov@intel.com>
Date: Thu, 5 Dec 2013 14:27:29 +0700
Subject: Dalvik: A correct ASSERT statement for checking class-object size

BZ: 154418

The java.lang.Class class has been alerted with two new fields:
'dexClassDefIndex' and 'dexIndicesInitialized'. So the total number
of instance fields in java.lang.Class is four. It's still enough
four u4 slots for storring all the fields in 'instanceData' member
of ClassObject structure. Thus, in order to fix the failed ASSERT
statement, we can safely change it's conditional operator from '<'
to '<='. This does not break any of ASSERT's logic (i.e., there is
nothing wrong with storing 24 bytes in 24-byte memory).

Change-Id: Ic2f7bbd9c55029a8e6ef4275f588c2f669ae5d0f
Category: device enablement
Domain: AOSP.Dalvik-Runtime
Origin: upstream https://android.googlesource.com/platform/manifest
Upstream-Candidate: yes
Signed-off-by: Vladimir Kostyukov <vladimir.kostyukov@intel.com>
---
 vm/oo/Class.cpp |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/vm/oo/Class.cpp b/vm/oo/Class.cpp
index a75792a..0a4eed9 100644
--- a/vm/oo/Class.cpp
+++ b/vm/oo/Class.cpp
@@ -3816,7 +3816,7 @@ static bool computeFieldOffsets(ClassObject* clazz)
      * We map a C struct directly on top of java/lang/Class objects.  Make
      * sure we left enough room for the instance fields.
      */
-    assert(!dvmIsTheClassClass(clazz) || (size_t)fieldOffset <
+    assert(!dvmIsTheClassClass(clazz) || (size_t)fieldOffset <=
         OFFSETOF_MEMBER(ClassObject, instanceData) + sizeof(clazz->instanceData));
 
     clazz->objectSize = fieldOffset;
-- 
1.7.4.1

