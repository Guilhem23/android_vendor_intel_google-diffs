From e251183b2f73b4ec4c197548c4832b472fa3b3bf Mon Sep 17 00:00:00 2001
From: Serguei Katkov <serguei.i.katkov@intel.com>
Date: Thu, 9 Jan 2014 18:43:48 +0700
Subject: Dalvik: Safe accumulation check for vectorization is broken

BZ: 162412

haveSafeAccumulationHelper does not report seen VR correctly.
Actually it always report that VR was not seen.
The patch fixes that.

Change-Id: I1a26998d9b3b2a072ff1ff8795140b419fa7e71e
Category: device enablement
Domain: AOSP.Dalvik-Compiler-ME
Origin: internal
Upstream-Candidate: no, need rework
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/Vectorization.cpp |   28 ++++++----------------------
 1 files changed, 6 insertions(+), 22 deletions(-)

diff --git a/vm/compiler/Vectorization.cpp b/vm/compiler/Vectorization.cpp
index 0a2729c..9d5ad33 100644
--- a/vm/compiler/Vectorization.cpp
+++ b/vm/compiler/Vectorization.cpp
@@ -1235,10 +1235,6 @@ static bool haveSafeAccumulationHelper (CompilationUnit *cUnit, BytecodeExpressi
     bool sawVRLeft = false;
     bool sawVRRight = false;
 
-    //VRs for left/right sides of the expression
-    int lhsVR = -1;
-    int rhsVR = -1;
-
     if (exp->getExpressionKind() == ExpKind_Invalid)
     {
         //This is not a failure
@@ -1303,7 +1299,8 @@ static bool haveSafeAccumulationHelper (CompilationUnit *cUnit, BytecodeExpressi
 
     if (lhs != 0 && lhs->isVirtualRegister() == true)
     {
-        lhsVR = dvmExtractSSARegister (cUnit, static_cast<VirtualRegister *>(lhs)->getLowSSAReg());
+        int lhsVR = dvmExtractSSARegister (cUnit, static_cast<VirtualRegister *>(lhs)->getLowSSAReg());
+        sawVRLeft = lhsVR == VR;
     }
 
     //Check the right side, if exist
@@ -1324,35 +1321,22 @@ static bool haveSafeAccumulationHelper (CompilationUnit *cUnit, BytecodeExpressi
 
         if (rhs != 0 && rhs->isVirtualRegister() == true)
         {
-            rhsVR = dvmExtractSSARegister (cUnit, static_cast<VirtualRegister *>(rhs)->getLowSSAReg());
+            int rhsVR = dvmExtractSSARegister (cUnit, static_cast<VirtualRegister *>(rhs)->getLowSSAReg());
+            sawVRRight = rhsVR == VR;
         }
     }
 
     //If this is not an Add, neither this or any of the children should have our VR
     if (exp->getExpressionKind() != ExpKind_Add)
     {
-        if (lhsVR == VR || rhsVR == VR || sawVRLeft == true || sawVRRight == true)
+        if (sawVRLeft == true || sawVRRight == true)
         {
             didFail = true;
         }
     }
     else
     {
-        //Check the remaining cases in which we can see the VR twice
-        //Check both expressions here
-        if (lhsVR == VR && rhsVR == VR)
-        {
-            didFail = true;
-        }
-
-        //Check this VR and right child
-        if (lhsVR == VR && sawVRRight == true)
-        {
-            didFail = true;
-        }
-
-        //Check this VR and left child
-        if (rhsVR == VR && sawVRLeft == true)
+        if (sawVRLeft == true && sawVRRight == true)
         {
             didFail = true;
         }
-- 
1.7.4.1

