From eaa4062ff2c4334dcde03b67718b3789382cb79a Mon Sep 17 00:00:00 2001
From: Yixin Shou <yixin.shou@intel.com>
Date: Tue, 25 Sep 2012 04:55:32 -0700
Subject: Dalvik: Add math.min inlining and fix math.min and math.max inlining implementation

BZ: 75820

This patch added math.min inlining implementation and fixed the problem
in math.min and math.max inlining implementation where register for
virtual register is wrongly modified.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-CG
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: I29d5f2bad177f86cd1cf5e062768179dc0d76629
Orig-MCG-Change-Id: Ib4b3efca8ec47d854485efa6e4eb3e49d19a924e
Signed-off-by: Yixin Shou <yixin.shou@intel.com>
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/codegen/x86/BytecodeVisitor.cpp |   13 +++++++++++++
 vm/compiler/codegen/x86/LowerInvoke.cpp     |    9 +++++++++
 2 files changed, 22 insertions(+), 0 deletions(-)

diff --git a/vm/compiler/codegen/x86/BytecodeVisitor.cpp b/vm/compiler/codegen/x86/BytecodeVisitor.cpp
index 7164228..8e66032 100644
--- a/vm/compiler/codegen/x86/BytecodeVisitor.cpp
+++ b/vm/compiler/codegen/x86/BytecodeVisitor.cpp
@@ -5210,6 +5210,19 @@ int getTempRegInfo(TempRegInfo* infoArray) { //returns an array of TempRegInfo
                 infoArray[0].regNum = 1;
                 infoArray[0].refCount = 4;
                 infoArray[0].physicalType = LowOpndRegType_gp;
+                infoArray[0].shareWithVR = false;
+                infoArray[1].regNum = 2;
+                infoArray[1].refCount = 3;
+                infoArray[1].physicalType = LowOpndRegType_gp;
+                infoArray[2].regNum = 3;
+                infoArray[2].refCount = 2;
+                infoArray[2].physicalType = LowOpndRegType_gp;
+                return 3;
+            case INLINE_MATH_MIN_INT:
+                infoArray[0].regNum = 1;
+                infoArray[0].refCount = 4;
+                infoArray[0].physicalType = LowOpndRegType_gp;
+                infoArray[0].shareWithVR = false;
                 infoArray[1].regNum = 2;
                 infoArray[1].refCount = 3;
                 infoArray[1].physicalType = LowOpndRegType_gp;
diff --git a/vm/compiler/codegen/x86/LowerInvoke.cpp b/vm/compiler/codegen/x86/LowerInvoke.cpp
index 80d8b0f..3e29547 100644
--- a/vm/compiler/codegen/x86/LowerInvoke.cpp
+++ b/vm/compiler/codegen/x86/LowerInvoke.cpp
@@ -1044,6 +1044,15 @@ int op_execute_inline(bool isRange) {
             get_self_pointer(3, false);
             move_reg_to_mem(OpndSize_32, 1, false, offsetof(Thread, interpSave.retval), 3, false);
             return 0;
+        case INLINE_MATH_MIN_INT:
+            get_virtual_reg(vC, OpndSize_32, 1, false);
+            get_virtual_reg(vD, OpndSize_32, 2, false);
+            compare_reg_reg(1, false, 2, false);
+            conditional_move_reg_to_reg(OpndSize_32, Condition_LE, 2,
+                                        false/*src*/, 1, false/*dst*/);
+            get_self_pointer(3, false);
+            move_reg_to_mem(OpndSize_32, 1, false, offsetof(Thread, interpSave.retval), 3, false);
+            return 0;
         case INLINE_MATH_ABS_FLOAT:
             get_virtual_reg(vC, OpndSize_32, 1, false);
             alu_binary_imm_reg(OpndSize_32, and_opc, 0x7fffffff, 1, false);
-- 
1.7.4.1

