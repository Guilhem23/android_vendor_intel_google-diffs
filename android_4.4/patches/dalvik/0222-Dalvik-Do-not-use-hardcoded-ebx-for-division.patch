From 1ca3dfe939ce07e9ca2853f34329b2859038881b Mon Sep 17 00:00:00 2001
From: Razvan A Lupusoru <razvan.a.lupusoru@intel.com>
Date: Mon, 8 Jul 2013 16:48:54 -0700
Subject: Dalvik: Do not use hardcoded ebx for division

BZ: 122044

The div-int implementation can use any 8-bit register. By forcing
usage of hardcoded ebx, it causes unnecessary register pressure.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-CG
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: Ia66a49d528b91b3a0d6f17608d7b3c5e2bc15845
Orig-MCG-Change-Id: I786dc1a5ad1caceb03273fd571cc9da3c8958e2b
Signed-off-by: Razvan A Lupusoru <razvan.a.lupusoru@intel.com>
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/codegen/x86/BytecodeVisitor.cpp |    5 +++--
 vm/compiler/codegen/x86/LowerAlu.cpp        |    4 ++--
 2 files changed, 5 insertions(+), 4 deletions(-)

diff --git a/vm/compiler/codegen/x86/BytecodeVisitor.cpp b/vm/compiler/codegen/x86/BytecodeVisitor.cpp
index 7bf0a5f..068c806 100644
--- a/vm/compiler/codegen/x86/BytecodeVisitor.cpp
+++ b/vm/compiler/codegen/x86/BytecodeVisitor.cpp
@@ -5548,9 +5548,10 @@ int getTempRegInfo(TempRegInfo* infoArray, const MIR * currentMIR) { //returns a
             infoArray[4].regNum = 3;
             infoArray[4].refCount = 4; //define, use
             infoArray[4].physicalType = LowOpndRegType_gp;
-            infoArray[5].regNum = PhysicalReg_EBX;
+            infoArray[5].regNum = 4;
             infoArray[5].refCount = 2; //define, use
-            infoArray[5].physicalType = LowOpndRegType_gp | LowOpndRegType_hard;
+            infoArray[5].physicalType = LowOpndRegType_gp;
+            infoArray[5].is8Bit = true;
             if(inst_op == OP_DIV_INT || inst_op == OP_DIV_INT_2ADDR) {
                 infoArray[1].refCount = 11;
                 infoArray[2].refCount = 9;
diff --git a/vm/compiler/codegen/x86/LowerAlu.cpp b/vm/compiler/codegen/x86/LowerAlu.cpp
index 67952e8..754b1d0 100644
--- a/vm/compiler/codegen/x86/LowerAlu.cpp
+++ b/vm/compiler/codegen/x86/LowerAlu.cpp
@@ -961,8 +961,8 @@ int common_div_rem_int(bool isRem, int vA, int v1, int v2) {
     goToState(3);
     if (insertLabel(".common_div_rem_int_8", true) == -1)
         return -1;
-    move_reg_to_reg(OpndSize_32, 2, false, PhysicalReg_EBX, true);
-    alu_unary_reg(OpndSize_8, div_opc, PhysicalReg_EBX, true);
+    move_reg_to_reg(OpndSize_32, 2, false, 4, false);
+    alu_unary_reg(OpndSize_8, div_opc, 4, false);
     if (isRem) {
         move_reg_to_reg(OpndSize_32, PhysicalReg_EAX, true, PhysicalReg_EDX, true);
         alu_binary_imm_reg(OpndSize_32, shr_opc, 8, PhysicalReg_EDX, true);
-- 
1.7.4.1

