From aa4a5403564a716c3da75913bded1b875a7dc116 Mon Sep 17 00:00:00 2001
From: Serguei Katkov <serguei.i.katkov@intel.com>
Date: Tue, 6 Aug 2013 13:04:04 +0700
Subject: Dalvik: Fix the findReplacement for Invariant Removal optimization

BZ: 128313

findReplacement uses coloring for selecting replacement for hoisted MIR.
It does not take into account that register corresponding to some color
can be re-used and corresponds now to other color.
The patch updates the coloring table after re-use of the register.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-ME
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: I2ff038b37cf4dd51cf81fdb46c1ccfa2d3c5f382
Orig-MCG-Change-Id: Ica9a1136c77574bb4478488376142a3f3e52100d
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
Reviewed-on: http://android.intel.com:8080/125080
Reviewed-by: Chen, Dong-Yuan <dong-yuan.chen@intel.com>
Tested-by: Chen, Dong-Yuan <dong-yuan.chen@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/InvariantRemoval.cpp |   35 ++++++++++++++++++++++++++---------
 1 files changed, 26 insertions(+), 9 deletions(-)

diff --git a/vm/compiler/InvariantRemoval.cpp b/vm/compiler/InvariantRemoval.cpp
index 1034e92..8e6b1ca 100644
--- a/vm/compiler/InvariantRemoval.cpp
+++ b/vm/compiler/InvariantRemoval.cpp
@@ -155,6 +155,9 @@ static void findInvariantsInPeel (CompilationUnit *cUnit, std::vector<MIR *> &se
 
 /**
  * @brief Find a replacement register for the definitions of a given MIR instruction
+ * @details TODO we can a bit smarter here, if the color corresponding to our MIR is in
+ *          some replacement register we can use this register and eliminate the hoisting
+            of this MIR.
  * @param cUnit the CompilationUnit
  * @param mir the MIR instruction
  * @param current the current scratch register being used
@@ -241,27 +244,24 @@ static bool findReplacement (CompilationUnit *cUnit, MIR* mir, int &current, int
                     chain = chain->nextUse;
                 }
 
+                //Get replacement
+                int def = ssaRep->defs[i];
+                int replacement = replacements[def];
+
                 //If localReUseIt is false, break
                 if (localReUseIt == false)
                 {
                     //Mark it as not available
-                    available[replacements[ssaRep->defs[i]]] = false;
+                    available[replacement] = false;
                 }
                 else
                 {
-                    //Do we have an entry for it yet ?
-                    int def = ssaRep->defs[i];
-
-                    //Get replacement
-                    int replacement = replacements[def];
-
                     //Now see if it has an entry?
                     if (available.find (replacement) == available.end ())
                     {
                         //Mark it as available
-                        available[localValueNumberingDef[start->localValueNumber]] = true;
+                        available[replacement] = true;
                     }
-
                 }
             }
         }
@@ -279,6 +279,23 @@ static bool findReplacement (CompilationUnit *cUnit, MIR* mir, int &current, int
                 //Add to replacement
                 replacements[def] = reg;
 
+                // We are re-using reg so we need to update color table then
+                for (std::map<int, int>::iterator it = localValueNumberingDef.begin (); it != localValueNumberingDef.end ();)
+                {
+                    if (it->second == reg)
+                    {
+                        localValueNumberingDef.erase (it++);
+                    }
+                    else
+                    {
+                        it++;
+                    }
+                }
+
+                // Set new color
+                int color = mir->localValueNumber;
+                localValueNumberingDef[color] = reg;
+
                 //Report success
                 return true;
             }
-- 
1.7.4.1

