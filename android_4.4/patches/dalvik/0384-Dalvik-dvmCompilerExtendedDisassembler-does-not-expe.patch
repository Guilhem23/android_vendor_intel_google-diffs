From dc74823da4fcfd5f5eef23ea07e779f77c1d8679 Mon Sep 17 00:00:00 2001
From: Serguei Katkov <serguei.i.katkov@intel.com>
Date: Thu, 24 Oct 2013 17:53:41 +0700
Subject: Dalvik: dvmCompilerExtendedDisassembler does not expect that mir can be null

BZ: 147112

dvmCompilerExtendedDisassembler utility does not expect that mir and cUnit can be null
while it is directly stated in a comment to function.

The case with opcode kMirOpPackedSet should check this.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-ME
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: I12d4a230085a6f3c1421fc623409b4420e4a1603
Orig-MCG-Change-Id: I57b60588c2dbcaa79be5e83049f86fcee36bcf7b
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/Dataflow.cpp |   18 ++++++++++++++----
 1 files changed, 14 insertions(+), 4 deletions(-)

diff --git a/vm/compiler/Dataflow.cpp b/vm/compiler/Dataflow.cpp
index ea4f823..8831489 100644
--- a/vm/compiler/Dataflow.cpp
+++ b/vm/compiler/Dataflow.cpp
@@ -1266,10 +1266,20 @@ void dvmCompilerExtendedDisassembler (const CompilationUnit *cUnit,
             snprintf (buffer, len, "kMirOpMove128b xmm%d = xmm%d", insn->vA, insn->vB);
             break;
         case kMirOpPackedSet:
-            snprintf (buffer, len, "kMirOpPackedSet xmm%d = %s, size %d",
-                      insn->vA,
-                      getSSAName (cUnit, mir->ssaRep->uses[0], operand0),
-                      insn->vC);
+            if (cUnit != NULL && mir != NULL && mir->ssaRep != NULL)
+            {
+                snprintf (buffer, len, "kMirOpPackedSet xmm%d = %s, size %d",
+                          insn->vA,
+                          getSSAName (cUnit, mir->ssaRep->uses[0], operand0),
+                          insn->vC);
+            }
+            else
+            {
+                snprintf (buffer, len, "kMirOpPackedSet xmm%d = v%d, size %d",
+                          insn->vA,
+                          insn->vB,
+                          insn->vC);
+            }
             break;
         case kMirOpConst128b:
             snprintf (buffer, len, "kMirOpConst128DW xmm%d = %x, %x, %x, %x", insn->vA, insn->arg[0], insn->arg[1], insn->arg[2], insn->arg[3]);
-- 
1.7.4.1

