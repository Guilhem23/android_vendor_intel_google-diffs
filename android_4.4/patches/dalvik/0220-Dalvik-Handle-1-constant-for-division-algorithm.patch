From 6cf0c0dab47e975b5abd2ee180d4ef37262b0808 Mon Sep 17 00:00:00 2001
From: Razvan A Lupusoru <razvan.a.lupusoru@intel.com>
Date: Mon, 8 Jul 2013 16:34:12 -0700
Subject: Dalvik: Handle -1 constant for division algorithm

BZ: 122039

The reference counting which supports algorithm that handles multiplication
optimization for division, is not supported correctly for the -1 divisor case.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-CG
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: I4056290450036b69c02cd17ef982b7b24d8e26ce
Orig-MCG-Change-Id: Idd596361c53968b4f6932f6c62d9f68135398e67
Signed-off-by: Razvan A Lupusoru <razvan.a.lupusoru@intel.com>
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/codegen/x86/BytecodeVisitor.cpp |   13 ++++++++-----
 1 files changed, 8 insertions(+), 5 deletions(-)

diff --git a/vm/compiler/codegen/x86/BytecodeVisitor.cpp b/vm/compiler/codegen/x86/BytecodeVisitor.cpp
index 2853d09..7bf0a5f 100644
--- a/vm/compiler/codegen/x86/BytecodeVisitor.cpp
+++ b/vm/compiler/codegen/x86/BytecodeVisitor.cpp
@@ -5477,8 +5477,14 @@ int getTempRegInfo(TempRegInfo* infoArray, const MIR * currentMIR) { //returns a
         }else {
             v2 = currentMIR->dalvikInsn.vB;
         }
+
+        //Check if the virtual register is a constant because if it is we can figure out result without division
         isConst = isVirtualRegConstant(v2, LowOpndRegType_gp, &tmpvalue, false);
-        if (isConst > 0) {
+
+        //If we have a constant, we can use a multiplication approach instead.
+        //However, we currently do not handle case of -1 constant so we take the divide path.
+        if (isConst == VR_IS_CONSTANT && tmpvalue != -1)
+        {
             int magic, shift;
             calculateMagicAndShift(tmpvalue, &magic, &shift);
             if (tmpvalue == 1) {
@@ -5490,9 +5496,7 @@ int getTempRegInfo(TempRegInfo* infoArray, const MIR * currentMIR) { //returns a
                 infoArray[1].shareWithVR = false;
                 infoArray[1].refCount = 2;
                 return 2;
-            }else if(tmpvalue == -1) {
-                //TODO: Add case for divisor -1, now using the origin algorithm
-            }else {
+            } else {
                 infoArray[0].regNum = 2;
                 infoArray[0].physicalType = LowOpndRegType_gp;
                 infoArray[1].regNum = PhysicalReg_EAX;
@@ -5556,7 +5560,6 @@ int getTempRegInfo(TempRegInfo* infoArray, const MIR * currentMIR) { //returns a
             }
             return 6;
          }
-
     case OP_ADD_INT_LIT16:
     case OP_MUL_INT_LIT16:
     case OP_AND_INT_LIT16:
-- 
1.7.4.1

