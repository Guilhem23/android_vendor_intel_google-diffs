From 76633a0ec8057d3046f09b895bb1e1280c5c75ec Mon Sep 17 00:00:00 2001
From: Serguei Katkov <serguei.i.katkov@intel.com>
Date: Thu, 24 Oct 2013 14:39:38 +0700
Subject: Dalvik: Invariant Removal should pay attention to wide defs

BZ: 147152

Invariant removal optimization works with wide def as it is
non-wide def. However special checks are required for wide defs.
for example VR can be used in the loop as wide and high part of
this wide register can be used in this loop separately.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-ME
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: Ie85b768a25126c1217aed1b309e91c911a117495
Orig-MCG-Change-Id: I255e5b3a720f81c01a758b9a4bf8b3fa1491a95a
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/InvariantRemoval.cpp |   14 ++++++++++++++
 1 files changed, 14 insertions(+), 0 deletions(-)

diff --git a/vm/compiler/InvariantRemoval.cpp b/vm/compiler/InvariantRemoval.cpp
index 8851ff9..dc4a3e2 100644
--- a/vm/compiler/InvariantRemoval.cpp
+++ b/vm/compiler/InvariantRemoval.cpp
@@ -486,6 +486,20 @@ static void hoistInvariants (CompilationUnit *cUnit, LoopInformation *loopInfo,
             needMove = dvmCompilerIsSsaLiveOutOfBB (cUnit, loopInfo->getEntryBlock (),
                     mirInLoop->ssaRep->defs[0]) == true;
 
+            //Now we need to do an additional check if def is wide then both defs should
+            //reach the end of BB or not reach. If one reaches but another does not then
+            //we should fail
+            if (mirInLoop->ssaRep->numDefs == 2)
+            {
+                bool needMoveWide = dvmCompilerIsSsaLiveOutOfBB (cUnit, loopInfo->getEntryBlock (),
+                        mirInLoop->ssaRep->defs[1]) == true;
+
+                if (needMoveWide != needMove)
+                {
+                    continue;
+                }
+            }
+
             //So since our selection looked through the peel, we should have a mapping between the
             //ssa define of peeled MIR and the replacement temporary we want to use.
             int oldSsa = peeledMir->ssaRep->defs[0];
-- 
1.7.4.1

