From 5818e6f3d57a8bb33f3d9090bf14cfa5cd3e9544 Mon Sep 17 00:00:00 2001
From: Jean Christophe Beyler <jean.christophe.beyler@intel.com>
Date: Wed, 24 Apr 2013 10:58:28 -0700
Subject: Dalvik: dvmCompilerInsertPreBackward Definition Badly Placed

BZ: 103320

The definition of dvmCompilerInsertPreBackward is in the wrong header file.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-ME
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: I013a248a963adfb053b5de9da7095e6af490f5d3
Orig-MCG-Change-Id: Ib20d883539f26d81311009537b2643d62a0828a4
Signed-off-by: Jean Christophe Beyler <jean.christophe.beyler@intel.com>
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/BBOptimization.h |   12 ------------
 vm/compiler/Loop.h           |   12 ++++++++++++
 2 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/vm/compiler/BBOptimization.h b/vm/compiler/BBOptimization.h
index 48cce52..e090c8e 100644
--- a/vm/compiler/BBOptimization.h
+++ b/vm/compiler/BBOptimization.h
@@ -31,18 +31,6 @@ class Pass;
 bool dvmCompilerMergeBasicBlocks (CompilationUnit *cUnit, BasicBlock *bb);
 
 /**
- * @brief Inserts a basic block before Backward Chaining Cell.
- * @details The newly inserted basic blocks takes the write back requests and
- * MIRs from chaining cell in order to help backend which cannot handle
- * Backward Chaining Cell like a bytecode block. It also ensures that the
- * newly inserted block is the taken branch, so if the backward was fallthrough
- * it flips the condition.
- * @param cUnit the CompilationUnit
- * @param currentPass the Pass
- */
-void dvmCompilerInsertPreBackward (CompilationUnit *cUnit, Pass *currentPass);
-
-/**
  * @brief Form the loop by inserting pre/post blocks and backward branches for loops
  * @param cUnit the CompilationUnit
  * @param bb the BasicBlock
diff --git a/vm/compiler/Loop.h b/vm/compiler/Loop.h
index efd692a..f5e2ada 100644
--- a/vm/compiler/Loop.h
+++ b/vm/compiler/Loop.h
@@ -92,4 +92,16 @@ void dvmCompilerDumpConstants (CompilationUnit *cUnit);
  */
 void dvmCompilerDumpHoistedChecks (CompilationUnit *cUnit);
 #endif
+
+/**
+ * @brief Inserts a basic block before Backward Chaining Cell.
+ * @details The newly inserted basic blocks takes the write back requests and
+ * MIRs from chaining cell in order to help backend which cannot handle
+ * Backward Chaining Cell like a bytecode block. It also ensures that the
+ * newly inserted block is the taken branch, so if the backward was fallthrough
+ * it flips the condition.
+ * @param cUnit the CompilationUnit
+ * @param currentPass the Pass
+ */
+void dvmCompilerInsertPreBackward (CompilationUnit *cUnit, Pass *currentPass);
 #endif  // DALVIK_VM_LOOP_H_
-- 
1.7.4.1

