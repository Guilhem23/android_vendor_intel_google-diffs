From 3c3dba8827d94f875c710ea85f43f835e46c812a Mon Sep 17 00:00:00 2001
From: Serguei Katkov <serguei.i.katkov@intel.com>
Date: Fri, 16 Aug 2013 15:27:48 +0700
Subject: Dalvik: Merge block optimization should not merge loop pre-header

BZ: 132497

Loop pre-header is very important because during chaining jump from
interpreter comes to pre-header, so pre-header should no be merged
with its predecessor. The merge blocks pass is updated to treat the
preheader block specially.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-ME
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: Iaaba415bc1484acd5c27c690be91f55b88aaf706
Orig-MCG-Change-Id: I4596b5fd6eda090f6196e716ee3196d411cc8e15
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
Reviewed-on: http://android.intel.com:8080/125842
Reviewed-by: Lupusoru, Razvan A <razvan.a.lupusoru@intel.com>
Reviewed-by: Provodin, Vitaly A <vitaly.a.provodin@intel.com>
Reviewed-by: Beyler, Jean Christophe <jean.christophe.beyler@intel.com>
Reviewed-by: Chen, Dong-Yuan <dong-yuan.chen@intel.com>
Tested-by: Chen, Dong-Yuan <dong-yuan.chen@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
---
 vm/compiler/BBOptimization.cpp |   28 ++++++++++++++++++++++++++--
 1 files changed, 26 insertions(+), 2 deletions(-)

diff --git a/vm/compiler/BBOptimization.cpp b/vm/compiler/BBOptimization.cpp
index 54ee84f..2fe486c 100644
--- a/vm/compiler/BBOptimization.cpp
+++ b/vm/compiler/BBOptimization.cpp
@@ -21,6 +21,18 @@
 #include "LoopOpt.h"
 #include "BBOptimization.h"
 
+/**
+ * @brief Helper function to dvmCompilerMergeBasicBlocks
+ *        to check whether a BB a pre-header of any loop
+ * @param info loop information to check
+ * @param data BB to check.
+ * @return false if BB is a pre header
+ */
+static bool isBBnotPreHeader (LoopInformation *info, void *data)
+{
+    return info->getPreHeader () != static_cast<BasicBlock*>(data);
+}
+
 bool dvmCompilerMergeBasicBlocks (CompilationUnit *cUnit, BasicBlock *bb)
 {
     //We only merge blocks if they are kDalvikByteCode and not hidden
@@ -68,8 +80,20 @@ bool dvmCompilerMergeBasicBlocks (CompilationUnit *cUnit, BasicBlock *bb)
         return false;
     }
 
-    //In case the first block has instructions, we need to check further if we can do the merge.
-    if (bb->lastMIRInsn != 0)
+    // If child a pre-loop BB we must not merge it even if it is empty!
+    if (cUnit->loopInformation != 0)
+    {
+        bool childIsNotPreHeader = cUnit->loopInformation->iterate (isBBnotPreHeader, child);
+        if (childIsNotPreHeader == false)
+        {
+            //No change to the BasicBlock
+            return false;
+        }
+    }
+
+    //We allow merge if one of the blocks has no instructions or if both have no instructions.
+    //In case when both have instructions, we need to check further if we can do the merge.
+    if (bb->lastMIRInsn != 0 && child->firstMIRInsn != 0)
     {
         MIR *lastInsn = bb->lastMIRInsn;
 
-- 
1.7.4.1

