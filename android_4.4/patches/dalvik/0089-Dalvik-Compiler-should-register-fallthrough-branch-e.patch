From 37ac894774c792531daec3f689fff2685e9cf41c Mon Sep 17 00:00:00 2001
From: Vladimir Kostyukov <vladimir.kostyukov@intel.com>
Date: Fri, 1 Mar 2013 18:14:56 +0700
Subject: Dalvik: Compiler should register fallthrough branch even if the last opcode is extended

BZ: 89358

There is a bug in compiler's codegen that leads to assert failure in libdex. The thing is the compiler
is trying to get control flow flags of MIR extended opcode to determinate is there a  fallthrough branch
that should be registered. The assert failure happens because 'extended opcode >= kNumPackedOpcodes'.
We know that we have to register any fallthrough branch except cases when the last opcode is IF, GOTO
or BREAKPOINT. According to this logic we also should register fallthrough branch if the last opcode
is extended.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-CG
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: I88fe0e00739c42a9a7658b1412ee751a19dc6e76
Orig-MCG-Change-Id: I6f05788ef43f85c23f869a039538268c1247cdda
Signed-off-by: Vladimir Kostyukov <vladimir.kostyukov@intel.com>
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/codegen/x86/CodegenInterface.cpp |   11 +++++++++--
 1 files changed, 9 insertions(+), 2 deletions(-)

diff --git a/vm/compiler/codegen/x86/CodegenInterface.cpp b/vm/compiler/codegen/x86/CodegenInterface.cpp
index 34e5136..658e37a 100644
--- a/vm/compiler/codegen/x86/CodegenInterface.cpp
+++ b/vm/compiler/codegen/x86/CodegenInterface.cpp
@@ -1360,8 +1360,15 @@ static bool generateCode (CompilationUnit *cUnit, BasicBlock *bb, BasicBlock **n
     if (lastInsn != 0)
     {
         Opcode opcode = lastInsn->dalvikInsn.opcode;
-        //We don't care about instructions that can branch in general
-        shouldRegister = ((dexGetFlagsFromOpcode(opcode) & kInstrCanBranch) == 0);
+
+        //First off, we always register it if it's an extended MIR because dexGetFlagsFromOpcode can't handle it
+        shouldRegister = (opcode >= static_cast<Opcode> (kMirOpFirst));
+        if (shouldRegister == false)
+        {
+            //We don't care about instructions that can branch in general
+            //It's safe to call dexGetFlagsFromOpcode, opcode can't be extended anymore
+            shouldRegister = ((dexGetFlagsFromOpcode(opcode) & kInstrCanBranch) == 0);
+        }
     }
 
     //If need be, register it: handleFallThroughBranch will do the rest
-- 
1.7.4.1

