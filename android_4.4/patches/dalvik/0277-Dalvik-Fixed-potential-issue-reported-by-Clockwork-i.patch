From cd8007d1028d2c2f243729c63fd23792f0152eeb Mon Sep 17 00:00:00 2001
From: aleksey.v.ignatenko <avignate@lab-dyn-116-248.ins.intel.com>
Date: Thu, 8 Aug 2013 17:35:31 +0700
Subject: Dalvik: Fixed potential issue reported by Clockwork in hoisted range check algorithm

BZ: 129465

Fixed the issue reported by Clockwork. The problem is in ivInfoOld access which potentially can be NULL.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-ME
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: Ifc19aad175b9c67ebf887821a168f479fc26fa94
Orig-MCG-Change-Id: I533def49ffa9ac03e92a62c01b0baabfdf41c2ba
Signed-off-by: aleksey.v.ignatenko <avignate@lab-dyn-116-248.ins.intel.com>
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
Reviewed-on: http://android.intel.com:8080/125083
Reviewed-by: Chen, Dong-Yuan <dong-yuan.chen@intel.com>
Tested-by: Chen, Dong-Yuan <dong-yuan.chen@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/Dataflow.cpp |   10 +++++++---
 1 files changed, 7 insertions(+), 3 deletions(-)

diff --git a/vm/compiler/Dataflow.cpp b/vm/compiler/Dataflow.cpp
index 3051280..fc2ab22 100644
--- a/vm/compiler/Dataflow.cpp
+++ b/vm/compiler/Dataflow.cpp
@@ -2557,8 +2557,7 @@ bool dvmCompilerFindInductionVariablesHelper(CompilationUnit *cUnit,
                 if (cIsConstant == true) {
                     unsigned int i;
                     // in the new framework we don't use bit vector but liner scan on the ivList instead
-                    InductionVariableInfo *ivInfo = (InductionVariableInfo *)
-                        dvmCompilerNew(sizeof(InductionVariableInfo), false);
+                    InductionVariableInfo *ivInfo = NULL;
                     InductionVariableInfo *ivInfoOld = NULL;
 
                     for (i = 0; i < ivList.numUsed; i++) {
@@ -2569,7 +2568,12 @@ bool dvmCompilerFindInductionVariablesHelper(CompilationUnit *cUnit,
                     }
 
                     /* Guaranteed to find an element */
-                    assert(i < ivList.numUsed);
+                    /* Paranoid */
+                    if (ivInfoOld == NULL) {
+                        continue;
+                    }
+
+                    ivInfo = (InductionVariableInfo *) dvmCompilerNew(sizeof(InductionVariableInfo), false);
 
                     ivInfo->ssaReg = mir->ssaRep->defs[0];
                     ivInfo->basicSSAReg = ivInfoOld->basicSSAReg;
-- 
1.7.4.1

