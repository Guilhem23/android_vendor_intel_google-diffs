From 9c244082ae9971b2933983466be0a48aa04fe7e6 Mon Sep 17 00:00:00 2001
From: Dong-Yuan Chen <dong-yuan.chen@intel.com>
Date: Sat, 17 Aug 2013 22:20:03 -0700
Subject: Dalvik: PCG: Add missed jit error flag setting when code cache become full

BZ: 129332

In some cases the code cache full detection did not set jit error flag.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-CG
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: I8ec22001e07c1bfcfc8518cd02b0804cc554d12b
Orig-MCG-Change-Id: I2d0247cd5dbf13ede1e983c5ae646ca9cfade80f
Signed-off-by: Dmitry Petrochenko <dmitry.petrochenko@intel.com>
Reviewed-on: http://android.intel.com:8080/125254
Reviewed-by: Beyler, Jean Christophe <jean.christophe.beyler@intel.com>
Reviewed-by: Kreitzer, David L <david.l.kreitzer@intel.com>
Reviewed-by: Lupusoru, Razvan A <razvan.a.lupusoru@intel.com>
Reviewed-by: Hartley, Timothy D <timothy.d.hartley@intel.com>
Reviewed-by: lab_aqa <lab_aqa@intel.com>
Reviewed-by: Semukhina, Elena V <elena.v.semukhina@intel.com>
Reviewed-by: Chen, Dong-Yuan <dong-yuan.chen@intel.com>
Tested-by: Chen, Dong-Yuan <dong-yuan.chen@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
Reviewed-on: http://android.intel.com:8080/125997
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 .../codegen/x86/pcg/ChainingCellException.cpp      |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

diff --git a/vm/compiler/codegen/x86/pcg/ChainingCellException.cpp b/vm/compiler/codegen/x86/pcg/ChainingCellException.cpp
index bf1732b..2d244b4 100644
--- a/vm/compiler/codegen/x86/pcg/ChainingCellException.cpp
+++ b/vm/compiler/codegen/x86/pcg/ChainingCellException.cpp
@@ -223,6 +223,7 @@ static uint8_t* dvmCompilerPcgEmitHotChainingCell (CompilationUnitPCG *cUnit,
     // Make sure we don't overflow the code cache
     if (freeSpace < HOT_CC_SIZE)
     {
+        SET_JIT_ERROR(kJitErrorCodeCacheFull);
         return 0;
     }
 
@@ -1150,6 +1151,7 @@ uint8_t *dvmCompilerPcgEmitChainingCells (CompilationUnitPCG *cUnit,
     // padding.  Return 0 if not.
     if (freeSpace < padding + sizeof (pcgChainCellCounts))
     {
+        SET_JIT_ERROR(kJitErrorCodeCacheFull);
         return 0;
     }
     freeSpace -= padding + sizeof (pcgChainCellCounts);
-- 
1.7.4.1

