From e7c650c7507f39d4cb5527226188f8f77e7137b8 Mon Sep 17 00:00:00 2001
From: Jean Christophe Beyler <jean.christophe.beyler@intel.com>
Date: Tue, 9 Jul 2013 11:56:40 -0700
Subject: Dalvik: Backend Option Needs to be Refactored for PCG

BZ: 122342

Backend options need to be refactored so that PCG can play nice with the
rest of the compiler.

Category: device-enablement
Domain: AOSP-Dalvik-Runtime
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: Ia0ffaa3bc10c904da7b51aed7c1e47d13a69abe1
Orig-MCG-Change-Id: I357e7f1845e497f290a2179dee76828a1629e61b
Signed-off-by: Jean Christophe Beyler <jean.christophe.beyler@intel.com>
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/Init.cpp |   10 +++++-----
 vm/Init.h   |    8 ++++----
 2 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/vm/Init.cpp b/vm/Init.cpp
index 4e8342f..28c6ac6 100644
--- a/vm/Init.cpp
+++ b/vm/Init.cpp
@@ -2492,7 +2492,7 @@ void dvmAbort()
  * @param key the key we are looking for
  * @return returns true if key is found
  */
-bool dvmBackendOptionExists (const std::string &key)
+bool dvmBackendOptionExists (const char *key)
 {
     //Find it
     std::map<std::string, std::string>::iterator it = gDvmJit.backendOptions.find (key);
@@ -2507,7 +2507,7 @@ bool dvmBackendOptionExists (const std::string &key)
  * @param value Updates the value parameter if found
  * @return returns true if key is found
  */
-bool dvmExtractBackendOption (const std::string &key, std::string &value)
+bool dvmExtractBackendOption (const char *key, std::string &value)
 {
     //Find it
     std::map<std::string, std::string>::iterator it = gDvmJit.backendOptions.find (key);
@@ -2531,7 +2531,7 @@ bool dvmExtractBackendOption (const std::string &key, std::string &value)
  * @param value Updates the value parameter if found
  * @return returns true if key is found
  */
-bool dvmExtractBackendOption (const std::string &key, const char **value)
+bool dvmExtractBackendOption (const char *key, const char **value)
 {
     //Get key
     std::string svalue;
@@ -2554,7 +2554,7 @@ bool dvmExtractBackendOption (const std::string &key, const char **value)
  * @param value Updates the value parameter if found
  * @return returns true if key is found
  */
-bool dvmExtractBackendOption (const std::string &key, int* value)
+bool dvmExtractBackendOption (const char *key, int* value)
 {
     //Get key
     std::string svalue;
@@ -2578,7 +2578,7 @@ bool dvmExtractBackendOption (const std::string &key, int* value)
     }
     else
     {
-        dvmFprintf (stderr, "Extracting backend option had an issue: %s\n", key.c_str ());
+        dvmFprintf (stderr, "Extracting backend option had an issue: %s\n", key);
 
         //Register failure
         res = false;
diff --git a/vm/Init.h b/vm/Init.h
index 147098a..b883c52 100644
--- a/vm/Init.h
+++ b/vm/Init.h
@@ -74,27 +74,27 @@ int dvmFprintf(FILE* fp, const char* format, ...)
  * Does a backend option exist?
  * Returns if key is found
  */
-bool dvmBackendOptionExists (const std::string &key);
+bool dvmBackendOptionExists (const char *key);
 
 /*
  * Retrieve a backend option as a string
  * Updates the value parameter if found
  * Returns if key is found
  */
-bool dvmExtractBackendOption (const std::string &key, std::string &value);
+bool dvmExtractBackendOption (const char *key, std::string &value);
 
 /*
  * Retrieve a backend option as an char*
  * Updates the value parameter if found
  * Returns if key is found
  */
-bool dvmExtractBackendOption (const std::string &key, const char **value);
+bool dvmExtractBackendOption (const char *key, const char **value);
 
 /*
  * Retrieve a backend option as an integer
  * Updates the value parameter if found
  * Returns if key is found
  */
-bool dvmExtractBackendOption (const std::string &key, int* value);
+bool dvmExtractBackendOption (const char *key, int* value);
 #endif
 #endif  // DALVIK_INIT_H_
-- 
1.7.4.1

