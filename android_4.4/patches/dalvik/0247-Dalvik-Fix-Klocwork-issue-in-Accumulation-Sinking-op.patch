From 9308c66d0c30b4275ed03c5e2b483615272c9b35 Mon Sep 17 00:00:00 2001
From: Serguei Katkov <serguei.i.katkov@intel.com>
Date: Mon, 22 Jul 2013 11:36:07 +0700
Subject: Dalvik: Fix Klocwork issue in Accumulation Sinking optimization

BZ: 124871

Check that Phi node to induction variable cannot be null.
If it is null then just skip this VR from considaration.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-ME
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: I2cc22454f99db94f726bf42fdd52a0f2c1658a14
Orig-MCG-Change-Id: I6c250945dfee0311df6310568bac8a6e0fbfd660
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/AccumulationSinking.cpp |    9 +++++++++
 1 files changed, 9 insertions(+), 0 deletions(-)

diff --git a/vm/compiler/AccumulationSinking.cpp b/vm/compiler/AccumulationSinking.cpp
index ea95ddc..05bbc58 100644
--- a/vm/compiler/AccumulationSinking.cpp
+++ b/vm/compiler/AccumulationSinking.cpp
@@ -448,6 +448,15 @@ static void filterVRs (CompilationUnit *cUnit, LoopInformation *info, std::vecto
         if (info->isAnInductionVariable (cUnit, vr) == false)
         {
             MIR *phi = info->getPhiInstruction (cUnit, vr);
+            // If vr is an induction variable, phi cannot be 0
+            // but if something went wrong, simply don't consider this vr for optimization.
+            // In assert world just stop.
+            assert (phi != 0);
+            if (phi == 0)
+            {
+                continue;
+            }
+
             PositionInWideVR position = getPhiPositionInWideVR (cUnit, phi);
 
             // if it is ambigous position we skip it
-- 
1.7.4.1

