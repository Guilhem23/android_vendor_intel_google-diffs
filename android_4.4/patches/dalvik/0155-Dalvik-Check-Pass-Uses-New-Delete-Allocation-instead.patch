From 998bc1a02c24fde40fff5dd19f78e05525dbb0be Mon Sep 17 00:00:00 2001
From: Jean Christophe Beyler <jean.christophe.beyler@intel.com>
Date: Wed, 24 Apr 2013 10:35:52 -0700
Subject: Dalvik: Check Pass Uses New/Delete Allocation instead of Arena

BZ: 103315

The pass should be using the arena instead of the new/delete system

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-ME
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: Idf6b677625c774e2d014a5eab7dcd28829feb227
Orig-MCG-Change-Id: I24b88c1cc3b7555cc9bd6ad772988b256e381d6b
Signed-off-by: Jean Christophe Beyler <jean.christophe.beyler@intel.com>
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/Checks.cpp |    9 +++++----
 1 files changed, 5 insertions(+), 4 deletions(-)

diff --git a/vm/compiler/Checks.cpp b/vm/compiler/Checks.cpp
index adc82df..0ddb41c 100644
--- a/vm/compiler/Checks.cpp
+++ b/vm/compiler/Checks.cpp
@@ -231,8 +231,10 @@ void dvmCompilerStartCheckRemoval (CompilationUnit *cUnit, Pass *curPass)
     }
 
     //STEP 1: Initialize any thing for the pass data here
-    SRemoveData *data = new SRemoveData;
-    curPass->setData (static_cast<void *> (data));
+    SRemoveData *data = 0;
+    void *space = dvmCompilerNew (sizeof (*data), false);
+    data = new (space) SRemoveData;
+    curPass->setData (space);
 
     //By default, we don't hoist the checks yet because the entry is not really the entry of the loop
     data->hoistChecks = false;
@@ -274,8 +276,7 @@ void dvmCompilerEndCheckRemoval (CompilationUnit *cUnit, Pass *curPass)
         // Clear the hoisted information too
         data->hoistedArrayToIndexChecks.clear ();
 
-        //Now delete data and clear up curPass->data
-        delete data, data = 0;
+        //Now clear up curPass->data
         curPass->setData (0);
     }
 }
-- 
1.7.4.1

