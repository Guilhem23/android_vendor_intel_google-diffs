From ccbb66562edd474c9ab997d33a866566eb9f85ee Mon Sep 17 00:00:00 2001
From: Razvan A Lupusoru <razvan.a.lupusoru@intel.com>
Date: Fri, 4 Oct 2013 18:01:35 -0700
Subject: Dalvik: Disable hoisted checks

BZ: 140077

The hoisted checks pass generates a hoisted range check that fails to guarantee
no out of bound access. However, range check elimination algorithms assume
that array accesses are safe and as a result code is generated with no bound
check. In such cases, it is possible to corrupt memory on heap due to invalid
out of bounds updates.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-ME
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: I3c5e88519d16d2bf62802874e5b9e45e22c17558
Orig-MCG-Change-Id: Icb0484c7a58a9a8b8158c10817cf9298351939c5
Signed-off-by: Razvan A Lupusoru <razvan.a.lupusoru@intel.com>
Reviewed-on: http://android.intel.com:8080/136436
Reviewed-by: Ignatenko, Aleksey V <aleksey.v.ignatenko@intel.com>
Reviewed-by: Beyler, Jean Christophe <jean.christophe.beyler@intel.com>
Reviewed-by: lab_aqa <lab_aqa@intel.com>
Reviewed-by: Chen, Dong-Yuan <dong-yuan.chen@intel.com>
Tested-by: Chen, Dong-Yuan <dong-yuan.chen@intel.com>
Reviewed-by: Banerji, Udayan <udayan.banerji@intel.com>
Reviewed-by: Shou, Yixin <yixin.shou@intel.com>
Reviewed-by: Hartley, Timothy D <timothy.d.hartley@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/LoopOpt.cpp |    2 --
 1 files changed, 0 insertions(+), 2 deletions(-)

diff --git a/vm/compiler/LoopOpt.cpp b/vm/compiler/LoopOpt.cpp
index 45fe177..e7ec54b 100644
--- a/vm/compiler/LoopOpt.cpp
+++ b/vm/compiler/LoopOpt.cpp
@@ -93,8 +93,6 @@ START_PASSES
               0, dvmCompilerVariant, 0, 0, 0),
     NEW_PASS ("Iget_Iput_Removal", kAllNodes, 0, dvmCompilerInvariantRemovalGate,
               dvmCompilerIgetIputRemoval, 0, 0, 0, kOptimizationBasicBlockChange),
-    NEW_PASS ("Hoisted_checks", kAllNodes, 0, dvmCompilerHoistedChecksGate,
-                             dvmCompilerBodyCodeMotion, dvmCompilerGenHoistedChecks, 0, 0, 0),
     NEW_PASS ("Sink_Casts", kAllNodes, 0, dvmCompilerTraceIsLoopNewSystem,
                dvmCompilerSinkCasts, 0, 0, 0, kOptimizationBasicBlockChange),
     NEW_PASS ("Accumulation_Sinking", kAllNodes, 0, dvmCompilerSinkAccumulationsGate,
-- 
1.7.4.1

