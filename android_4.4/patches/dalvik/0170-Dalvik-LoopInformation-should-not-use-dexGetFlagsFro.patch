From 51c188f64aad2f5e18945cd70f102c1e18439131 Mon Sep 17 00:00:00 2001
From: Serguei Katkov <serguei.i.katkov@intel.com>
Date: Tue, 21 May 2013 19:47:55 +0700
Subject: Dalvik: LoopInformation should not use dexGetFlagsFromOpcode for extended MIR

BZ: 109645

dexGetFlagsFromOpcode does not work for extended MIRs.
The patch adds an explicit check for this invocation.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-ME
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: I4235b5c627474dcc4e5156500a147017a3d53984
Orig-MCG-Change-Id: If00508172b08cb3f40f67ec02afdb8e74ee1174a
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/LoopInformation.cpp |   12 ++++++++++++
 1 files changed, 12 insertions(+), 0 deletions(-)

diff --git a/vm/compiler/LoopInformation.cpp b/vm/compiler/LoopInformation.cpp
index e02df58..4c323b5 100644
--- a/vm/compiler/LoopInformation.cpp
+++ b/vm/compiler/LoopInformation.cpp
@@ -865,6 +865,12 @@ bool LoopInformation::canThrow (const CompilationUnit *cUnit) const
             //Get dalvik instruction
             DecodedInstruction &insn = mir->dalvikInsn;
 
+            //The extended MIRs do not throw
+            if (static_cast<int> (insn.opcode) >= kMirOpFirst)
+            {
+                continue;
+            }
+
             int flags = dexGetFlagsFromOpcode (insn.opcode);
 
             if ( (flags & kInstrCanThrow) != 0)
@@ -913,6 +919,12 @@ bool LoopInformation::hasInvoke (const CompilationUnit *cUnit) const
             //Get dalvik instruction
             DecodedInstruction &insn = mir->dalvikInsn;
 
+            //The extended MIRs do not throw
+            if (static_cast<int> (insn.opcode) >= kMirOpFirst)
+            {
+                continue;
+            }
+
             int flags = dexGetFlagsFromOpcode (insn.opcode);
 
             if ( (flags & kInstrInvoke) != 0)
-- 
1.7.4.1

