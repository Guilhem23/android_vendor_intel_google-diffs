From 528ffbc488abb26ad0c3f5213349fef3ce66c977 Mon Sep 17 00:00:00 2001
From: Jean Christophe Beyler <jean.christophe.beyler@intel.com>
Date: Mon, 17 Jun 2013 12:49:48 -0700
Subject: Dalvik: Klokwork: Issue with sectionLabel being potentially passed as nil

BZ: 116691

Fix a case where sectionLabel can be passed as a nil pointer.

Also fixed a missing label in the error framework.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-CG
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: I1705b578739b237215e1d06f26fbbf3f1a420c3c
Orig-MCG-Change-Id: I3f15aa6eb7ebf8286d0bd3f2b4d20ee373ae8c67
Signed-off-by: Jean Christophe Beyler <jean.christophe.beyler@intel.com>
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/codegen/x86/CodegenErrors.cpp |    2 ++
 vm/compiler/codegen/x86/CodegenErrors.h   |    2 ++
 vm/compiler/codegen/x86/LowerInvoke.cpp   |   20 ++++++++++++++++----
 3 files changed, 20 insertions(+), 4 deletions(-)

diff --git a/vm/compiler/codegen/x86/CodegenErrors.cpp b/vm/compiler/codegen/x86/CodegenErrors.cpp
index c8e8668..1abde1d 100644
--- a/vm/compiler/codegen/x86/CodegenErrors.cpp
+++ b/vm/compiler/codegen/x86/CodegenErrors.cpp
@@ -43,6 +43,8 @@ static const char* jitErrorMessages[kJitErrorMaxDefined] = {
     "The backend decided it cannot safely handle the Basic Block",
     "Patching of Double/Long constants failed",
     "An issue was encountered while generating chaining cell",
+    "Invalid Operand Size was encountered",
+    "Problem with the plugin system",
     //Add error messages here when adding error codes
 };
 
diff --git a/vm/compiler/codegen/x86/CodegenErrors.h b/vm/compiler/codegen/x86/CodegenErrors.h
index 057b737..c27a082 100644
--- a/vm/compiler/codegen/x86/CodegenErrors.h
+++ b/vm/compiler/codegen/x86/CodegenErrors.h
@@ -85,6 +85,8 @@ enum JitCompilationErrors {
     kJitErrorChainingCell,
     /** @brief Invalid operand size */
     kJitErrorInvalidOperandSize,
+    /** @brief Problem with the plugin system */
+    kJitErrorPlugin,
 
     /* ----- Add more errors above ---------------------------*/
     /* ----- Don't add new errors beyond this point ----------*/
diff --git a/vm/compiler/codegen/x86/LowerInvoke.cpp b/vm/compiler/codegen/x86/LowerInvoke.cpp
index 52e1e0e..e4746db 100644
--- a/vm/compiler/codegen/x86/LowerInvoke.cpp
+++ b/vm/compiler/codegen/x86/LowerInvoke.cpp
@@ -968,16 +968,28 @@ int common_invokeArgsDone(ArgsDoneType form) {
 
     const char *sectionLabel = 0;
 
-    if (backEndInvokeArgsDone != 0)
+    //If we don't have a backend handler, bail
+    if (backEndInvokeArgsDone == 0)
     {
-        sectionLabel = backEndInvokeArgsDone (form);
+        SET_JIT_ERROR (kJitErrorPlugin);
+        return -1;
     }
 
-    //Paranoid
-    assert (sectionLabel != 0);
+    //Get the section label
+    sectionLabel = backEndInvokeArgsDone (form);
 
+    //If we don't have a section label, bail
+    if (sectionLabel == 0)
+    {
+        SET_JIT_ERROR (kJitErrorTraceFormation);
+        return -1;
+    }
+
+    //If we can't insert a label, bail
     if (insertLabel(sectionLabel, false) == -1)
+    {
         return -1;
+    }
 
     // Determine how many ins+locals we have
     movez_mem_to_reg(OpndSize_16, OFFSETOF_MEMBER(Method,registersSize),
-- 
1.7.4.1

