From 926ee6a009a2c0f23e63153d8b9dea02adc27561 Mon Sep 17 00:00:00 2001
From: Razvan A Lupusoru <razvan.a.lupusoru@intel.com>
Date: Tue, 28 May 2013 13:28:36 -0700
Subject: Dalvik: Fix potential overflow for backend constant propagation

BZ: 111618

There is a potential off-by-one error when inserting into the virtual
register constant tracker. This patch ensures that there are no insertions
made past the end of the table.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-CG
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: Id32b79c9fc81dfe4d4f6caa68b94c6d6a3c8ddc4
Orig-MCG-Change-Id: I45989824714bc1f9e81c436589ffb50785fe7bcd
Signed-off-by: Razvan A Lupusoru <razvan.a.lupusoru@intel.com>
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/codegen/x86/BytecodeVisitor.cpp |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/vm/compiler/codegen/x86/BytecodeVisitor.cpp b/vm/compiler/codegen/x86/BytecodeVisitor.cpp
index f8adde4..bae3d32 100644
--- a/vm/compiler/codegen/x86/BytecodeVisitor.cpp
+++ b/vm/compiler/codegen/x86/BytecodeVisitor.cpp
@@ -503,7 +503,7 @@ bool setVRToConst (int regNum, OpndSize size, int *tmpValue)
     {
         //Now check for possible table overflow. If we don't have an entry for this,
         //then we must add it. Check now for possible overflow.
-        if (num_const_vr > MAX_CONST_REG)
+        if (num_const_vr >= MAX_CONST_REG)
         {
             ALOGI("JIT_INFO: constVRTable overflows at setVRToConst.");
             SET_JIT_ERROR(kJitErrorRegAllocFailed);
@@ -527,7 +527,7 @@ bool setVRToConst (int regNum, OpndSize size, int *tmpValue)
         {
             //Now check for possible table overflow. If we don't have an entry for this,
             //then we must add it. Check now for possible overflow.
-            if (num_const_vr > MAX_CONST_REG)
+            if (num_const_vr >= MAX_CONST_REG)
             {
                 ALOGI("JIT_INFO: constVRTable overflows at setVRToConst.");
                 SET_JIT_ERROR(kJitErrorRegAllocFailed);
-- 
1.7.4.1

