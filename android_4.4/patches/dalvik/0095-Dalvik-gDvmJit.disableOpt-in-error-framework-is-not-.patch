From fac43a6203f1840d86b017f4b28e93e0bf7de1a2 Mon Sep 17 00:00:00 2001
From: aleksey.v.ignatenko <avignate@nstdrl243.ins.intel.com>
Date: Mon, 4 Mar 2013 18:54:45 +0700
Subject: Dalvik: gDvmJit.disableOpt in error framework is not reset after compilation is completed

BZ: 89323

Eror handling framework allows to recompile by disabling certain
optimizations with gDvmJit.disableOpt flag. This flag is set in
dvmCanFixErrorsAndRetry method. As soon as we fail to compile some
trace we will have certain optimizations disable for all future traces.
This means that if I meet such case at the beginning of the run of
some application this will possibly get the performance down.
The fix resets the flag at the end of compilation.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-CG
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: I7f28aec3c2ae1078dbc0523a9a296ddd1a2d4925
Orig-MCG-Change-Id: Ib077d18d121ca4d18ee4d969c4ad732390448130
Signed-off-by: aleksey.v.ignatenko <avignate@nstdrl243.ins.intel.com>
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/codegen/x86/CodegenErrors.cpp    |    9 +++++++++
 vm/compiler/codegen/x86/CodegenErrors.h      |   20 ++++++++++++++++++++
 vm/compiler/codegen/x86/CodegenInterface.cpp |    8 ++++++++
 3 files changed, 37 insertions(+), 0 deletions(-)

diff --git a/vm/compiler/codegen/x86/CodegenErrors.cpp b/vm/compiler/codegen/x86/CodegenErrors.cpp
index 645ad1a..c088121 100644
--- a/vm/compiler/codegen/x86/CodegenErrors.cpp
+++ b/vm/compiler/codegen/x86/CodegenErrors.cpp
@@ -142,3 +142,12 @@ bool dvmCanFixErrorsAndRetry(CompilationUnit *cUnit){
     ALOGI("++++++++++++++++++++++++++++++++++++++++++++");
     return false;
 }
+
+void dvmSaveOptimizationState(SErrorCompilationState &info) {
+    info.disableOpt = gDvmJit.disableOpt;
+}
+
+void dvmRestoreCompilationState(SErrorCompilationState &info) {
+    gDvmJit.disableOpt = info.disableOpt;
+}
+
diff --git a/vm/compiler/codegen/x86/CodegenErrors.h b/vm/compiler/codegen/x86/CodegenErrors.h
index d01148e..e3383d3 100644
--- a/vm/compiler/codegen/x86/CodegenErrors.h
+++ b/vm/compiler/codegen/x86/CodegenErrors.h
@@ -27,6 +27,14 @@
 #include "Dalvik.h"
 #include "../../CompilerIR.h"
 
+/**
+ * @class ErrorFlags
+ * @brief Keep any information that can be changed by the error framework
+ */
+typedef struct sErrorCompilationState {
+    int disableOpt;                 /**< @brief Disable the optimizations */
+}SErrorCompilationState;
+
 enum JitCompilationErrors {
     /** @brief Exceeded maximum allowed VRs in a basic block */
     kJitErrorMaxVR = 0,
@@ -113,4 +121,16 @@ enum JitCompilationErrors {
  */
 bool dvmCanFixErrorsAndRetry(CompilationUnit *cUnit);
 
+/**
+ * @brief Save the error flags that can be changed by dvmCanFixErrorsAndRetry
+ * @param info the information relating to flags that can be changed by the framework (updated by the function)
+ */
+void dvmSaveOptimizationState(SErrorCompilationState &info);
+
+/**
+ * @brief Restore compilation state
+ * @param info the state we want to reset to
+ */
+void dvmRestoreCompilationState(SErrorCompilationState &info);
+
 #endif
diff --git a/vm/compiler/codegen/x86/CodegenInterface.cpp b/vm/compiler/codegen/x86/CodegenInterface.cpp
index 2838caa..0fbc1a9 100644
--- a/vm/compiler/codegen/x86/CodegenInterface.cpp
+++ b/vm/compiler/codegen/x86/CodegenInterface.cpp
@@ -27,6 +27,7 @@
 #include "Singleton.h"
 #include "ExceptionHandling.h"
 #include "Scheduler.h"
+#include "CodegenErrors.h"
 
 #ifdef HAVE_ANDROID_OS
 #include <cutils/properties.h>
@@ -1786,6 +1787,10 @@ static void compilerMIR2LIRJit(CompilationUnit *cUnit, JitTranslationInfo *info)
 //! \param cUnit: The current compilation unit
 //! \param info: JitTranslationInfo.
 void dvmCompilerMIR2LIR(CompilationUnit *cUnit, JitTranslationInfo *info) {
+   //Save the optimization state to restore it at the end of this compilation
+   SErrorCompilationState compilationState;
+   dvmSaveOptimizationState (compilationState);
+
    //Start the counter
    int numTries = 0;
 
@@ -1809,6 +1814,9 @@ void dvmCompilerMIR2LIR(CompilationUnit *cUnit, JitTranslationInfo *info) {
         //Once done, see if errors happened, and if so
         //see if we can retry and come back
     } while (IS_ANY_JIT_ERROR_SET() && dvmCanFixErrorsAndRetry(cUnit));
+
+   //Restore the compilation state
+   dvmRestoreCompilationState (compilationState);
 }
 
 
-- 
1.7.4.1

