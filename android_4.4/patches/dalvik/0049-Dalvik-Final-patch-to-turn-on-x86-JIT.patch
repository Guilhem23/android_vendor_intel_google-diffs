From b235fa7c69cfed4e05b9067c8dbcd0cd7fefe77a Mon Sep 17 00:00:00 2001
From: Johnnie Birch <johnnie.l.birch.jr@intel.com>
Date: Sat, 12 Jan 2013 13:28:40 -0800
Subject: Dalvik: Final patch to turn on x86 JIT.

BZ: 75820

Patch turns on x86 JIT in dvm.mk and also deletes remaining unneeded
directories for JNI and JIT that target x86-atom.

CaffeineMark		Average
Sieve			12546
Loop			28545.5
Logic			16465.5
String			15430.5
Float			17082.5
Method			7458
Overall			15041

Quadrant 2.1.1			Average
benchmark_cpu_branching_logic	5742
benchmark_cpu_matrix_int	12912
benchmark_cpu_matrix_long	7284
benchmark_cpu_matrix_short	16573.5
benchmark_cpu_matrix_byte	14982
benchmark_cpu_matrix_float	11639.5
benchmark_cpu_matrix_double	17913
benchmark_cpu_checksum	        6783.5
benchmark_cpu			11728.5
benchmark			11728.5

SmartBench 2012			Average
Prod				2682.3333333333
Game				3777.3333333333

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-CG; AOSP-Dalvik-Compiler-ME; AOSP-Dalvik-Runtime
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: I0b2de35f17da985c56369fd43278bf26ea239ac5
Orig-MCG-Change-Id: Ibfbf9035908ff32fe781576283b22660ccaaab4b
Signed-off-by: Johnnie Birch <johnnie.l.birch.jr@intel.com>
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/Android.mk                                  |   11 ++----
 vm/Dvm.mk                                      |   47 ++++++++++--------------
 vm/ReconfigureDvm.mk                           |   16 ++------
 vm/compiler/Compiler.cpp                       |    4 +-
 vm/compiler/Compiler.h                         |    1 -
 vm/compiler/codegen/x86/doxygen-config-x86-jit |    2 +-
 6 files changed, 31 insertions(+), 50 deletions(-)

diff --git a/vm/Android.mk b/vm/Android.mk
index f0c3d69..3ca6366 100644
--- a/vm/Android.mk
+++ b/vm/Android.mk
@@ -43,8 +43,8 @@ host_smp_flag := -DANDROID_SMP=1
 WITH_JIT := true
 include $(LOCAL_PATH)/ReconfigureDvm.mk
 
-ifeq ($(dvm_arch_variant),x86-atom)
-  $(info [TARGET] Building with x86-atom fast interpreter)
+ifeq ($(dvm_arch_variant),x86)
+  $(info [TARGET] Building with x86 fast interpreter)
   LOCAL_CFLAGS += -DMTERP_STUB
 endif
 ifeq ($(WITH_JIT),true)
@@ -124,15 +124,12 @@ ifeq ($(WITH_HOST_DALVIK),true)
         ifeq ($(DALVIK_FI),x86)
             dvm_arch_variant := $(DALVIK_FI)
         endif
-        ifeq ($(DALVIK_FI),x86-atom)
-            dvm_arch_variant := $(DALVIK_FI)
-        endif
     endif
 
     include $(LOCAL_PATH)/Dvm.mk
 
-    ifeq ($(dvm_arch_variant),x86-atom)
-      $(info [HOST] Building with x86-atom fast interpreter)
+    ifeq ($(dvm_arch_variant),x86)
+      $(info [HOST] Building with x86 fast interpreter)
       LOCAL_CFLAGS += -DMTERP_STUB
     endif
     ifeq ($(WITH_JIT),true)
diff --git a/vm/Dvm.mk b/vm/Dvm.mk
index 3485b76..912c957 100644
--- a/vm/Dvm.mk
+++ b/vm/Dvm.mk
@@ -47,6 +47,11 @@ ifneq ($(strip $(DEBUG_DALVIK_VM)),)
   dvm_make_debug_vm := $(DEBUG_DALVIK_VM)
 endif
 
+# Disable x86-atom variant
+ifeq ($(dvm_arch_variant),x86-atom)
+dvm_arch_variant := x86
+endif
+
 ifeq ($(dvm_make_debug_vm),true)
   #
   # "Debug" profile:
@@ -213,7 +218,7 @@ endif
 ifneq ($(filter arm mips,$(dvm_arch)),)
   LOCAL_SRC_FILES += os/android.cpp
 else
-   ifeq ($(dvm_arch_variant),x86-atom)
+   ifeq ($(dvm_arch_variant),x86)
    LOCAL_SRC_FILES += os/android.cpp
    else
    LOCAL_SRC_FILES += os/linux.cpp
@@ -343,32 +348,20 @@ ifeq ($(dvm_arch),x86)
               compiler/codegen/$(dvm_arch_variant)/LowerInvoke.cpp \
               compiler/codegen/$(dvm_arch_variant)/LowerReturn.cpp \
               compiler/codegen/$(dvm_arch_variant)/NcgHelper.cpp \
-              compiler/codegen/$(dvm_arch_variant)/LowerGetPut.cpp
-      ifeq ($(dvm_arch_variant),x86-atom)
-        # Intel x86-atom JIT support
-        LOCAL_SRC_FILES += \
-                compiler/codegen/x86-atom/NullCheckElim.cpp \
-                compiler/codegen/x86-atom/NcgCodegenO1.cpp \
-                compiler/codegen/x86-atom/Schedule.cpp \
-                compiler/codegen/x86-atom/DataFlow.cpp \
-                compiler/codegen/x86-atom/GlueOpt.cpp \
-                compiler/codegen/x86-atom/InstructionGeneration.cpp \
-                compiler/LoopOpt.cpp \
-                compiler/Checks.cpp
-        LOCAL_C_INCLUDES += \
-                hardware/intel/apache-harmony
-        LOCAL_STATIC_LIBRARIES += \
-                libenc
-      else # Intel x86 JIT support
-        LOCAL_C_INCLUDES += \
-	        dalvik/vm/compiler/codegen/x86/libenc
-
-        LOCAL_SRC_FILES += \
-		compiler/codegen/x86/libenc/enc_base.cpp \
-		compiler/codegen/x86/libenc/dec_base.cpp \
-		compiler/codegen/x86/libenc/enc_wrapper.cpp \
-		compiler/codegen/x86/libenc/enc_tabl.cpp
-      endif
+              compiler/codegen/$(dvm_arch_variant)/LowerGetPut.cpp \
+              compiler/codegen/$(dvm_arch_variant)/Schedule.cpp \
+	      compiler/codegen/$(dvm_arch_variant)/InstructionGeneration.cpp \
+	      compiler/LoopOpt.cpp \
+              compiler/Checks.cpp
+       # need apache harmony x86 encoder/decoder
+       LOCAL_C_INCLUDES += \
+	      dalvik/vm/compiler/codegen/x86/libenc
+
+       LOCAL_SRC_FILES += \
+              compiler/codegen/x86/libenc/enc_base.cpp \
+              compiler/codegen/x86/libenc/dec_base.cpp \
+              compiler/codegen/x86/libenc/enc_wrapper.cpp \
+              compiler/codegen/x86/libenc/enc_tabl.cpp
     endif
   endif
 endif
diff --git a/vm/ReconfigureDvm.mk b/vm/ReconfigureDvm.mk
index f4fb41d..2ac8f54 100644
--- a/vm/ReconfigureDvm.mk
+++ b/vm/ReconfigureDvm.mk
@@ -19,24 +19,16 @@ dvm_os := $(TARGET_OS)
 dvm_arch := $(TARGET_ARCH)
 dvm_arch_variant := $(TARGET_ARCH_VARIANT)
 
-# uncomment to disable x86-atom variant
-#ifeq ($(dvm_arch_variant),x86-atom)
-#dvm_arch_variant := x86
-#endif
+# Disable x86-atom variant
+ifeq ($(dvm_arch_variant),x86-atom)
+dvm_arch_variant := x86
+endif
 
 # Use DALVIK_FI to make change to FI build version.
 ifeq ($(TARGET_ARCH),x86)
     ifeq ($(DALVIK_FI),x86)
         dvm_arch_variant := $(DALVIK_FI)
     endif
-    ifeq ($(DALVIK_FI),x86-atom)
-        dvm_arch_variant := $(DALVIK_FI)
-    endif
-endif
-
-# X86 JIT is available only with x86-atom FI
-ifneq ($(dvm_arch_variant),x86-atom)
-    WITH_JIT := false
 endif
 
 include $(LOCAL_PATH)/Dvm.mk
diff --git a/vm/compiler/Compiler.cpp b/vm/compiler/Compiler.cpp
index c8598ab..e18e6e6 100644
--- a/vm/compiler/Compiler.cpp
+++ b/vm/compiler/Compiler.cpp
@@ -22,8 +22,8 @@
 #include "interp/Jit.h"
 #include "CompilerInternals.h"
 #ifdef ARCH_IA32
-#include "codegen/x86-atom/Translator.h"
-#include "codegen/x86-atom/Lower.h"
+#include "codegen/x86/Translator.h"
+#include "codegen/x86/Lower.h"
 #endif
 
 extern "C" void dvmCompilerTemplateStart(void);
diff --git a/vm/compiler/Compiler.h b/vm/compiler/Compiler.h
index 280a69e..6b8a408 100644
--- a/vm/compiler/Compiler.h
+++ b/vm/compiler/Compiler.h
@@ -264,5 +264,4 @@ void dvmDumpCFG(struct CompilationUnit *cUnit, const char *dirPrefix, const char
 void dvmCompilerDumpBasicBlocks (CompilationUnit *cUnit, const char *dirPrefix, const char *suffix = "");
 
 bool dvmIsOpcodeSupportedByJit(const DecodedInstruction & insn);
-
 #endif  // DALVIK_VM_COMPILER_H_
diff --git a/vm/compiler/codegen/x86/doxygen-config-x86-jit b/vm/compiler/codegen/x86/doxygen-config-x86-jit
index 912f649..ff1d620 100644
--- a/vm/compiler/codegen/x86/doxygen-config-x86-jit
+++ b/vm/compiler/codegen/x86/doxygen-config-x86-jit
@@ -1,4 +1,4 @@
-PROJECT_NAME = "X86 Atom JIT Compiler for Dalvik"
+PROJECT_NAME = "X86 JIT Compiler for Dalvik"
 INPUT = AnalysisO1.cpp GlueOpt.cpp LowerHelper.cpp  NcgAot.cpp AnalysisO1.h LowerAlu.cpp LowerInvoke.cpp NcgAot.h Schedule.cpp BytecodeVisitor.cpp LowerConst.cpp LowerJump.cpp NcgCodegenO1.cpp Scheduler.h CodegenInterface.cpp Lower.cpp LowerMove.cpp NcgHelper.cpp Translator.h DataFlow.cpp LowerGetPut.cpp LowerObject.cpp NcgHelper.h Lower.h LowerReturn.cpp NullCheckElim.cpp
 OUTPUT_DIRECTORY = x86-jit-docs
 GENERATE_HTML = YES
-- 
1.7.4.1

