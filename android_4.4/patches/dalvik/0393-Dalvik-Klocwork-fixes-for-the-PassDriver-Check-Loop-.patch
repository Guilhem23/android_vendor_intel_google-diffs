From db1c4bbe5902cffb28c7da408eac691b1b4d0428 Mon Sep 17 00:00:00 2001
From: Jean Christophe Beyler <jean.christophe.beyler@intel.com>
Date: Tue, 5 Nov 2013 11:50:39 -0800
Subject: Dalvik: Klocwork fixes for the PassDriver Check Loop Function

BZ: 149955

There are two pointers being considered as checked for null value and later
dereferenced. The current patch explicitly bails before this can happen. Thus,
fixing Klocwork's warnings.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-ME
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: I7d4717e2c9f8f52d39cff9876defbe6392490cf7
Orig-MCG-Change-Id: I4c0b50a0ddbcdc340d4fba5b91c296eb80fe4b7b
Signed-off-by: Jean Christophe Beyler <jean.christophe.beyler@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/PassDriver.cpp |    6 ++++++
 1 files changed, 6 insertions(+), 0 deletions(-)

diff --git a/vm/compiler/PassDriver.cpp b/vm/compiler/PassDriver.cpp
index beb3c7a..57d05c3 100644
--- a/vm/compiler/PassDriver.cpp
+++ b/vm/compiler/PassDriver.cpp
@@ -408,6 +408,12 @@ static bool dvmCompilerCheckLoops (CompilationUnit *cUnit)
     }
     else
     {
+        //We must be in loop mode if we got here
+        if (dvmCompilerTraceIsLoop (cUnit, 0) == false)
+        {
+            return false;
+        }
+
         // we are rejecting sibling loops at top level
         if (loopInfo->getNextSibling () !=0)
         {
-- 
1.7.4.1

