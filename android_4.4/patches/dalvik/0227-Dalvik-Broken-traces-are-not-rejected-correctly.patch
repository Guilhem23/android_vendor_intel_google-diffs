From 4223e47940e2ec4a6da01206b42e601a97fd7b75 Mon Sep 17 00:00:00 2001
From: Vladimir Kostyukov <vladimir.kostyukov@intel.com>
Date: Thu, 11 Jul 2013 13:24:41 +0700
Subject: Dalvik: Broken traces are not rejected correctly

BZ: 121623

It is possible to execute a broken trace, which was not rejected correctly.
There are loads internal routines, which don't return success/failure code,
but modify gDvmJit.jitErrorFlags flag. Thus, the compiler should also check
this flag after code generation as well as return code. This patch also
contains statements for nulling of generated code address in 'cUnit' and
'info' structures to make sure trace with any JIT errors will be rejected
properly.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-CG
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: Idcf88f6e6366bd6ad16b5af1e149de4704ff9843
Orig-MCG-Change-Id: I0dd3eaa4d92bb2af0a883c9bb7cc972c3cec1d78
Signed-off-by: Vladimir Kostyukov <vladimir.kostyukov@intel.com>
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/codegen/x86/CodegenInterface.cpp |    5 ++++-
 1 files changed, 4 insertions(+), 1 deletions(-)

diff --git a/vm/compiler/codegen/x86/CodegenInterface.cpp b/vm/compiler/codegen/x86/CodegenInterface.cpp
index 347a05b..865aacc 100644
--- a/vm/compiler/codegen/x86/CodegenInterface.cpp
+++ b/vm/compiler/codegen/x86/CodegenInterface.cpp
@@ -1820,7 +1820,7 @@ static bool generateCode (CompilationUnit *cUnit, BasicBlock *bb, BasicBlock **n
     endOfBasicBlock(bb);
 
     //Error handling, we return false
-    if(cg_ret < 0) {
+    if(cg_ret < 0 || IS_ANY_JIT_ERROR_SET()) {
         ALOGI("Could not compile trace for %s%s, offset %d",
                 cUnit->method->clazz->descriptor, cUnit->method->name,
                 cUnit->traceDesc->trace[0].info.frag.startOffset);
@@ -2328,6 +2328,9 @@ void dvmCompilerMIR2LIR(CompilationUnit *cUnit, JitTranslationInfo *info) {
             ALOGI("Rejecting Trace");
             //Restore the compilation state
             dvmRestoreCompilationState (compilationState);
+            //Make sure 'NULL' will be returned as compilation result
+            cUnit->baseAddr = NULL;
+            info->codeAddress = NULL;
             return;
         }
 
-- 
1.7.4.1

