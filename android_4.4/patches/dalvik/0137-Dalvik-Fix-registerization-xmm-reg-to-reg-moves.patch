From cc144c30747dad55f30865ba2ad34e03e88bf3c7 Mon Sep 17 00:00:00 2001
From: Razvan A Lupusoru <razvan.a.lupusoru@intel.com>
Date: Fri, 12 Apr 2013 10:41:44 -0700
Subject: Dalvik: Fix registerization xmm reg to reg moves

BZ: 100154

In order to successfully sync register state to one that child of a BB expects,
registerization must be able to do register to register moves. In case when
xmm to xmm moves were required, the operand size was being set incorrectly
which led to encoder not generating any code for the move and silently failing.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-CG
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: If97f3bd1ccce7947ce43d6be6ad0197e2510d94e
Orig-MCG-Change-Id: I42e5d5377f0ad3de02043416f295deaf54b34bcf
Signed-off-by: Razvan A Lupusoru <razvan.a.lupusoru@intel.com>
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/codegen/x86/RegisterizationBE.cpp |    7 +++++--
 1 files changed, 5 insertions(+), 2 deletions(-)

diff --git a/vm/compiler/codegen/x86/RegisterizationBE.cpp b/vm/compiler/codegen/x86/RegisterizationBE.cpp
index 58a2c5b..2e0eb8e 100644
--- a/vm/compiler/codegen/x86/RegisterizationBE.cpp
+++ b/vm/compiler/codegen/x86/RegisterizationBE.cpp
@@ -705,9 +705,12 @@ static bool moveRegisters (std::map<PhysicalReg, PhysicalReg> &regToRegMoves,
                     physicalRegToString(dest)));
 
             OpndSize regSize = OpndSize_32;
-            if (source >= PhysicalReg_StartOfXmmMarker
-                    && source <= PhysicalReg_StartOfXmmMarker)
+
+            //If we have an xmm to xmm move, the operand size is 64-bits
+            if (source >= PhysicalReg_StartOfXmmMarker && source <= PhysicalReg_EndOfXmmMarker)
+            {
                 regSize = OpndSize_64;
+            }
 
             // Do the actual reg to reg move
             move_reg_to_reg_noalloc(regSize, source, true, dest,
-- 
1.7.4.1

