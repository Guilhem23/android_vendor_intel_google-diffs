From 08870006522f28e7cd70c0307eedbf441134e36a Mon Sep 17 00:00:00 2001
From: Serguei Katkov <serguei.i.katkov@intel.com>
Date: Thu, 4 Jul 2013 11:03:46 +0700
Subject: Dalvik: Backend Error recovering function should know about last attempt

BZ: 121146

The backend error framework can make several attempts to restore from
non-fatal errors arising during trace code generations.

It would be good for the recovering function to take into account that
the next attempt will be the last.
In this case, instead of slightly reducing certain optimizations' aggressivity,
we should set them to the safest settings because it is better to compile
without optimizations instead of risking failing again and
quiting the compilation process.

The patch also uses this approach for the registeriation recovering
setting by setting it to 0 if the attempt is last one.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-CG
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: I799a75fadf9694e3016a9c6c6a08eebd9467dd48
Orig-MCG-Change-Id: Icd3bc8ae24c63611131adc974292de46dd423665
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/codegen/x86/CodegenErrors.cpp    |   14 ++++++++++----
 vm/compiler/codegen/x86/CodegenErrors.h      |    4 +++-
 vm/compiler/codegen/x86/CodegenInterface.cpp |    4 +++-
 3 files changed, 16 insertions(+), 6 deletions(-)

diff --git a/vm/compiler/codegen/x86/CodegenErrors.cpp b/vm/compiler/codegen/x86/CodegenErrors.cpp
index e976257..9189e0e 100644
--- a/vm/compiler/codegen/x86/CodegenErrors.cpp
+++ b/vm/compiler/codegen/x86/CodegenErrors.cpp
@@ -73,9 +73,12 @@ bool isErrorFatal(JitCompilationErrors jitError) {
  * either don't have an error, have fixed the error, or
  * cannot recover from the error. For the second case, we
  * retry the compilation.
+ * @param cUnit Compilation Unit context
+ * @param isLastAttempt whether the next compilation attempt will be the last one
  * @return whether we can retry the trace.
  */
-bool dvmCanFixErrorsAndRetry(CompilationUnit *cUnit){
+bool dvmCanFixErrorsAndRetry(CompilationUnit *cUnit, bool isLastAttempt)
+{
 
     //Check if no error happened. No need to retry
     if (!IS_ANY_JIT_ERROR_SET())
@@ -144,9 +147,12 @@ bool dvmCanFixErrorsAndRetry(CompilationUnit *cUnit){
         // We should only get this error if maximum registerization is > 0
         assert (max > 0);
 
-        //Divide it by 2, fastest way to get to 0 if we have issues across the board
-        cUnit->maximumRegisterization = max / 2;
-        ALOGI("Trying less registerization from %d to %d", max, (max / 2));
+        // Divide it by 2, fastest way to get to 0 if we have issues across the board
+        // If it is a last attempt then force setting to 0
+        // It is better to compile instead of give a last try for registerization
+        int newMax = (isLastAttempt == true) ? 0 : max / 2;
+        cUnit->maximumRegisterization = newMax;
+        ALOGI("Trying less registerization from %d to %d", max, newMax);
     }
 
     //Handle error due to backend
diff --git a/vm/compiler/codegen/x86/CodegenErrors.h b/vm/compiler/codegen/x86/CodegenErrors.h
index 5fac860..3db8c8f 100644
--- a/vm/compiler/codegen/x86/CodegenErrors.h
+++ b/vm/compiler/codegen/x86/CodegenErrors.h
@@ -137,9 +137,11 @@ enum JitCompilationErrors {
  * either don't have an error, have fixed the error, or
  * cannot recover from the error. For the second case, we
  * retry the compilation.
+ * @param cUnit Compilation Unit context
+ * @param isLastAttempt whether the next compilation attempt will be the last one
  * @return whether we can retry the trace.
  */
-bool dvmCanFixErrorsAndRetry(CompilationUnit *cUnit);
+bool dvmCanFixErrorsAndRetry(CompilationUnit *cUnit, bool isLastAttempt);
 
 /**
  * @brief Save the error flags that can be changed by dvmCanFixErrorsAndRetry
diff --git a/vm/compiler/codegen/x86/CodegenInterface.cpp b/vm/compiler/codegen/x86/CodegenInterface.cpp
index 7bd9f4a..7e82a01 100644
--- a/vm/compiler/codegen/x86/CodegenInterface.cpp
+++ b/vm/compiler/codegen/x86/CodegenInterface.cpp
@@ -2388,6 +2388,7 @@ void dvmCompilerMIR2LIR(CompilationUnit *cUnit, JitTranslationInfo *info) {
 
    //Start the counter
    int numTries = 0;
+   bool isLastAttempt = false;
 
    //Try to lower MIR
    do {
@@ -2410,7 +2411,8 @@ void dvmCompilerMIR2LIR(CompilationUnit *cUnit, JitTranslationInfo *info) {
 
         //Once done, see if errors happened, and if so
         //see if we can retry and come back
-    } while (IS_ANY_JIT_ERROR_SET() && dvmCanFixErrorsAndRetry(&x86CUnit));
+        isLastAttempt = numTries == MAX_RETRIES;
+    } while (IS_ANY_JIT_ERROR_SET() && dvmCanFixErrorsAndRetry(&x86CUnit, isLastAttempt));
 
    //Restore the compilation state
    dvmRestoreCompilationState (compilationState);
-- 
1.7.4.1

