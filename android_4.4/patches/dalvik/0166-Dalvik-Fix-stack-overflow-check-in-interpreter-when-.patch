From d7a224fc552cb7ba5b4601cfa0c45d908569e20e Mon Sep 17 00:00:00 2001
From: Dmitry Petrochenko <dmitry.petrochenko@intel.com>
Date: Mon, 20 May 2013 18:33:52 +0700
Subject: Dalvik: Fix stack overflow check in interpreter (when interpStackStart>0x8000000)

BZ: 109031

The stack overflow check had a signed comparison for fp and interpStackEnd,
causing occurence of false stack overflow event when interpStackStart is greater
then 0x80000000 (sign bit enabled) due to signed comparison instruction.
This patch utilizes unsigned comparison in stack overflow check.

Category: device-enablement
Domain: AOSP-Dalvik-Interpreter
Origin: internal
Upstream-Candidate: yes

Change-Id: Ic01f7c0cf72e493bbd35a87d8cde53e75f7400ef
Orig-MCG-Change-Id: Ia9b0ab587a5415c440ba2391746e40fb028ca7ff
Signed-off-by: Dmitry Petrochenko <dmitry.petrochenko@intel.com>
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/mterp/out/InterpAsm-x86.S |    2 +-
 vm/mterp/x86/footer.S        |    2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/vm/mterp/out/InterpAsm-x86.S b/vm/mterp/out/InterpAsm-x86.S
index 5404b16..09400e5 100644
--- a/vm/mterp/out/InterpAsm-x86.S
+++ b/vm/mterp/out/InterpAsm-x86.S
@@ -17159,7 +17159,7 @@ common_invokeMethodNoRange:
     sub         %ecx, %eax              # %eax<- bottom; (newSaveArea - outsSize)
     cmp         TMP_SPILL1(%ebp), %eax  # compare interpStackEnd and bottom
     movl        LOCAL0_OFFSET(%ebp), %eax       # %eax<- restore methodToCall
-    jl          .LstackOverflow         # handle frame overflow
+    jb          .LstackOverflow         # handle frame overflow
 
    /*
     * set up newSaveArea
diff --git a/vm/mterp/x86/footer.S b/vm/mterp/x86/footer.S
index 8718364..671e07c 100644
--- a/vm/mterp/x86/footer.S
+++ b/vm/mterp/x86/footer.S
@@ -681,7 +681,7 @@ common_invokeMethodNoRange:
     sub         %ecx, %eax              # %eax<- bottom; (newSaveArea - outsSize)
     cmp         TMP_SPILL1(%ebp), %eax  # compare interpStackEnd and bottom
     movl        LOCAL0_OFFSET(%ebp), %eax       # %eax<- restore methodToCall
-    jl          .LstackOverflow         # handle frame overflow
+    jb          .LstackOverflow         # handle frame overflow
 
    /*
     * set up newSaveArea
-- 
1.7.4.1

