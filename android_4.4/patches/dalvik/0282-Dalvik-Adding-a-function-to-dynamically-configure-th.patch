From 22d04ab48392fbf5f74f760be3a66fe32d8d3b16 Mon Sep 17 00:00:00 2001
From: Dong-Yuan Chen <dong-yuan.chen@intel.com>
Date: Sat, 17 Aug 2013 22:14:40 -0700
Subject: Dalvik: Adding a function to dynamically configure the ISA string in PCG

BZ: 126451

The libpcg library can choose instructions and schedules for instructions based on
the target ISA. Hence, this patch dynamically checks the cpuid information
and sets the target ISA string appropriately. It also adds a JIT backend option
"TargetIsa" to force the target ISA, if desired.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-CG
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: Id5012e23fcbe41a80896e5bcbd3de90c69460553
Orig-MCG-Change-Id: I310220f4ce7e317aceb151bab6e5747c46d0dc4d
Signed-off-by: Tim Hartley <timothy.d.hartley@intel.com>
Reviewed-on: http://android.intel.com:8080/120776
Reviewed-by: Kreitzer, David L <david.l.kreitzer@intel.com>
Reviewed-by: lab_aqa <lab_aqa@intel.com>
Reviewed-by: Popov, Ivan G <ivan.g.popov@intel.com>
Reviewed-by: Beyler, Jean Christophe <jean.christophe.beyler@intel.com>
Reviewed-by: Lupusoru, Razvan A <razvan.a.lupusoru@intel.com>
Reviewed-by: Dittert, Eric <eric.dittert@intel.com>
Reviewed-by: Chen, Dong-Yuan <dong-yuan.chen@intel.com>
Tested-by: Chen, Dong-Yuan <dong-yuan.chen@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
Reviewed-on: http://android.intel.com:8080/125990
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/codegen/x86/pcg/PcgInterface.cpp |   34 +++++++++++++++++++++++++-
 1 files changed, 33 insertions(+), 1 deletions(-)

diff --git a/vm/compiler/codegen/x86/pcg/PcgInterface.cpp b/vm/compiler/codegen/x86/pcg/PcgInterface.cpp
index e39e272..d606c9b 100644
--- a/vm/compiler/codegen/x86/pcg/PcgInterface.cpp
+++ b/vm/compiler/codegen/x86/pcg/PcgInterface.cpp
@@ -32,6 +32,25 @@
 #include "LoopOpt.h"
 
 /**
+ * @brief Return an appropriate ISA string based on gDvmJit configuration
+ * @return An ISA string appropriate for PCG configuration
+ */
+static const char * pcgGetISALevel (void)
+{
+    const int slm_family = 6;
+    const int slm_model = 74;
+
+    const char * returnString = "atom_ssse3";
+
+    if (gDvmJit.cpuFamily == slm_family && gDvmJit.cpuModel == slm_model)
+    {
+        returnString = "atom_sse4.2";
+    }
+
+    return returnString;
+}
+
+/**
  * @brief Configure the code generation
  * @param cUnit the CompilationUnitPCG
  */
@@ -44,7 +63,20 @@ static void pcgConfigureTrace (CompilationUnitPCG *cUnit)
         CGConfigureRoutine ("debug_level", "1",(void*)0);
     }
 
-    CGConfigureRoutine ("target_arch", "atom_ssse3",
+    const char * isaString = pcgGetISALevel ();
+
+    std::string s;
+    if (dvmExtractBackendOption ("TargetIsa", s))
+    {
+        isaString = s.c_str();
+    }
+
+    if (cUnit->checkDebugMask (DebugMaskDisasm) == true)
+    {
+        ALOGD ("Setting PCG to use ISA string %s", isaString);
+    }
+
+    CGConfigureRoutine ("target_arch", isaString,
                         "eliminate_frame_pointer", "off",
                         "stack_alignment_compatibility", "0",
                         "expand_32b_idiv_irem", "false",
-- 
1.7.4.1

