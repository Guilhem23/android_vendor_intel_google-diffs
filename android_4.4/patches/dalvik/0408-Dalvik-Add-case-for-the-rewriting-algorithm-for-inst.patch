From d0d5518f8547e599ee34cd08369287fc13ec3a77 Mon Sep 17 00:00:00 2001
From: vladimir.a.ivanov <vladimir.a.ivanov@intel.com>
Date: Mon, 21 Oct 2013 17:13:40 +0700
Subject: Dalvik: Add case for the rewriting algorithm for instruction with "no uses"

BZ: 143586

The special case for the rewriting algorithm for instruction with "no uses"
was added.

Change-Id: I0abce4174255d9e2b174580dff639d67072187aa
Category: device enablement
Domain: AOSP.Dalvik-Compiler-ME
Origin: internal
Upstream-Candidate: no, need rework
Signed-off-by: vladimir.a.ivanov <vladimir.a.ivanov@intel.com>
Signed-off-by: Vitaly Provodin <vitaly.a.provodin@intel.com>
Signed-off-by: Ivan Popov <ivan.g.popov@intel.com>
---
 vm/compiler/IntermediateRep.cpp |    6 ++++--
 1 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/vm/compiler/IntermediateRep.cpp b/vm/compiler/IntermediateRep.cpp
index b45610e..8de44f7 100644
--- a/vm/compiler/IntermediateRep.cpp
+++ b/vm/compiler/IntermediateRep.cpp
@@ -1326,8 +1326,10 @@ bool dvmCompilerRewriteMirVRs (DecodedInstruction &dalvikInsn, const std::map<in
         rewriteVR (oldToNew, dalvikInsn.vC, foundOperand);
     }
 
-    //If we are rewriting only uses, then we expect to find the operand.
-    if (onlyUses == true)
+    bool hasUses = ((dfAttributes & DF_HAS_USES) != 0);
+
+    //If we are rewriting only uses and the instruction has them, then we expect to find the operand
+    if (onlyUses == true && hasUses == true)
     {
         //If we did not find operand we failed the rewrite
         return foundOperand;
-- 
1.7.4.1

