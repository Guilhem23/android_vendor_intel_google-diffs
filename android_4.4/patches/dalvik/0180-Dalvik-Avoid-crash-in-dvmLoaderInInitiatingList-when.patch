From dc9d9eb0c4a81f9fb42360babdc7495f119ea2fb Mon Sep 17 00:00:00 2001
From: Dmitry Petrochenko <dmitry.petrochenko@intel.com>
Date: Thu, 16 May 2013 15:51:37 +0700
Subject: Dalvik: Avoid crash in dvmLoaderInInitiatingList when class not found

BZ: 106308

The compareDescriptorClasses now checks the result of dvmClassNoInit and
avoids dvmLoaderInInitiatingList call with NULL argument, in case when
class not found or it's initialization failed and re-initialization skipped
(e.g. when class could not be initialized due to UnsatisfiedLinkError)

Category: device-enablement
Domain: AOSP-Dalvik-Runtime
Origin: internal
Upstream-Candidate: yes

Change-Id: I26c7172f3cd2b3964a9245631b0ebc6df297f4ca
Orig-MCG-Change-Id: I0f6faf2f473a95471d051f4cbc4c42ee618bf2bd
Signed-off-by: Dmitry Petrochenko <dmitry.petrochenko@intel.com>
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/oo/Class.cpp |   10 +++++++---
 1 files changed, 7 insertions(+), 3 deletions(-)

diff --git a/vm/oo/Class.cpp b/vm/oo/Class.cpp
index db5340e..88fb341 100644
--- a/vm/oo/Class.cpp
+++ b/vm/oo/Class.cpp
@@ -3943,9 +3943,13 @@ static bool compareDescriptorClasses(const char* descriptor,
      * will work.  (The bootstrap loader, by definition, never shows up
      * as the initiating loader of a class defined by some other loader.)
      */
-    dvmHashTableLock(gDvm.loadedClasses);
-    bool isInit = dvmLoaderInInitiatingList(result1, clazz2->classLoader);
-    dvmHashTableUnlock(gDvm.loadedClasses);
+    bool isInit = false;
+    if(result1 != NULL)
+    {
+        dvmHashTableLock(gDvm.loadedClasses);
+        isInit = dvmLoaderInInitiatingList(result1, clazz2->classLoader);
+        dvmHashTableUnlock(gDvm.loadedClasses);
+    }
 
     if (isInit) {
         //printf("%s(obj=%p) / %s(cl=%p): initiating\n",
-- 
1.7.4.1

