From 075421df5f88d59ddd98effc8ce651ea65ff33fb Mon Sep 17 00:00:00 2001
From: vladimir.a.ivanov <vladimir.a.ivanov@intel.com>
Date: Fri, 25 Oct 2013 18:05:37 +0700
Subject: Dalvik: update array ExtendedMirOpNames up to current state

BZ: 145994

The array ExtendedMirOpNames was updated in the method dvmCompilerGetOpcodeNames to
correspond enum ExtendedMirOpcode.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-ME
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: I0bc41aec2e9ce487bd125c3eb02e25f02927aef4
Orig-MCG-Change-Id: I94c749bbc95c4de392af9ecd70e61c9622acaad4
Signed-off-by: vladimir.a.ivanov <vladimir.a.ivanov@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/IntermediateRep.cpp |   67 +++++++++++++++++++++++---------------
 1 files changed, 40 insertions(+), 27 deletions(-)

diff --git a/vm/compiler/IntermediateRep.cpp b/vm/compiler/IntermediateRep.cpp
index fc5b002..44eb7dd 100644
--- a/vm/compiler/IntermediateRep.cpp
+++ b/vm/compiler/IntermediateRep.cpp
@@ -1554,39 +1554,52 @@ OpcodeFlags dvmCompilerGetOpcodeFlags (int opcode)
 
 const char* dvmCompilerGetOpcodeName (int opcode)
 {
-    static const char *ExtendedMIROpNames[] = {
-        "kMirOpPhi",
-        "kMirOpNullNRangeUpCheck",
-        "kMirOpNullNRangeDownCheck",
-        "kMirOpLowerBound",
-        "kMirOpPunt",
-        "kMirOpCheckInlinePrediction",
-        "kMirOpNullCheck",
-        "kMirOpBoundCheck",
-        "kMirOpRegisterize",
-        "kOpConst128b",
-        "kMirOpMove128b",
-        "kMirOpPackedMultiply",
-        "kMirOpPackedAddition",
-        "kMirOpPackedAddReduce",
-        "kMirOpPackedSet"
-    };
-    assert (sizeof (ExtendedMIROpNames) / sizeof (char *) == kMirOpLast - kMirOpFirst);
-
     if (opcode < static_cast<int> (kNumPackedOpcodes))
     {
         return dexGetOpcodeName (static_cast<Opcode> (opcode));
     }
-
-    //Check for overflow
-    unsigned int idx = opcode - static_cast<int> (kMirOpFirst);
-    unsigned int max = sizeof (ExtendedMIROpNames) / sizeof (char *);
-
-    if (idx < max)
+    else
     {
-        return ExtendedMIROpNames[opcode - static_cast<int> (kMirOpFirst)];
+        ExtendedMIROpcode extOp = static_cast<ExtendedMIROpcode> (opcode);
+
+        switch (extOp)
+        {
+            case kMirOpPhi:
+                return "kMirOpPhi";
+            case kMirOpNullNRangeUpCheck:
+                return "kMirOpNullNRangeUpCheck";
+            case kMirOpNullNRangeDownCheck:
+                return "kMirOpNullNRangeDownCheck";
+            case kMirOpLowerBound:
+                return "kMirOpLowerBound";
+            case kMirOpPunt:
+                return "kMirOpPunt";
+            case kMirOpCheckInlinePrediction:
+                return "kMirOpCheckInlinePrediction";
+            case kMirOpNullCheck:
+                return "kMirOpNullCheck";
+            case kMirOpBoundCheck:
+                return "kMirOpBoundCheck";
+            case kMirOpRegisterize:
+                return "kMirOpRegisterize";
+            case kMirOpConst128b:
+                return "kMirOpConst128b";
+            case kMirOpMove128b:
+                return "kMirOpMove128b";
+            case kMirOpPackedMultiply:
+                return "kMirOpPackedMultiply";
+            case kMirOpPackedAddition:
+                return "kMirOpPackedAddition";
+            case kMirOpPackedAddReduce:
+                return "kMirOpPackedAddReduce";
+            case kMirOpPackedSet:
+                return "kMirOpPackedSet";
+            case kMirOpCheckStackOverflow:
+                return "kMirOpCheckStackOverflow";
+            default:
+                return "KMirUnknown";
+        }
     }
-    return "KMirUnknown";
 }
 
 ChildBlockIterator::ChildBlockIterator (BasicBlock *bb)
-- 
1.7.4.1

