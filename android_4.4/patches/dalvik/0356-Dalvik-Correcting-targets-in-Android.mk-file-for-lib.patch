From 1f39cbcf8a58bd258552602fb46555a59e703dcd Mon Sep 17 00:00:00 2001
From: Ruslan Scherbakov <ruslan.scherbakov@intel.com>
Date: Thu, 3 Oct 2013 16:46:35 +0700
Subject: Dalvik: Correcting targets in Android.mk file for libpcgdvmjit

BZ: 142735

The Android.mk for libpcgdvmjit has several targets with the same
src list. The libpcgdvmjit_tuning had missing Relocation.cpp in its list
that caused dynamic linking issues in libdvm with built target.
The values for LOCAL_SRC_FILES and LOCAL_C_INCLUDES parameters were moved
to the shared ones in PCG_SRC_FILES and PCG_C_INCLUDES.
New target was created: libpcgdvmjit_assert for its counterpart libdvm_assert.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-CG
Origin: internal
Upstream-Candidate: no, needs rework

Orig-MCG-Change-Id: Ia9b8a8861447533f87380fe860e154f5824d5c7f
Reviewed-on: http://android.intel.com:8080/136039
Reviewed-by: Scherbakov, Ruslan <ruslan.scherbakov@intel.com>
Reviewed-by: Katkov, Serguei I <serguei.i.katkov@intel.com>
Reviewed-by: lab_aqa <lab_aqa@intel.com>
Reviewed-by: Beyler, Jean Christophe <jean.christophe.beyler@intel.com>
Reviewed-by: Chen, Dong-Yuan <dong-yuan.chen@intel.com>
Reviewed-by: Semukhina, Elena V <elena.v.semukhina@intel.com>
Reviewed-by: Hartley, Timothy D <timothy.d.hartley@intel.com>
Tested-by: Chen, Dong-Yuan <dong-yuan.chen@intel.com>
Reviewed-by: Lupusoru, Razvan A <razvan.a.lupusoru@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>

Change-Id: Ib03a679f0f52e54d4635ac9ec46ef4b5bb81ff01
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/codegen/x86/pcg/Android.mk |  156 ++++++++++++++------------------
 1 files changed, 66 insertions(+), 90 deletions(-)

diff --git a/vm/compiler/codegen/x86/pcg/Android.mk b/vm/compiler/codegen/x86/pcg/Android.mk
index 73c9b38..5a83b92 100644
--- a/vm/compiler/codegen/x86/pcg/Android.mk
+++ b/vm/compiler/codegen/x86/pcg/Android.mk
@@ -16,6 +16,39 @@
 # Android.mk for PCG user plugin
 #
 
+PCG_SRC_FILES := \
+    Analysis.cpp \
+    Client.cpp \
+    ChainingCellException.cpp \
+    CodeGeneration.cpp \
+    CompilationUnitPCG.cpp \
+    Labels.cpp \
+    LowerALU.cpp \
+    LowerArray.cpp \
+    LowerCall.cpp \
+    LowerExtended.cpp \
+    LowerGetPut.cpp \
+    LowerJump.cpp \
+    LowerMemory.cpp \
+    LowerOther.cpp \
+    PcgInterface.cpp \
+    PersistentInfo.cpp \
+    Relocation.cpp \
+    UtilityPCG.cpp
+
+PCG_C_INCLUDES := \
+    dalvik \
+    dalvik/vm \
+    dalvik/vm/compiler \
+    dalvik/vm/compiler/codegen/x86 \
+    dalvik/vm/compiler/codegen/x86/lightcg \
+    dalvik/vm/compiler/codegen/x86/lightcg/libenc \
+    prebuilts/ndk/8/sources/cxx-stl/gnu-libstdc++/include \
+    prebuilts/ndk/8/sources/cxx-stl/gnu-libstdc++/libs/x86/include \
+    bionic \
+    bionic/libstdc++/include
+
+
 LOCAL_PATH:= $(call my-dir)
 
 include $(CLEAR_VARS)
@@ -44,43 +77,17 @@ LOCAL_ALLOW_UNDEFINED_SYMBOLS := true
 TARGET_LIBGCC = $(shell $(TARGET_CC) -m32 -print-libgcc-file-name)
 #LOCAL_LDFLAGS += -Wl,--whole-archive $(TARGET_LIBGCC) -Wl,--no-whole-archive
 LOCAL_STATIC_LIBRARIES += libpcg libirc_pcg libsvml libgnustl_static
-LOCAL_SRC_FILES := \
-    Analysis.cpp \
-    ChainingCellException.cpp \
-    CodeGeneration.cpp \
-    CompilationUnitPCG.cpp \
-    Labels.cpp \
-    LowerALU.cpp \
-    LowerArray.cpp \
-    LowerCall.cpp \
-    LowerExtended.cpp \
-    LowerGetPut.cpp \
-    LowerJump.cpp \
-    LowerMemory.cpp \
-    LowerOther.cpp \
-    PcgInterface.cpp \
-    PersistentInfo.cpp \
-    Relocation.cpp \
-    UtilityPCG.cpp
+LOCAL_SRC_FILES := $(PCG_SRC_FILES)
 
 LOCAL_SHARED_LIBRARIES += libcutils libdvm libdl
-LOCAL_C_INCLUDES += \
-    dalvik \
-    dalvik/vm \
-    dalvik/vm/compiler \
-    dalvik/vm/compiler/codegen/x86 \
-    dalvik/vm/compiler/codegen/x86/lightcg \
-    dalvik/vm/compiler/codegen/x86/lightcg/libenc \
-    prebuilts/ndk/8/sources/cxx-stl/gnu-libstdc++/include \
-    prebuilts/ndk/8/sources/cxx-stl/gnu-libstdc++/libs/x86/include \
-    bionic \
-    bionic/libstdc++/include
+LOCAL_C_INCLUDES += $(PCG_C_INCLUDES)
 
 include $(BUILD_SHARED_LIBRARY)
 
 #
 # Build libpcgdvmjit with JIT_TUNING
 #
+
 include $(CLEAR_VARS)
 
 ifeq ($(TARGET_CPU_SMP),true)
@@ -97,39 +104,37 @@ LOCAL_CFLAGS += -DARCH_IA32 -DWITH_JIT -DWITH_HOUDINI -DWITH_REGION_GC -DVTUNE_D
 LOCAL_CFLAGS += -DWITH_JIT_TUNING
 LOCAL_ALLOW_UNDEFINED_SYMBOLS := true
 TARGET_LIBGCC = $(shell $(TARGET_CC) -m32 -print-libgcc-file-name)
-#LOCAL_LDFLAGS += -Wl,--whole-archive $(TARGET_LIBGCC) -Wl,--no-whole-archive
 LOCAL_STATIC_LIBRARIES += libpcg libirc_pcg libsvml libgnustl_static
-LOCAL_SRC_FILES := \
-    Analysis.cpp \
-    Client.cpp \
-    ChainingCellException.cpp \
-    CodeGeneration.cpp \
-    CompilationUnitPCG.cpp \
-    Labels.cpp \
-    LowerALU.cpp \
-    LowerArray.cpp \
-    LowerCall.cpp \
-    LowerExtended.cpp \
-    LowerGetPut.cpp \
-    LowerJump.cpp \
-    LowerMemory.cpp \
-    LowerOther.cpp \
-    PcgInterface.cpp \
-    PersistentInfo.cpp \
-    UtilityPCG.cpp
+LOCAL_SRC_FILES := $(PCG_SRC_FILES)
+LOCAL_SHARED_LIBRARIES += libcutils libdvm libdl
+LOCAL_C_INCLUDES += $(PCG_C_INCLUDES)
 
+include $(BUILD_SHARED_LIBRARY)
+
+#
+# Build libpcgdvmjit assert
+#
+
+include $(CLEAR_VARS)
+
+ifeq ($(TARGET_CPU_SMP),true)
+    target_smp_flag := -DANDROID_SMP=1
+else
+    target_smp_flag := -DANDROID_SMP=0
+endif
+host_smp_flag := -DANDROID_SMP=1
+
+LOCAL_MODULE_TAGS := optional
+LOCAL_MODULE := libpcgdvmjit_assert
+LOCAL_CFLAGS += $(target_smp_flag)
+LOCAL_CFLAGS += -DARCH_IA32 -DWITH_JIT -DWITH_HOUDINI -DWITH_REGION_GC -DVTUNE_DALVIK -DEXTRA_SCRATCH_VR -DMTERP_STUB -DMTERP_NO_UNALIGN_64 -Wall -Wextra -O3
+LOCAL_CFLAGS += -UNDEBUG -DDEBUG=1 -DLOG_NDEBUG=1 -DWITH_DALVIK_ASSERT -DWITH_JIT_TUNING
+LOCAL_ALLOW_UNDEFINED_SYMBOLS := true
+TARGET_LIBGCC = $(shell $(TARGET_CC) -m32 -print-libgcc-file-name)
+LOCAL_STATIC_LIBRARIES += libpcg libirc_pcg libsvml libgnustl_static
+LOCAL_SRC_FILES := $(PCG_SRC_FILES)
 LOCAL_SHARED_LIBRARIES += libcutils libdvm libdl
-LOCAL_C_INCLUDES += \
-	dalvik \
-	dalvik/vm \
-	dalvik/vm/compiler \
-	dalvik/vm/compiler/codegen/x86 \
-    dalvik/vm/compiler/codegen/x86/lightcg \
-    dalvik/vm/compiler/codegen/x86/lightcg/libenc \
-    prebuilts/ndk/8/sources/cxx-stl/gnu-libstdc++/include \
-    prebuilts/ndk/8/sources/cxx-stl/gnu-libstdc++/libs/x86/include \
-    bionic \
-    bionic/libstdc++/include
+LOCAL_C_INCLUDES += $(PCG_C_INCLUDES)
 
 include $(BUILD_SHARED_LIBRARY)
 
@@ -160,37 +165,8 @@ ifeq ($(WITH_HOST_DALVIK),true)
     LOCAL_ALLOW_UNDEFINED_SYMBOLS := true
     TARGET_LIBGCC = $(shell $(TARGET_CC) -m32 -print-libgcc-file-name)
     LOCAL_STATIC_LIBRARIES += libpcg_host libirc_pcg libsvml
-    LOCAL_SRC_FILES := \
-        Analysis.cpp \
-        Client.cpp \
-        ChainingCellException.cpp \
-        CodeGeneration.cpp \
-        CompilationUnitPCG.cpp \
-        Labels.cpp \
-        LowerALU.cpp \
-        LowerArray.cpp \
-        LowerCall.cpp \
-        LowerExtended.cpp \
-        LowerGetPut.cpp \
-        LowerJump.cpp \
-        LowerMemory.cpp \
-        LowerOther.cpp \
-        PcgInterface.cpp \
-        PersistentInfo.cpp \
-        Relocation.cpp \
-        UtilityPCG.cpp
-
-    LOCAL_C_INCLUDES += \
-        dalvik \
-        dalvik/vm \
-        dalvik/vm/compiler \
-        dalvik/vm/compiler/codegen/x86 \
-        dalvik/vm/compiler/codegen/x86/lightcg \
-        dalvik/vm/compiler/codegen/x86/lightcg/libenc \
-        prebuilts/ndk/8/sources/cxx-stl/gnu-libstdc++/include \
-        prebuilts/ndk/8/sources/cxx-stl/gnu-libstdc++/libs/x86/include \
-        bionic \
-        bionic/libstdc++/include
+    LOCAL_SRC_FILES := $(PCG_SRC_FILES)
+    LOCAL_C_INCLUDES += $(PCG_C_INCLUDES)
 
     include $(BUILD_HOST_SHARED_LIBRARY)
 endif
-- 
1.7.4.1

