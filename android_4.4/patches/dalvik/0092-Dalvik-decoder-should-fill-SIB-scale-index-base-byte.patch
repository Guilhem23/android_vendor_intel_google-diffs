From a23ba1df16a23bdf70769eee4d3fecc885aa27ff Mon Sep 17 00:00:00 2001
From: Vladimir Kostyukov <vladimir.kostyukov@intel.com>
Date: Thu, 28 Feb 2013 11:27:53 +0700
Subject: Dalvik: decoder should fill SIB (scale,index,base) byte correctly

BZ: 86957

There was a bug in original 'libenc' that affected to decoder print out
(for memory operands with scale = 0|1). The previous bug has been fixed
incorrectly so we got assert failed in encoder due to conflicting ststates
in SIB structure. The fix handles two issues: incorrect print out and failed
assert. It fills the SIB byte properly for both cases - a) only base is
available (scale = 0); b) both base and index are available (scale >= 1);

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-CG
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: I91ae0af28e389f4032480a21efd210e63e6ec518
Orig-MCG-Change-Id: Ifb721746e92ab71b8308ea5dce407968e0f3767d
Signed-off-by: Vladimir Kostyukov <vladimir.kostyukov@intel.com>
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/codegen/x86/libenc/dec_base.cpp |    6 ++++--
 1 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/vm/compiler/codegen/x86/libenc/dec_base.cpp b/vm/compiler/codegen/x86/libenc/dec_base.cpp
index e0edc10..17471c7 100644
--- a/vm/compiler/codegen/x86/libenc/dec_base.cpp
+++ b/vm/compiler/codegen/x86/libenc/dec_base.cpp
@@ -486,8 +486,6 @@ bool DecoderBase::decodeModRM(const EncoderBase::OpcodeDesc& odesc,
     if (modrm.rm == 4) {
         // yes, we have SIB
         *pbuf += 1;
-        // scale = sib.scale == 0 ? 0 : (1<<sib.scale);
-        scale = (1<<sib.scale);
         if (sib.index != 4) {
             index = getRegName(OpndKind_GPReg, OpndSize_32, EXTEND_REG(sib.index, x)); //Android x86: OpndDesc.size
         } else {
@@ -495,6 +493,10 @@ bool DecoderBase::decodeModRM(const EncoderBase::OpcodeDesc& odesc,
             //%esp can't be sib.index
         }
 
+        // scale = sib.scale == 0 ? 0 : (1<<sib.scale);
+        // scale = (1<<sib.scale);
+        scale = (index == RegName_Null) ? 0 : (1<<sib.scale);
+
         if (sib.base != 5 || modrm.mod != 0) {
             base = getRegName(OpndKind_GPReg, OpndSize_32, EXTEND_REG(sib.base, b)); //Android x86: OpndDesc.size
         } else {
-- 
1.7.4.1

