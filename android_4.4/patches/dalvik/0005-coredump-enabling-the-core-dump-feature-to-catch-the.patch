From 49872d1dcd1f9ab5c3cf0bcf85d5c23b74471f53 Mon Sep 17 00:00:00 2001
From: Jeremy Rocher <jeremyx.rocher@intel.com>
Date: Fri, 23 Mar 2012 08:47:48 +0100
Subject: coredump: enabling the core dump feature to catch the application core dump file

BZ: 47554

Enabling the core dump feature, when applications crash, the corresponding core
dump file will be saved into logs directory.

And crashlogd will collect and manage the core file.

Category: device-enablement
Domain: AOSP-Dalvik-Runtime
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: Ic3d3fc77b97fb2ebd1a541aa35b7b82de5f8f30a
Orig-MCG-Change-Id: I3f1f45f34a6d8eb5d8e86f38ab737fdfc50c47b8
Signed-off-by: liu chuansheng <chuansheng.liu@intel.com>
Signed-off-by: Jeremy Rocher <jeremyx.rocher@intel.com>
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/native/dalvik_system_Zygote.cpp |   24 +++++++++++++++++++-----
 1 files changed, 19 insertions(+), 5 deletions(-)

diff --git a/vm/native/dalvik_system_Zygote.cpp b/vm/native/dalvik_system_Zygote.cpp
index e2b618b..4ece79e 100644
--- a/vm/native/dalvik_system_Zygote.cpp
+++ b/vm/native/dalvik_system_Zygote.cpp
@@ -43,6 +43,10 @@
 # include <sys/prctl.h>
 #endif
 
+#ifdef HAVE_ANDROID_OS
+#include <cutils/properties.h>
+#endif
+
 #define ZYGOTE_LOG_TAG "Zygote"
 
 /* must match values in dalvik.system.Zygote */
@@ -369,6 +373,9 @@ static void Dalvik_dalvik_system_Zygote_fork(const u4* args, JValue* pResult)
  */
 static void enableDebugFeatures(u4 debugFlags)
 {
+#ifdef HAVE_ANDROID_OS
+    char value[PROPERTY_VALUE_MAX];
+#endif
     ALOGV("debugFlags is 0x%02x", debugFlags);
 
     gDvm.jdwpAllowed = ((debugFlags & DEBUG_ENABLE_DEBUGGER) != 0);
@@ -408,12 +415,19 @@ static void enableDebugFeatures(u4 debugFlags)
                  getpid(), strerror(errno));
         } else {
             struct rlimit rl;
-            rl.rlim_cur = 0;
-            rl.rlim_max = RLIM_INFINITY;
-            if (setrlimit(RLIMIT_CORE, &rl) < 0) {
-                ALOGE("could not disable core file generation for pid %d: %s",
-                    getpid(), strerror(errno));
+            property_get("persist.core.enabled", value, "");
+            if (strcmp(value, "1") != 0) {
+                ALOGD("Try to disable coredump for pid %d",
+                     getpid());
+
+               rl.rlim_cur = 0;
+               rl.rlim_max = RLIM_INFINITY;
+               if (setrlimit(RLIMIT_CORE, &rl) < 0) {
+                   ALOGE("could not disable core file generation for pid %d: %s",
+                        getpid(), strerror(errno));
+               }
             }
+
         }
     }
 #endif
-- 
1.7.4.1

