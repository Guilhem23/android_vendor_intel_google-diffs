From dcb9ea5332d757f2309d752e631eb693833b4e7d Mon Sep 17 00:00:00 2001
From: Dong-Yuan Chen <dong-yuan.chen@intel.com>
Date: Thu, 7 Feb 2013 10:23:56 -0800
Subject: Dalvik: Fixed intel-003-cmplong test and cleaned up remaining x86-atom cruft.

BZ: 85876

Category: device-enablement
Domain: AOSP-Dalvik-Runtime
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: I2707e749ab69fd161170b44f49dcf7cd1acd8498
Orig-MCG-Change-Id: I9d50708cdb07662ad46d1865677777da4d1759a8
Signed-off-by: Tim Hartley <timothy.d.hartley@intel.com>
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 tests/intel-003-cmplong_controlflow/src/Main.java  |   71 ++++++++++++++++++++
 .../src/testcmplong.java                           |   71 --------------------
 2 files changed, 71 insertions(+), 71 deletions(-)
 create mode 100644 tests/intel-003-cmplong_controlflow/src/Main.java
 delete mode 100644 tests/intel-003-cmplong_controlflow/src/testcmplong.java

diff --git a/tests/intel-003-cmplong_controlflow/src/Main.java b/tests/intel-003-cmplong_controlflow/src/Main.java
new file mode 100644
index 0000000..200004e
--- /dev/null
+++ b/tests/intel-003-cmplong_controlflow/src/Main.java
@@ -0,0 +1,71 @@
+import java.io.*;
+class Main{
+static int cmplong(long a, long b){
+ if (a<b)
+   return 20;
+ else if(a>b)
+   return 21;
+ else
+   return 22;
+}
+public static void main (String[] args)
+{
+ long a=0,b=0,c1=0,c2=0,c3=0,c4=0,c5=0;
+ int d=0;
+ a=1<<50;
+ b=1<<51;
+ for (int i=0;i<70000;i++)
+ {
+ d=cmplong(a,b);
+   if (d != 20)
+      System.out.println("error in less than" +"\n" );
+   else
+      c1=c1+500;
+ }
+ System.out.println("c1 = " + c1 + "\n" );
+ a=1<<51;
+ b=1<<50;
+ for (int i=0;i<70000;i++)
+ {
+ d=cmplong(a,b);
+   if (d!=21)
+      System.out.println("error in greater than" +"\n" );
+   else
+      c2=c2+500;
+ }
+ System.out.println("c2 = " + c2 + "\n" );
+ a=30;
+ b=40;
+ for (int i=0;i<70000;i++)
+ {
+ d=cmplong(a,b);
+   if (d!=20)
+      System.out.println("error in less than w/o shift" +"\n" );
+   else
+      c3=c3+500;
+ }
+ System.out.println("c3 = " + c3 + "\n" );
+ a=40;
+ b=40;
+ for (int i=0;i<70000;i++)
+ {
+ d=cmplong(a,b);
+   if (d!=22)
+      System.out.println("equal error" +"\n" );
+   else
+      c4=c4+500;
+ }
+ System.out.println("c4 = " + c4 + "\n" );
+ a=40;
+ b=30;
+ for (int i=0;i<70000;i++)
+ {
+ d=cmplong(a,b);
+   if (d!=21)
+      System.out.println("greater than w/o shift error" +"\n" );
+   else
+      c5=c5+500;
+ }
+ System.out.println("c5 = " + c5 + "\n" );
+}
+}
diff --git a/tests/intel-003-cmplong_controlflow/src/testcmplong.java b/tests/intel-003-cmplong_controlflow/src/testcmplong.java
deleted file mode 100644
index 31da0a9..0000000
--- a/tests/intel-003-cmplong_controlflow/src/testcmplong.java
+++ /dev/null
@@ -1,71 +0,0 @@
-import java.io.*;
-class testcmplong{
-static int cmplong(long a, long b){
- if (a<b)
-   return 20;
- else if(a>b)
-   return 21;
- else
-   return 22;
-}
-public static void main (String[] args)
-{
- long a=0,b=0,c1=0,c2=0,c3=0,c4=0,c5=0;
- int d=0;
- a=1<<50;
- b=1<<51;
- for (int i=0;i<70000;i++)
- {
- d=cmplong(a,b);
-   if (d != 20)
-      System.out.println("error in less than" +"\n" );
-   else
-      c1=c1+500;
- }
- System.out.println("c1 = " + c1 + "\n" );
- a=1<<51;
- b=1<<50;
- for (int i=0;i<70000;i++)
- {
- d=cmplong(a,b);
-   if (d!=21)
-      System.out.println("error in greater than" +"\n" );
-   else
-      c2=c2+500;
- }
- System.out.println("c2 = " + c2 + "\n" );
- a=30;
- b=40;
- for (int i=0;i<70000;i++)
- {
- d=cmplong(a,b);
-   if (d!=20)
-      System.out.println("error in less than w/o shift" +"\n" );
-   else
-      c3=c3+500;
- }
- System.out.println("c3 = " + c3 + "\n" );
- a=40;
- b=40;
- for (int i=0;i<70000;i++)
- {
- d=cmplong(a,b);
-   if (d!=22)
-      System.out.println("equal error" +"\n" );
-   else
-      c4=c4+500;
- }
- System.out.println("c4 = " + c4 + "\n" );
- a=40;
- b=30;
- for (int i=0;i<70000;i++)
- {
- d=cmplong(a,b);
-   if (d!=21)
-      System.out.println("greater than w/o shift error" +"\n" );
-   else
-      c5=c5+500;
- }
- System.out.println("c5 = " + c5 + "\n" );
-}
-}
-- 
1.7.4.1

