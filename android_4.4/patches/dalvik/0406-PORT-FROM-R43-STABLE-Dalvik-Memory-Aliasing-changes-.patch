From fbddee570d8b2762509e9811e3f6fe5816c5bed7 Mon Sep 17 00:00:00 2001
From: Serguei Katkov <serguei.i.katkov@intel.com>
Date: Wed, 13 Nov 2013 09:53:16 +0700
Subject: [PORT FROM R43-STABLE] Dalvik: Memory Aliasing changes the color of considered MIR

BZ: 151050

Memory Aliasing analysis is able to change the color of considered MIR
and mark it with different color. In complex case it results in the
invalid data when two memory instruction pointing to the same area are
marked by different colors and this is an invalid.

Actually it comes from the fact that similarity is not transitive. Say
for A, B, C: A==B, A==C but B!=C. As a result in current implmentation
first A, B, C will be marked as 1 and as considered MIRs.
However when B and C is being compared C will be marked as 2 independent
that it was already finalized.

The patch rejects changes of color for C because it is already finalized
(it was already detected that it is similar to other MIR).

Change-Id: Ic79bee32ccac7b9270fb1352218189a2eee2a22f
Orig-Change-Id: I53c98477cf4bb67e894d554905c24ec3b0a436eb
Category: device enablement
Domain: AOSP.Dalvik-Compiler-ME
Origin: internal
Upstream-Candidate: no, need rework
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
Signed-off-by: aivasche <aleksei.v.ivaschenko@intel.com>
Signed-off-by: Ivan Popov <ivan.g.popov@intel.com>
---
 vm/compiler/LoopRegisterUsage.cpp |   15 ++++++++++-----
 1 files changed, 10 insertions(+), 5 deletions(-)

diff --git a/vm/compiler/LoopRegisterUsage.cpp b/vm/compiler/LoopRegisterUsage.cpp
index 554f543..d67930d 100644
--- a/vm/compiler/LoopRegisterUsage.cpp
+++ b/vm/compiler/LoopRegisterUsage.cpp
@@ -546,11 +546,16 @@ static void handleColors (BasicBlock *bb, std::map<int, std::vector<MIR *> > &wo
                     //Only recolor if we have the same color
                     if (other->color.aliasingColor == mir->color.aliasingColor)
                     {
-                        //Ahh, we need a new color for them
-                        other->color.aliasingColor = currentColor;
-
-                        //Increment the color
-                        currentColor++;
+                        //We can change a color only if it was not finalized, otherwise
+                        //we will break the info about similarity of other MIRs
+                        if (consideredMIRs.find (other) == consideredMIRs.end ())
+                        {
+                            //Ahh, we need a new color for them
+                            other->color.aliasingColor = currentColor;
+
+                            //Increment the color
+                            currentColor++;
+                        }
                     }
                 }
                 else
-- 
1.7.4.1

