From b10ff4f0be9bf36296bc32c614b81124e047142d Mon Sep 17 00:00:00 2001
From: Serguei Katkov <serguei.i.katkov@intel.com>
Date: Wed, 22 May 2013 13:38:38 +0700
Subject: Dalvik: Lowering aput-obect should use new null and bound checks

BZ: 109565

aput-object uses old implementation of null and bound checks.
As a result it does not split VR in case of exception throwing.

The patch uses nullcheck and boundcheck helper function which
handles the rigesters correctly.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-CG
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: I8aa8ca5b0b3b4adce78c5d9183f9747f120f8110
Orig-MCG-Change-Id: I9dde660ac0515c9cb7a3f75e65fbfcad9dc61384
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/codegen/x86/LowerGetPut.cpp |    8 ++------
 1 files changed, 2 insertions(+), 6 deletions(-)

diff --git a/vm/compiler/codegen/x86/LowerGetPut.cpp b/vm/compiler/codegen/x86/LowerGetPut.cpp
index 3883c79..a64dbca 100644
--- a/vm/compiler/codegen/x86/LowerGetPut.cpp
+++ b/vm/compiler/codegen/x86/LowerGetPut.cpp
@@ -660,11 +660,8 @@ int op_aput_object(const MIR * mir) { //type checking
         }
 
         get_virtual_reg(vref, OpndSize_32, 1, false); //array
-        export_pc(); //use %edx
-
         if(!(mir->OptimizationFlags & MIR_IGNORE_NULL_CHECK)) {
-            compare_imm_reg(OpndSize_32, 0, 1, false);
-            conditional_jump_global_API(Condition_E, "common_errNullObject", false);
+            nullCheck(1, false, 1, vref); //maybe optimized away, if not, call
             cancelVRFreeDelayRequest(vref,VRDELAY_NULLCHECK);
         } else {
             updateRefCount2(1, LowOpndRegType_gp, false); //update reference count for tmp1
@@ -672,8 +669,7 @@ int op_aput_object(const MIR * mir) { //type checking
 
         get_virtual_reg(vindex, OpndSize_32, 2, false); //index
         if(!(mir->OptimizationFlags & MIR_IGNORE_RANGE_CHECK)) {
-            compare_mem_reg(OpndSize_32, OFFSETOF_MEMBER(ArrayObject, length), 1, false, 2, false);
-            conditional_jump_global_API(Condition_NC, "common_errArrayIndex", false);
+            boundCheck(vref, 1, false, vindex, 2, false, 2);
             cancelVRFreeDelayRequest(vref,VRDELAY_BOUNDCHECK);
             cancelVRFreeDelayRequest(vindex,VRDELAY_BOUNDCHECK);
         } else {
-- 
1.7.4.1

