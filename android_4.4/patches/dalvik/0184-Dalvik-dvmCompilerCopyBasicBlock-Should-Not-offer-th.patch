From 19bbd047bd3600cfa43ea3bcf1d838feaccfc949 Mon Sep 17 00:00:00 2001
From: Jean Christophe Beyler <jean.christophe.beyler@intel.com>
Date: Fri, 24 May 2013 07:28:24 -0700
Subject: Dalvik: dvmCompilerCopyBasicBlock Should Not offer the addIt parameter

BZ: 110860

There is a risk of breaking things down the line with the addIt parameter to
false.

Because the option is not used, the simplest solution is to remove the
parameter.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-ME
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: I5a96b870a0c5bfd42f56a4b5224809e034dad449
Orig-MCG-Change-Id: I2815731f57eb33bf27e758bb7b094a52a197d977
Signed-off-by: Jean Christophe Beyler <jean.christophe.beyler@intel.com>
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/CompilerIR.h        |    2 +-
 vm/compiler/IntermediateRep.cpp |   10 +++-------
 2 files changed, 4 insertions(+), 8 deletions(-)

diff --git a/vm/compiler/CompilerIR.h b/vm/compiler/CompilerIR.h
index 50ae364..61f141d 100644
--- a/vm/compiler/CompilerIR.h
+++ b/vm/compiler/CompilerIR.h
@@ -469,7 +469,7 @@ void dvmCompilerAddInstructionsToBasicBlocks (CompilationUnit *cUnit, BitVector
 bool dvmCompilerInsertBasicBlockBetween (BasicBlock *newBlock, BasicBlock *parent, BasicBlock *child);
 
 /* Copy a BasicBlock */
-BasicBlock *dvmCompilerCopyBasicBlock (CompilationUnit *cUnit, const BasicBlock *old, bool addIt = true);
+BasicBlock *dvmCompilerCopyBasicBlock (CompilationUnit *cUnit, const BasicBlock *old);
 
 /* Update the predecessor information of old and new BB */
 void dvmCompilerUpdatePredecessors(BasicBlock *parent, BasicBlock *oldChild, BasicBlock *newChild);
diff --git a/vm/compiler/IntermediateRep.cpp b/vm/compiler/IntermediateRep.cpp
index 8e3f455..253d6c1 100644
--- a/vm/compiler/IntermediateRep.cpp
+++ b/vm/compiler/IntermediateRep.cpp
@@ -337,10 +337,9 @@ bool dvmCompilerInsertBasicBlockBetween (BasicBlock *newBlock, BasicBlock *paren
  * @brief Copy a BasicBlock
  * @param cUnit the CompilationUnit
  * @param old the old BasicBlock
- * @param addIt do we add the new block to the CompilationUnit's BasicBlock list
  * @return the new BasicBlock
  */
-BasicBlock *dvmCompilerCopyBasicBlock (CompilationUnit *cUnit, const BasicBlock *old, bool addIt)
+BasicBlock *dvmCompilerCopyBasicBlock (CompilationUnit *cUnit, const BasicBlock *old)
 {
     BasicBlock *resultBB = dvmCompilerNewBB (old->blockType, cUnit->numBlocks++);
 
@@ -368,11 +367,8 @@ BasicBlock *dvmCompilerCopyBasicBlock (CompilationUnit *cUnit, const BasicBlock
         dvmCompilerAppendMIR (resultBB, copy);
     }
 
-    //Do we insert it to the cUnit list?
-    if (addIt == true)
-    {
-        dvmInsertGrowableList (&cUnit->blockList, (intptr_t) resultBB);
-    }
+    //Insert it to the cUnit list
+    dvmInsertGrowableList (&cUnit->blockList, (intptr_t) resultBB);
 
     return resultBB;
 }
-- 
1.7.4.1

