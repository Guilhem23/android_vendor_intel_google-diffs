From bfa485fbe114a703808d68484fde0820c4217984 Mon Sep 17 00:00:00 2001
From: Yixin Shou <yixin.shou@intel.com>
Date: Wed, 24 Jul 2013 10:14:22 -0700
Subject: Dalvik: Use MOVQ to replace MOVSD

BZ: 125790

This patch replace MOVSD instruction used with MOVQ instruction. The MOVSD instruction
may places a dependence on the entire xmm register and not just the lower 64bits that
are important.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-CG
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: Ie1ecf387ad52e602a0bcf85234d6bca3beb386b6
Orig-MCG-Change-Id: Ieaa4ed565662dc2ab53e7aee836f60500dd27c6a
Signed-off-by: Yixin Shou <yixin.shou@intel.com>
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
Reviewed-on: http://android.intel.com:8080/123669
Reviewed-by: Popov, Ivan G <ivan.g.popov@intel.com>
Reviewed-by: Chen, Dong-Yuan <dong-yuan.chen@intel.com>
Tested-by: Chen, Dong-Yuan <dong-yuan.chen@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/codegen/x86/lightcg/LowerHelper.cpp |   18 ++++++++++++++++--
 1 files changed, 16 insertions(+), 2 deletions(-)

diff --git a/vm/compiler/codegen/x86/lightcg/LowerHelper.cpp b/vm/compiler/codegen/x86/lightcg/LowerHelper.cpp
index eee202e..cbcc482 100644
--- a/vm/compiler/codegen/x86/lightcg/LowerHelper.cpp
+++ b/vm/compiler/codegen/x86/lightcg/LowerHelper.cpp
@@ -2860,11 +2860,25 @@ void get_VR_ss(int vB, int reg, bool isPhysical) {
 void set_VR_ss(int vA, int reg, bool isPhysical) {
     return set_virtual_reg_all(vA, OpndSize_64, reg, isPhysical, Mnemonic_MOVSS);
 }
+
+/**
+ * @brief load 64bits wide VR to temporary or physical register reg
+ * @param vB virtual register number
+ * @param reg tempory register number or physical register number
+ * @param isPhysical false if reg is temporary register and true if reg is physical register
+ */
 void get_VR_sd(int vB, int reg, bool isPhysical) {
-    return get_virtual_reg_all(vB, OpndSize_64, reg, isPhysical, Mnemonic_MOVSD);
+    return get_virtual_reg_all(vB, OpndSize_64, reg, isPhysical, Mnemonic_MOVQ);
 }
+
+/**
+ * @brief store 64bits wide virtual register from register reg
+ * @param vA virtual register number
+ * @param reg tempory register number or physical register number
+ * @param isPhysical false if reg is temporary register and true if reg is physical register
+ */
 void set_VR_sd(int vA, int reg, bool isPhysical) {
-    return set_virtual_reg_all(vA, OpndSize_64, reg, isPhysical, Mnemonic_MOVSD);
+    return set_virtual_reg_all(vA, OpndSize_64, reg, isPhysical, Mnemonic_MOVQ);
 }
 ////////////////////////////////// END: IA32 native instructions //////////////
 
-- 
1.7.4.1

