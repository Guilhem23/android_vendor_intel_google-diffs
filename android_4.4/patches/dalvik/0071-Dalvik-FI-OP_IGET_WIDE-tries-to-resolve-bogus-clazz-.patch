From 8f1058be8fcdcf1dec67cb4ab99257bfb6949015 Mon Sep 17 00:00:00 2001
From: Johnnie Birch <johnnie.l.birch.jr@intel.com>
Date: Mon, 11 Feb 2013 09:31:01 -0800
Subject: Dalvik: FI OP_IGET_WIDE tries to resolve bogus clazz object

BZ: 86324

The FI interpreter implementation of OP_IGET_WIDE has a bug in the assembly
implementation where the rPC is sent as a parameter to dvmResolvedInstField
instead of clazz. This was introduced when we switched to Google's
implementation of the FI for all bytecodes. This is a functional issue but
the bug may be responsible for performance instability by causing exceptions
to be thrown unnecessarily. This patch corrects the issue by passing the
correct parameter to dvmResolveInstField. Note also ... this bug was blocking
the fix for another bug that is corrected by implementing OP_IGET_WIDE_VOLATILE.
OP_IPUT_WIDE_VOLATILE is based on the OP_IPUT_WIDE code.

Category: device-enablement
Domain: AOSP-Dalvik-Interpreter
Origin: internal
Upstream-Candidate: yes

Change-Id: I6b7413e30e9a1fd80428e8b4bd779b546e1b9996
Orig-MCG-Change-Id: Ifd2a343badf24ba6c2259e7aa98a4ba9225c9d02
Signed-off-by: Johnnie Birch <johnnie.l.birch.jr@intel.com>
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/mterp/out/InterpAsm-x86.S |    2 +-
 vm/mterp/x86/OP_IGET_WIDE.S  |    2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/vm/mterp/out/InterpAsm-x86.S b/vm/mterp/out/InterpAsm-x86.S
index 9c91010..58a55c1 100644
--- a/vm/mterp/out/InterpAsm-x86.S
+++ b/vm/mterp/out/InterpAsm-x86.S
@@ -2785,7 +2785,7 @@ dvmAsmInstructionStartCode = .L_OP_NOP
     movl    offThread_method(rIBASE),rIBASE     # rIBASE<- current method
     movl    offMethod_clazz(rIBASE),rIBASE      # rIBASE<- method->clazz
     SPILL_TMP1(%ecx)                            # save objpointer across call
-    movl    rPC,OUT_ARG0(%esp)                  # pass in method->clazz
+    movl    rIBASE,OUT_ARG0(%esp)                  # pass in method->clazz
     call    dvmResolveInstField                 #  ... to dvmResolveInstField
     UNSPILL_TMP1(%ecx)
     testl   %eax,%eax                           # returns InstrField ptr
diff --git a/vm/mterp/x86/OP_IGET_WIDE.S b/vm/mterp/x86/OP_IGET_WIDE.S
index 723c9b7..48032e3 100644
--- a/vm/mterp/x86/OP_IGET_WIDE.S
+++ b/vm/mterp/x86/OP_IGET_WIDE.S
@@ -26,7 +26,7 @@
     movl    offThread_method(rIBASE),rIBASE     # rIBASE<- current method
     movl    offMethod_clazz(rIBASE),rIBASE      # rIBASE<- method->clazz
     SPILL_TMP1(%ecx)                            # save objpointer across call
-    movl    rPC,OUT_ARG0(%esp)                  # pass in method->clazz
+    movl    rIBASE,OUT_ARG0(%esp)                  # pass in method->clazz
     call    dvmResolveInstField                 #  ... to dvmResolveInstField
     UNSPILL_TMP1(%ecx)
     testl   %eax,%eax                           # returns InstrField ptr
-- 
1.7.4.1

