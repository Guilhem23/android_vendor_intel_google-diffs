From bcdf9be2afe03dc70904201c0765962c56afff32 Mon Sep 17 00:00:00 2001
From: Vladimir Kostyukov <vladimir.kostyukov@intel.com>
Date: Wed, 18 Sep 2013 16:47:30 +0700
Subject: Dalvik: Enables WITH_JIT_TUNING for libpcgdvmjit target

BZ: 137758

The PCG build is not working in assert mode due to difference in
'DvmJitGlobals' structure size, which is happened due to different
build profiles for 'libdvm_assert' and 'libpcgdvmjit' targets.
Both targets should be built with the same set of options. Thus,
this patch enables the missed WITH_JIT_TUNING option for 'libpcgdvmjit'
target. The patch has been suggested by NSK QA team.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-CG
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: I86859698bf59abc2fc89830e91241adb6bba2bce
Orig-MCG-Change-Id: Id831d89ff42985d1b1b1ceb2eac6045d97369729
Signed-off-by: Vladimir Kostyukov <vladimir.kostyukov@intel.com>
Reviewed-on: http://android.intel.com:8080/132839
Reviewed-by: Lupusoru, Razvan A <razvan.a.lupusoru@intel.com>
Reviewed-by: Hartley, Timothy D <timothy.d.hartley@intel.com>
Reviewed-by: lab_aqa <lab_aqa@intel.com>
Reviewed-by: Provodin, Vitaly A <vitaly.a.provodin@intel.com>
Reviewed-by: Katkov, Serguei I <serguei.i.katkov@intel.com>
Reviewed-by: Chen, Dong-Yuan <dong-yuan.chen@intel.com>
Tested-by: Chen, Dong-Yuan <dong-yuan.chen@intel.com>
Reviewed-by: Beyler, Jean Christophe <jean.christophe.beyler@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/codegen/x86/pcg/Android.mk |   55 ++++++++++++++++++++++++++++++++
 1 files changed, 55 insertions(+), 0 deletions(-)

diff --git a/vm/compiler/codegen/x86/pcg/Android.mk b/vm/compiler/codegen/x86/pcg/Android.mk
index ff3767c..dcf2317 100644
--- a/vm/compiler/codegen/x86/pcg/Android.mk
+++ b/vm/compiler/codegen/x86/pcg/Android.mk
@@ -64,6 +64,61 @@ LOCAL_SRC_FILES := \
 
 LOCAL_SHARED_LIBRARIES += libcutils libdvm libdl
 LOCAL_C_INCLUDES += \
+    dalvik \
+    dalvik/vm \
+    dalvik/vm/compiler \
+    dalvik/vm/compiler/codegen/x86 \
+    dalvik/vm/compiler/codegen/x86/lightcg \
+    dalvik/vm/compiler/codegen/x86/lightcg/libenc \
+    prebuilts/ndk/8/sources/cxx-stl/gnu-libstdc++/include \
+    prebuilts/ndk/8/sources/cxx-stl/gnu-libstdc++/libs/x86/include \
+    bionic \
+    bionic/libstdc++/include
+
+include $(BUILD_SHARED_LIBRARY)
+
+#
+# Build libpcgdvmjit with JIT_TUNING
+#
+include $(CLEAR_VARS)
+
+ifeq ($(TARGET_CPU_SMP),true)
+    target_smp_flag := -DANDROID_SMP=1
+else
+    target_smp_flag := -DANDROID_SMP=0
+endif
+host_smp_flag := -DANDROID_SMP=1
+
+LOCAL_MODULE_TAGS := optional
+LOCAL_MODULE := libpcgdvmjit_tuning
+LOCAL_CFLAGS += $(target_smp_flag)
+LOCAL_CFLAGS += -DARCH_IA32 -DWITH_JIT -DWITH_HOUDINI -DWITH_REGION_GC -DVTUNE_DALVIK -DEXTRA_SCRATCH_VR -DMTERP_STUB -DMTERP_NO_UNALIGN_64 -Wall -Wextra -O3
+LOCAL_CFLAGS += -DWITH_JIT_TUNING
+LOCAL_ALLOW_UNDEFINED_SYMBOLS := true
+TARGET_LIBGCC = $(shell $(TARGET_CC) -m32 -print-libgcc-file-name)
+#LOCAL_LDFLAGS += -Wl,--whole-archive $(TARGET_LIBGCC) -Wl,--no-whole-archive
+LOCAL_STATIC_LIBRARIES += libpcg libirc_pcg libsvml libgnustl_static
+LOCAL_SRC_FILES := \
+    Analysis.cpp \
+    Client.cpp \
+    ChainingCellException.cpp \
+    CodeGeneration.cpp \
+    CompilationUnitPCG.cpp \
+    Labels.cpp \
+    LowerALU.cpp \
+    LowerArray.cpp \
+    LowerCall.cpp \
+    LowerExtended.cpp \
+    LowerGetPut.cpp \
+    LowerJump.cpp \
+    LowerMemory.cpp \
+    LowerOther.cpp \
+    PcgInterface.cpp \
+    PersistentInfo.cpp \
+    UtilityPCG.cpp
+
+LOCAL_SHARED_LIBRARIES += libcutils libdvm libdl
+LOCAL_C_INCLUDES += \
 	dalvik \
 	dalvik/vm \
 	dalvik/vm/compiler \
-- 
1.7.4.1

