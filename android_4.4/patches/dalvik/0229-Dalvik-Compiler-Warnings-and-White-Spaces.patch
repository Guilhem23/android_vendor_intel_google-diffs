From 5af0cb791ee8b281871efcff9e52241899e247f9 Mon Sep 17 00:00:00 2001
From: Jean Christophe Beyler <jean.christophe.beyler@intel.com>
Date: Wed, 10 Jul 2013 10:09:06 -0700
Subject: Dalvik: Compiler Warnings and White Spaces

BZ: 122665

Fixed Compiler warnings and white spaces

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-ME
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: I9e8e8a7b65848fd5aaa05f725058eef2b02c5a17
Orig-MCG-Change-Id: I7e333155feb27c31fe52011f6c1761258a294090
Signed-off-by: Jean Christophe Beyler <jean.christophe.beyler@intel.com>
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/JitProfiling.cpp |   24 ++++++++++++++++--------
 1 files changed, 16 insertions(+), 8 deletions(-)

diff --git a/vm/compiler/JitProfiling.cpp b/vm/compiler/JitProfiling.cpp
index 5fea90c..ff85ae6 100644
--- a/vm/compiler/JitProfiling.cpp
+++ b/vm/compiler/JitProfiling.cpp
@@ -126,7 +126,7 @@ struct MethodCode {
   }
 
   /* Checks if the block contains the specified address*/
-  const bool contains(const char * addr) {
+  bool contains(const char * addr) {
       return this->addr <= addr && addr < end();
   }
 };
@@ -410,7 +410,6 @@ ITT_EXTERN_C iJIT_IsProfilingActiveFlags JITAPI iJIT_IsProfilingActive()
 static int loadiJIT_Funcs()
 {
     static int bDllWasLoaded = 0;
-    char *dllName = (char*)rcsid; /* !! Just to avoid unused code elimination */
 #if ITT_PLATFORM==ITT_PLATFORM_WIN
     DWORD dNameLength = 0;
 #endif /* ITT_PLATFORM==ITT_PLATFORM_WIN */
@@ -441,7 +440,7 @@ static int loadiJIT_Funcs()
     if (dNameLength)
     {
         DWORD envret = 0;
-        dllName = (char*)malloc(sizeof(char) * (dNameLength + 1));
+        char *dllName = (char*)malloc(sizeof(char) * (dNameLength + 1));
         envret = GetEnvironmentVariableA(NEW_DLL_ENVIRONMENT_VAR,
                                          dllName, dNameLength);
         if (envret)
@@ -457,7 +456,7 @@ static int loadiJIT_Funcs()
         if (dNameLength)
         {
             DWORD envret = 0;
-            dllName = (char*)malloc(sizeof(char) * (dNameLength + 1));
+            char *dllName = (char*)malloc(sizeof(char) * (dNameLength + 1));
             envret = GetEnvironmentVariableA(DLL_ENVIRONMENT_VAR,
                                              dllName, dNameLength);
             if (envret)
@@ -469,14 +468,23 @@ static int loadiJIT_Funcs()
         }
     }
 #else  /* ITT_PLATFORM==ITT_PLATFORM_WIN */
-    dllName = getenv(NEW_DLL_ENVIRONMENT_VAR);
-    if (!dllName)
+    const char *dllName = getenv(NEW_DLL_ENVIRONMENT_VAR);
+    //If not defined
+    if (dllName == 0)
+    {
+        //Try another environment variable
         dllName = getenv(DLL_ENVIRONMENT_VAR);
+    }
 #ifdef ANDROID
-    if (!dllName)
+    //If still not defined
+    if (dllName == 0)
+    {
+        //Define as the default android path
         dllName = ANDROID_JIT_AGENT_PATH;
+    }
 #endif
-    if (dllName)
+    //If defined
+    if (dllName != 0)
     {
         /* Try to load the dll from the PATH... */
         m_libHandle = dlopen(dllName, RTLD_LAZY);
-- 
1.7.4.1

