From 74785df1c0ed1aef885d8b6a06c912adb6e44d55 Mon Sep 17 00:00:00 2001
From: Dong-Yuan Chen <dong-yuan.chen@intel.com>
Date: Sat, 17 Aug 2013 22:15:23 -0700
Subject: Dalvik: libdvm.so and PCG GL disagree on size of DvmJitGlobals

BZ: 129853

DvmJitGlobals has a "std::string backendString" element. Since the PCG GL is
compiled against libgnu_stl and libdvm.so is compiled against stlport, these
elements are different sizes. Hence, including this element in a shared data
structure leads to bad offsets for elements after it.

The patch changes the (unused) backendString element to char * type, and adds
a check to ensure the ME and the libdvm.so agree on the size of this data
structure.

Further, this patch changes the prototype of the dalvikPluginInit function to
return a boolean, where true return values equal success.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-CG; AOSP-Dalvik-Compiler-ME; AOSP-Dalvik-Runtime
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: Ie5c04553e92132967d7061db07a0f2c204248ca8
Orig-MCG-Change-Id: I4345858af11927a8c26b1d21995bbadd9600b1a1
Signed-off-by: Tim Hartley <timothy.d.hartley@intel.com>
Reviewed-on: http://android.intel.com:8080/124803
Reviewed-by: Kreitzer, David L <david.l.kreitzer@intel.com>
Reviewed-by: Dittert, Eric <eric.dittert@intel.com>
Reviewed-by: Banerji, Udayan <udayan.banerji@intel.com>
Reviewed-by: lab_aqa <lab_aqa@intel.com>
Reviewed-by: Ignatenko, Aleksey V <aleksey.v.ignatenko@intel.com>
Reviewed-by: Semukhina, Elena V <elena.v.semukhina@intel.com>
Reviewed-by: Beyler, Jean Christophe <jean.christophe.beyler@intel.com>
Reviewed-by: Chen, Dong-Yuan <dong-yuan.chen@intel.com>
Tested-by: Chen, Dong-Yuan <dong-yuan.chen@intel.com>
Reviewed-by: Lupusoru, Razvan A <razvan.a.lupusoru@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
Reviewed-on: http://android.intel.com:8080/125991
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/Globals.h                                       |    2 +-
 vm/compiler/Compiler.h                             |    3 +++
 vm/compiler/LoopOpt.cpp                            |    4 ++--
 .../codegen/x86/lightcg/CodegenInterface.cpp       |   11 +++++++++++
 vm/compiler/codegen/x86/pcg/PcgInterface.cpp       |   14 ++++++++++++--
 5 files changed, 29 insertions(+), 5 deletions(-)

diff --git a/vm/Globals.h b/vm/Globals.h
index e552358..6a606ac 100644
--- a/vm/Globals.h
+++ b/vm/Globals.h
@@ -1031,7 +1031,7 @@ struct DvmJitGlobals {
     std::map<std::string, std::string> backendOptions;
 
     /* Unprocessed string for the backend */
-    std::string backendString;
+    char * backendString;
 
     /* Flag to control which loop detection system is being used */
     bool oldLoopDetection;
diff --git a/vm/compiler/Compiler.h b/vm/compiler/Compiler.h
index 3d71cb5..6e22b36 100644
--- a/vm/compiler/Compiler.h
+++ b/vm/compiler/Compiler.h
@@ -202,6 +202,9 @@ struct MIR;
 class LoopInformation;
 #endif
 
+#ifdef ARCH_IA32
+bool dvmCompilerDataStructureSizeCheck(int);
+#endif
 bool dvmCompilerSetupCodeCache(void);
 bool dvmCompilerArchInit(void);
 void dvmCompilerArchDump(void);
diff --git a/vm/compiler/LoopOpt.cpp b/vm/compiler/LoopOpt.cpp
index 6adbebe..e3147b9 100644
--- a/vm/compiler/LoopOpt.cpp
+++ b/vm/compiler/LoopOpt.cpp
@@ -610,10 +610,10 @@ void dvmCompilerHandleUserPlugin (const char *fileName)
         else
         {
             //Transform it into a function pointer
-            void (*ptr) (void) = (void (*) (void)) (tmp);
+            bool (*pluginInitialization) (void) = (bool (*) (void)) (tmp);
 
             //Call it
-            ptr ();
+            failure = (pluginInitialization () == false);
         }
     }
     else
diff --git a/vm/compiler/codegen/x86/lightcg/CodegenInterface.cpp b/vm/compiler/codegen/x86/lightcg/CodegenInterface.cpp
index adecc76..c067168 100644
--- a/vm/compiler/codegen/x86/lightcg/CodegenInterface.cpp
+++ b/vm/compiler/codegen/x86/lightcg/CodegenInterface.cpp
@@ -2755,3 +2755,14 @@ void x86StandAloneArchSpecificDumpBB (CompilationUnit *cUnit, BasicBlock *bb, FI
         curBB->associationTable.printToDot(file);
     }
 }
+
+/**
+ * @brief A function to check the size of the DvmJitGlobals data structure
+ * @details This function checks the size of the DvmJitGlobals data structure, to ensure consistent usage across shared objects compiled apart from libdvm.so.
+ * @param dvmJitGlobalsSize The size of DvmJitGlobals, from the view of a dynamically loaded .so
+ * @return true if the size passed as an argument matches the size of the DvmJitGlobals object, from the perspective of libdvm.so.
+ */
+bool dvmCompilerDataStructureSizeCheck(int dvmJitGlobalsSize)
+{
+    return (dvmJitGlobalsSize == sizeof(DvmJitGlobals));
+}
diff --git a/vm/compiler/codegen/x86/pcg/PcgInterface.cpp b/vm/compiler/codegen/x86/pcg/PcgInterface.cpp
index d606c9b..68ebf64 100644
--- a/vm/compiler/codegen/x86/pcg/PcgInterface.cpp
+++ b/vm/compiler/codegen/x86/pcg/PcgInterface.cpp
@@ -210,7 +210,8 @@ static BasicBlock *pcgBBAllocator (void)
 /**
  * @brief Initialization of the plugin for the PCG back-end
  */
-extern "C" void setupPcgJit (void) {
+extern "C" void setupPcgJit (void)
+{
     //Now set the default function pointers
     SJitFramework &jitFramework = gDvmJit.jitFramework;
 
@@ -225,8 +226,16 @@ extern "C" void setupPcgJit (void) {
 
 /**
  * @brief Plugin initialization
+ * @return true if successfully initialized, false if otherwise
  */
-extern "C" void dalvikPluginInit (void) {
+extern "C" bool dalvikPluginInit (void)
+{
+    if (dvmCompilerDataStructureSizeCheck(sizeof(DvmJitGlobals)) == false)
+    {
+        ALOGE ("PCG error: Critical datastructures in the DVM ME and PCG GL have different sizes, not loading.");
+        return false;
+    }
+
     ALOGI ("\n+++++++++++++ Using PCG. +++++++++++++++++++++\n");
 
     // Initialize PCG.
@@ -238,4 +247,5 @@ extern "C" void dalvikPluginInit (void) {
     dvmCompilerRemovePass("Iget_Iput_Removal");
     dvmCompilerRemovePass("Accumulation_Sinking");
     dvmCompilerRemovePass("DDDO_Optimization");
+    return true;
 }
-- 
1.7.4.1

