From 221f17b39c4ca88d3e468c79ca19fecc26a7d468 Mon Sep 17 00:00:00 2001
From: Dmitry Petrochenko <dmitry.petrochenko@intel.com>
Date: Wed, 21 Aug 2013 00:28:11 +0700
Subject: Dalvik: PCG: Register 64-bit integer arithmetic as a callbacks

BZ: 132063

Before switch to MR2 the Android.mk in x86/pcg included all symbols
from gcc library. Now we include only required symbols (reduced set).

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-CG
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: I58d339a5856cc245d8a3eb2dad895744a35865bc
Orig-MCG-Change-Id: If1cb164e48b39836efe7ed07d8d97632c8360bd6
Signed-off-by: Dmitry Petrochenko <dmitry.petrochenko@intel.com>
Reviewed-on: http://android.intel.com:8080/126548
Tested-by: Chen, Dong-Yuan <dong-yuan.chen@intel.com>
Reviewed-by: Chen, Dong-Yuan <dong-yuan.chen@intel.com>
Reviewed-by: Dittert, Eric <eric.dittert@intel.com>
Reviewed-by: Hartley, Timothy D <timothy.d.hartley@intel.com>
Reviewed-by: Provodin, Vitaly A <vitaly.a.provodin@intel.com>
Reviewed-by: Lupusoru, Razvan A <razvan.a.lupusoru@intel.com>
Reviewed-by: Beyler, Jean Christophe <jean.christophe.beyler@intel.com>
Reviewed-by: lab_aqa <lab_aqa@intel.com>
Reviewed-by: Maslov, Sergey V <sergey.v.maslov@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/codegen/x86/pcg/PcgInterface.cpp |   14 ++++++++++++++
 1 files changed, 14 insertions(+), 0 deletions(-)

diff --git a/vm/compiler/codegen/x86/pcg/PcgInterface.cpp b/vm/compiler/codegen/x86/pcg/PcgInterface.cpp
index 68ebf64..8c78257 100644
--- a/vm/compiler/codegen/x86/pcg/PcgInterface.cpp
+++ b/vm/compiler/codegen/x86/pcg/PcgInterface.cpp
@@ -172,6 +172,13 @@ static void dvmCompilerPcgCreateCallBack (const char * name, void *addr)
 
 //External definition for the module initialization
 extern "C" int64_t __muldi3(int64_t, int64_t);
+extern "C" int64_t __divdi3(int64_t, int64_t);
+extern "C" int64_t __udivdi3(uint64_t, uint64_t);
+extern "C" int64_t __moddi3(int64_t, int64_t);
+extern "C" int64_t __umoddi3(uint64_t, uint64_t);
+extern "C" int64_t __ashldi3(int64_t, int32_t);
+extern "C" int64_t __ashrdi3(int64_t, int32_t);
+extern "C" int64_t __lshrdi3(int64_t, int32_t);
 
 /**
  * @brief PCG module level initialization
@@ -182,6 +189,13 @@ void pcgModuleBegin (void)
 
     //Add muldi3
     dvmCompilerPcgCreateCallBack("__muldi3", (void *) __muldi3);
+    dvmCompilerPcgCreateCallBack("__divdi3", (void *) __divdi3);
+    dvmCompilerPcgCreateCallBack("__udivdi3", (void *) __udivdi3);
+    dvmCompilerPcgCreateCallBack("__moddi3", (void *) __moddi3);
+    dvmCompilerPcgCreateCallBack("__umoddi3", (void *) __umoddi3);
+    dvmCompilerPcgCreateCallBack("__ashldi3", (void *) __ashldi3);
+    dvmCompilerPcgCreateCallBack("__ashrdi3", (void *) __ashrdi3);
+    dvmCompilerPcgCreateCallBack("__lshrdi3", (void *) __lshrdi3);
 
 #ifdef DEBUG_HOOK
     void *hookPtr = dvmCompilerPcgCreateHookFunction ();
-- 
1.7.4.1

