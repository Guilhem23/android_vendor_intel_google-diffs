From c9d0a60cbd27fa1d44d261942926f296805bcf08 Mon Sep 17 00:00:00 2001
From: Serguei Katkov <serguei.i.katkov@intel.com>
Date: Thu, 18 Jul 2013 15:19:31 +0700
Subject: Dalvik: peelLoop uses operator of map incorrectly - again

BZ: 124326

STL map [] operator always creates a new entry if used key is not
in the map while peelLoop expects that [] returns 0 in this case.
Patch uses count() member function to check whether the key is in map.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-ME
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: Ic047c2b9eb786c0b70c53da526d48e577bd2650f
Orig-MCG-Change-Id: I1c3ff33b02ee6de77560096772ca5adfb244a9e5
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/LoopInformation.cpp |   12 ++++--------
 1 files changed, 4 insertions(+), 8 deletions(-)

diff --git a/vm/compiler/LoopInformation.cpp b/vm/compiler/LoopInformation.cpp
index d7796da..4ab07b5 100644
--- a/vm/compiler/LoopInformation.cpp
+++ b/vm/compiler/LoopInformation.cpp
@@ -1239,13 +1239,11 @@ void LoopInformation::peelLoopHelper (CompilationUnit *cUnit)
         //Transform the taken and fallthrough using the associations
         if (taken != 0)
         {
-            BasicBlock *newTaken = associations[taken];
-
             //Update the association if we have one
-            if (newTaken != 0)
+            if (associations.count (taken) > 0)
             {
                 //Now update the link
-                copy->taken = newTaken;
+                copy->taken = associations[taken];
             }
             else
             {
@@ -1263,13 +1261,11 @@ void LoopInformation::peelLoopHelper (CompilationUnit *cUnit)
 
         if (fallThrough != 0)
         {
-            BasicBlock *newFallThrough = associations[fallThrough];
-
             //Update the association if we have one
-            if (newFallThrough != 0)
+            if (associations.count (fallThrough) > 0)
             {
                 //Now update the link
-                copy->fallThrough = newFallThrough;
+                copy->fallThrough = associations[fallThrough];
             }
             else
             {
-- 
1.7.4.1

