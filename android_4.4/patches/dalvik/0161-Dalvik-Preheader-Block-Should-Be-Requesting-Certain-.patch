From 61af3d211ea030fec0bf6b082cda2e4d7092e4d7 Mon Sep 17 00:00:00 2001
From: Jean Christophe Beyler <jean.christophe.beyler@intel.com>
Date: Wed, 24 Apr 2013 15:10:11 -0700
Subject: Dalvik: Preheader Block Should Be Requesting Certain WriteBacks

BZ: 103346

The PreHeader block of a loop should be requesting writebacks for every
register except those explicitly asked by kOpRegisterize instructions.

Category: device-enablement
Domain: AOSP-Dalvik-Compiler-ME
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: I45c14cafa111c0a9ec46a137f4fc83392f1512ee
Orig-MCG-Change-Id: I58460f641e2103fa35d666910a4f3ee379753c87
Signed-off-by: Jean Christophe Beyler <jean.christophe.beyler@intel.com>
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
Signed-off-by: Serguei Katkov <serguei.i.katkov@intel.com>
---
 vm/compiler/RegisterizationME.cpp |   32 +++++++++++++++++++++++++++++++-
 1 files changed, 31 insertions(+), 1 deletions(-)

diff --git a/vm/compiler/RegisterizationME.cpp b/vm/compiler/RegisterizationME.cpp
index a24c02e..d319996 100644
--- a/vm/compiler/RegisterizationME.cpp
+++ b/vm/compiler/RegisterizationME.cpp
@@ -219,6 +219,36 @@ static void handleWriteBackRequestsPostLoop (const CompilationUnit *cUnit, const
 }
 
 /**
+ * @brief Handle write backs requests for the PreHeader, we want to not write back the registerize requests
+ * @param preHeader the preHeader block
+ */
+static void handlePreHeaderWriteBackRequests (BasicBlock *preHeader)
+{
+    //Get a local version of the requests
+    BitVector *requests = preHeader->requestWriteBack;
+
+    //Go through the instructions
+    for (MIR *mir = preHeader->firstMIRInsn; mir != 0; mir = mir->next)
+    {
+        //Get local version of the instruction
+        const DecodedInstruction &insn = mir->dalvikInsn;
+
+        //Get the opcode
+        int opcode = insn.opcode;
+
+        //If it's a registerize
+        if (opcode == kMirOpRegisterize)
+        {
+            //Get the register
+            int reg = insn.vA;
+
+            //Clear it's bit from the write back requests
+            dvmClearBit (requests, reg);
+        }
+    }
+}
+
+/**
  * @brief Handle write backs requests for a given BitVector representing blocks
  * @param cUnit the CompilationUnit
  * @param blocks a BitVector representing which BasicBlocks to handle
@@ -432,7 +462,7 @@ static void registerizeLoop (CompilationUnit *cUnit, const LoopInformation *info
     assert (preHeader->requestWriteBack != 0);
 
     //Clear the writebacks for the loop preheader
-    dvmClearAllBits (preHeader->requestWriteBack);
+    handlePreHeaderWriteBackRequests (preHeader);
 
     //Handle the backward chaining cells of the loop
     const BitVector *backwards = info->getBackwardBranches ();
-- 
1.7.4.1

