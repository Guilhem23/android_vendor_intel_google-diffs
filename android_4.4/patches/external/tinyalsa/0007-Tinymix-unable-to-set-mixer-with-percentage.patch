From 0d10b805c41daf2aef442b753e42d19ff8a78545 Mon Sep 17 00:00:00 2001
From: Baptiste Robert <baptistex.robert@intel.com>
Date: Fri, 23 Aug 2013 13:44:48 +0200
Subject: Tinymix: unable to set mixer with percentage

BZ: 129140
[CLEAN]

Currently, it is not possible to set a percentage value in a mixer.

This patch set purpose is to able to set a mixer with percentage.

Category: aosp improvement
Domain: AudioComms-Tinyalsa
Origin: internal
Upstream-Candidate: yes
Change-Id: I8363df148c9e9bafe697e47f3c828bbfcb407fdb
Orig-Change-Id: I2d94f1c21a5cf8b0572e36dc6d1c2491b6e78b35
Signed-off-by: Baptiste Robert <baptistex.robert@intel.com>
---
 tinymix.c |   53 ++++++++++++++++++++++++++++++++++++-----------------
 1 files changed, 36 insertions(+), 17 deletions(-)

diff --git a/tinymix.c b/tinymix.c
index afc2fee..66a3042 100644
--- a/tinymix.c
+++ b/tinymix.c
@@ -31,6 +31,7 @@
 #include <stdlib.h>
 #include <ctype.h>
 #include <string.h>
+#include <errno.h>
 
 static void tinymix_list_controls(struct mixer *mixer);
 static void tinymix_detail_control(struct mixer *mixer, const char *control,
@@ -197,26 +198,44 @@ static void tinymix_set_value(struct mixer *mixer, const char *control,
     num_ctl_values = mixer_ctl_get_num_values(ctl);
 
     if (isdigit(values[0][0])) {
-        if (num_values == 1) {
-            /* Set all values the same */
-            int value = atoi(values[0]);
+        char *endptr = NULL;
+        long value;
+        /* Initialize a function pointer of mixer_ctl_set_... type */
+        int (*mixer_ctl_set)(struct mixer_ctl*, unsigned int, int) = NULL;
+        errno = 0;
 
-            for (i = 0; i < num_ctl_values; i++) {
-                if (mixer_ctl_set_value(ctl, i, value)) {
-                    fprintf(stderr, "Error: invalid value\n");
-                    return;
-                }
-            }
-        } else {
-            /* Set multiple values */
-            if (num_values > num_ctl_values) {
-                fprintf(stderr,
-                        "Error: %d values given, but control only takes %d\n",
-                        num_values, num_ctl_values);
+        if (num_values > num_ctl_values) {
+            fprintf(stderr,
+                    "Error: %d values given, but control only takes %d\n",
+                    num_values, num_ctl_values);
+            return;
+        }
+
+        for (i = 0; i < num_values; i++) {
+            value = strtol(values[i], &endptr, 10);
+
+            if (errno != 0) {
+                perror("strtol");
                 return;
             }
-            for (i = 0; i < num_values; i++) {
-                if (mixer_ctl_set_value(ctl, i, atoi(values[i]))) {
+
+            if (*endptr == '%') {
+                mixer_ctl_set = mixer_ctl_set_percent;
+            } else {
+                mixer_ctl_set = mixer_ctl_set_value;
+            }
+
+            if (num_values == 1) {
+                /* Set all values the same */
+                for (i = 0; i < num_ctl_values; i++) {
+                    if (mixer_ctl_set(ctl, i, (int)value)) {
+                        fprintf(stderr, "Error: invalid value for index %d\n", i);
+                        return;
+                    }
+                }
+            } else {
+                /* Set multiple values */
+                if (mixer_ctl_set(ctl, i, (int)value)) {
                     fprintf(stderr, "Error: invalid value for index %d\n", i);
                     return;
                 }
-- 
1.7.4.1

