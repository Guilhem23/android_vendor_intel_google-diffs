From 79173f221ac92014be1f7231c4969fbebf43e86c Mon Sep 17 00:00:00 2001
From: Matthieu Mauger <matthieux.mauger@intel.com>
Date: Mon, 29 Jul 2013 17:23:49 +0200
Subject: [PORT FROM MAIN] wifi/hotspot: Enable 5GHz and offer advanced settings to the user

BZ: 120839 123820

This patch allows the user to configure the WiFi Hotspot in an advanced way. The
user can now choose the band (2.4 or 5 GHz), change the hw mode ('bg', 'a' or
'ac'), set the 80211n mode and select the radio channel according to local
regulatory.
The UI is also ready to act on routing parameters like IP address and subnet
mask.

Technically this patch:
- Set the hostapd supplicant with hw, 80211n, channel and country parameters.
- Save and retrieve user choices with ConfigStore.
- Get from driver the allowed radio channels according to local regulatory.
- Reset the radio parameters when they are no more applicable in the new locale.

Change-Id: I4a5df05ee67c09b120c896d5155df960e90565ee
Orig-Change-Id: If2074ea2450dfbe6e9cad6356138a91daacc0cca
Category: device enablement
Domain: CWS.WIFI-Common
Origin: upstream
Upstream-Candidate: no,proprietary
Signed-off-by: Matthieu Mauger <matthieux.mauger@intel.com>
---
 hostapd/ctrl_iface.c |   43 +++++++++++++++++++++++++++++++++++++++++++
 src/ap/ap_drv_ops.c  |   25 +++++++++++++++++++++++--
 2 files changed, 66 insertions(+), 2 deletions(-)

diff --git a/hostapd/ctrl_iface.c b/hostapd/ctrl_iface.c
index c957eca..77c12a5 100644
--- a/hostapd/ctrl_iface.c
+++ b/hostapd/ctrl_iface.c
@@ -953,6 +953,46 @@ static int hostapd_ctrl_iface_disable(struct hostapd_iface *iface)
 }
 
 
+static int hostapd_ctrl_iface_chan_list(struct hostapd_data *hapd,
+					 char *buf, size_t buflen)
+{
+	struct hostapd_hw_modes *modes;
+	int i, j, len, ret;
+	len = 0;
+
+	if (hapd == NULL || hapd->iface == NULL || hapd->iface->hw_features == NULL)
+		return -1;
+
+	modes = hapd->iface->hw_features;
+
+	for (i = 0; i < hapd->iface->num_hw_features; i++) {
+		for (j = 0; j < modes[i].num_channels; j++) {
+			if (modes[i].channels[j].flag &  (HOSTAPD_CHAN_DISABLED |
+											  HOSTAPD_CHAN_PASSIVE_SCAN |
+											  HOSTAPD_CHAN_NO_IBSS |
+											  HOSTAPD_CHAN_RADAR)
+					|| (modes[i].channels[j].freq >= 5260
+							&& modes[i].channels[j].freq <= 5700)
+					/* workaround : forbid channel 165 because bcm stack
+					 * does not support it
+					 */
+					|| modes[i].channels[j].freq == 5825)
+				continue;
+			ret = os_snprintf(buf + len, buflen - len, "%u ",
+					modes[i].channels[j].chan);
+			if (ret < 0 || (size_t) ret >= buflen - len -1)
+				break;
+			len += ret;
+		}
+	}
+	ret = os_snprintf(buf + len, buflen - len, "\n");
+	if (ret < 0 || (size_t) ret >= buflen - len)
+		return len;
+	len += ret;
+	return len;
+}
+
+
 static void hostapd_ctrl_iface_receive(int sock, void *eloop_ctx,
 				       void *sock_ctx)
 {
@@ -1031,6 +1071,9 @@ static void hostapd_ctrl_iface_receive(int sock, void *eloop_ctx,
 	} else if (os_strncmp(buf, "STA-NEXT ", 9) == 0) {
 		reply_len = hostapd_ctrl_iface_sta_next(hapd, buf + 9, reply,
 							reply_size);
+	} else if (os_strncmp(buf, "AP-CHAN-LIST", 12) == 0) {
+		reply_len = hostapd_ctrl_iface_chan_list(hapd, reply,
+							reply_size);
 	} else if (os_strcmp(buf, "ATTACH") == 0) {
 		if (hostapd_ctrl_iface_attach(hapd, &from, fromlen))
 			reply_len = -1;
diff --git a/src/ap/ap_drv_ops.c b/src/ap/ap_drv_ops.c
index 3072562..77f0a50 100644
--- a/src/ap/ap_drv_ops.c
+++ b/src/ap/ap_drv_ops.c
@@ -565,10 +565,31 @@ int hostapd_sta_set_flags(struct hostapd_data *hapd, u8 *addr,
 
 int hostapd_set_country(struct hostapd_data *hapd, const char *country)
 {
-	if (hapd->driver == NULL ||
-	    hapd->driver->set_country == NULL)
+	if (hapd->driver == NULL)
+		return 0;
+#ifdef ANDROID
+	/* Specific Broadcom since their chip doesn't support neither nl80211 legacy
+	 * "set_country" command, nor "00" default country code.
+	 */
+	if (hapd->driver->driver_cmd == NULL)
+		return 0;
+	char *reply;
+	const int reply_size = 4096;
+	reply = os_malloc(reply_size);
+	if (reply == NULL)
+		return 0;
+	char cmd[80];
+	strcpy(cmd, "COUNTRY ");
+	if (strcmp(country, "00 "))
+		strcat(cmd, country);
+	else
+		strcat(cmd, "XV ");
+	return hapd->driver->driver_cmd(hapd->drv_priv, cmd, reply, reply_size);
+#else
+	if (hapd->driver->set_country == NULL)
 		return 0;
 	return hapd->driver->set_country(hapd->drv_priv, country);
+#endif
 }
 
 
-- 
1.7.4.1

