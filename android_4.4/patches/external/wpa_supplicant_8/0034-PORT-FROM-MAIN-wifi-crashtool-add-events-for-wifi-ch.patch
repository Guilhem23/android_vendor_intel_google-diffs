From 8928983075be0c4646d9580a540dee945e68a681 Mon Sep 17 00:00:00 2001
From: Mathieu Bivert <mathieu.bivert@intel.com>
Date: Mon, 3 Jun 2013 17:07:16 +0200
Subject: [PORT FROM MAIN] wifi/crashtool: add events for wifi channels

BZ: 113145

Add event to retrieve frequency in use by wireless networking.

Change-Id: I46ad4795cbc4b2b9dd567a5df4d17773fe5f37f2
Orig-Change-Id: I240c4720dddf49212bc920eb3fa3423db5e91cb6
Category: device enablement
Domain: CWS.WIFI-Common
Origin: upstream
Upstream-Candidate: no,proprietary
Signed-off-by: Mathieu Bivert <mathieu.bivert@intel.com>
Reviewed-on: http://android.intel.com:8080/122738
Reviewed-by: buildbot <buildbot@intel.com>
Reviewed-by: Fiat, Christophe <christophe.fiat@intel.com>
Tested-by: Champciaux, Nicolas <nicolas.champciaux@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
---
 src/ap/hostapd.c                |    8 ++++++++
 wpa_supplicant/p2p_supplicant.c |    5 +++++
 wpa_supplicant/wpa_supplicant.c |   15 +++++++++++++--
 3 files changed, 26 insertions(+), 2 deletions(-)

diff --git a/src/ap/hostapd.c b/src/ap/hostapd.c
index fed1f92..93a44a5 100644
--- a/src/ap/hostapd.c
+++ b/src/ap/hostapd.c
@@ -33,6 +33,7 @@
 #include "p2p_hostapd.h"
 #include "gas_serv.h"
 
+#include <lct.h>
 
 static int hostapd_flush_old_stations(struct hostapd_data *hapd, u16 reason);
 static int hostapd_setup_encryption(char *iface, struct hostapd_data *hapd);
@@ -939,6 +940,7 @@ static int setup_interface(struct hostapd_iface *iface)
 int hostapd_setup_interface_complete(struct hostapd_iface *iface, int err)
 {
 	struct hostapd_data *hapd = iface->bss[0];
+	char f[32], c[32];
 	size_t j;
 	u8 *prev_addr;
 
@@ -1036,6 +1038,12 @@ int hostapd_setup_interface_complete(struct hostapd_iface *iface, int err)
 	wpa_printf(MSG_DEBUG, "%s: Setup of interface done.",
 		   iface->bss[0]->conf->iface);
 
+	c[sizeof(c) - 1] = f[sizeof(f) - 1] = '\0';
+	snprintf(f, sizeof(f) - 1, "%d", iface->freq);
+	snprintf(c, sizeof(c) - 1, "%d", frequency_to_channel(iface->freq));
+	lct_log(CT_EV_INFO, "cws.wifi", "hostap_started", EV_FLAGS_PRIORITY_LOW,
+		(char *)iface->conf->bss[0].ssid.ssid, f, c);
+
 	return 0;
 }
 
diff --git a/wpa_supplicant/p2p_supplicant.c b/wpa_supplicant/p2p_supplicant.c
index d1afb3f..7ccce36 100644
--- a/wpa_supplicant/p2p_supplicant.c
+++ b/wpa_supplicant/p2p_supplicant.c
@@ -36,6 +36,7 @@
 #include "bestchannel.h"
 #include "p2p/p2p_i.h"
 
+#include <lct.h>
 
 /*
  * How many times to try to scan to find the GO before giving up on join
@@ -5297,6 +5298,7 @@ void wpas_p2p_completed(struct wpa_supplicant *wpa_s)
 	u8 go_dev_addr[ETH_ALEN];
 	int network_id = -1;
 	int persistent;
+	char f[32];
 	int freq = 0;
 
 	if (ssid == NULL || ssid->mode != WPAS_MODE_P2P_GROUP_FORMATION) {
@@ -5349,6 +5351,9 @@ void wpas_p2p_completed(struct wpa_supplicant *wpa_s)
 	wpas_notify_p2p_group_started(wpa_s, ssid, network_id, 1);
 
 done:
+	f[sizeof(f)-1] = '\0';
+	snprintf(f, sizeof(f)-1, "%d", freq);
+	lct_log(CT_EV_INFO, "cws.wifi", "p2p_operating_channels", EV_FLAGS_PRIORITY_LOW, f);
 	wpas_p2p_continue_after_scan(wpa_s);
 }
 
diff --git a/wpa_supplicant/wpa_supplicant.c b/wpa_supplicant/wpa_supplicant.c
index a690029..5117a18 100644
--- a/wpa_supplicant/wpa_supplicant.c
+++ b/wpa_supplicant/wpa_supplicant.c
@@ -631,6 +631,9 @@ static inline void log_connection_time(struct wpa_supplicant *wpa_s,
 	struct timeval stop;
 	unsigned long msec_to_connect = 0;
 	char msec_c[32];
+	char bssid[128];
+	char sec[128];
+
 	/* Crashtool, log time it takes to associate */
 	if (state == WPA_SCANNING &&
 		(wpa_s->wpa_state == WPA_DISCONNECTED ||
@@ -644,9 +647,17 @@ static inline void log_connection_time(struct wpa_supplicant *wpa_s,
 
 		gettimeofday(&stop, NULL);
 		msec_to_connect = timevaldiff(&start, &stop);
-		bzero(msec_c, sizeof(msec_c));
+
 		snprintf(msec_c, sizeof(msec_c), "%lu", msec_to_connect);
-		lct_log(CT_EV_STAT, "dev.log.cws.wifi", "conn_time", EV_FLAGS_PRIORITY_LOW, msec_c);
+
+		snprintf(sec, sizeof(sec), "%d %d %d", wpa_s->wpa_proto,
+			wpa_s->group_cipher, wpa_s->pairwise_cipher);
+
+		snprintf(bssid, sizeof(bssid), "%s (" MACSTR ") / %d MHz",
+			wpa_s->current_ssid->ssid, MAC2STR(wpa_s->bssid), wpa_s->assoc_freq);
+
+		lct_log(CT_EV_STAT, "cws.wifi", "wpa_connected", EV_FLAGS_PRIORITY_LOW,
+			msec_c, bssid, sec);
 
 		start.tv_sec = 0;
 		start.tv_usec = 0;
-- 
1.7.4.1

