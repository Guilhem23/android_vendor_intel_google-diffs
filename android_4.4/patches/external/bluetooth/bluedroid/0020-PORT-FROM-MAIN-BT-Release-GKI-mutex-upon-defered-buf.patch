From 9c56c647334702e0692ebfec9958ce1de68f4535 Mon Sep 17 00:00:00 2001
From: Patrick Combes <patrick.combes@intel.com>
Date: Mon, 22 Jul 2013 14:43:22 +0200
Subject: [PORT FROM MAIN][BT] Release GKI mutex upon defered buffer allocation

BZ: 134569

In some conditions, the GKI mutex may not be released.
This patch ensures that GKI mutex is systematically released when
returning from GKI_getbuf().

Change-Id: Ic0c4a22929e5304c78d2f7c9276ff2b5c8115e33
Orig-Change-Id: Ia8703e055224ca2b9c515a0d513b71dca3ac7971
Category: device enablement
Domain: CWS.BT-Common
Origin: internal
Upstream-Candidate: yes
Signed-off-by: Patrick Combes <patrick.combes@intel.com>
Reviewed-on: http://android.intel.com:8080/119913
Reviewed-by: Gros, Julien <julien.gros@intel.com>
Tested-by: Lestienne, ChristopheX <christophex.lestienne@intel.com>
---
 gki/common/gki_buffer.c |    8 ++++++--
 1 files changed, 6 insertions(+), 2 deletions(-)

diff --git a/gki/common/gki_buffer.c b/gki/common/gki_buffer.c
index bcf6f06..4028237 100644
--- a/gki/common/gki_buffer.c
+++ b/gki/common/gki_buffer.c
@@ -407,8 +407,10 @@ void *GKI_getbuf (UINT16 size)
         {
 // btla-specific ++
         #ifdef GKI_USE_DEFERED_ALLOC_BUF_POOLS
-            if(Q->p_first == 0 && gki_alloc_free_queue(i) != TRUE)
+            if(Q->p_first == 0 && gki_alloc_free_queue(i) != TRUE) {
+                GKI_enable();
                 return NULL;
+            }
         #endif
 // btla-specific --
             p_hdr = Q->p_first;
@@ -474,8 +476,10 @@ void *GKI_getpoolbuf (UINT8 pool_id)
     {
 // btla-specific ++
 #ifdef GKI_USE_DEFERED_ALLOC_BUF_POOLS
-        if(Q->p_first == 0 && gki_alloc_free_queue(pool_id) != TRUE)
+        if(Q->p_first == 0 && gki_alloc_free_queue(pool_id) != TRUE) {
+            GKI_enable();
             return NULL;
+	}
 #endif
 // btla-specific --
         p_hdr = Q->p_first;
-- 
1.7.4.1

