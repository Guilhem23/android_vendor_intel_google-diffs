From 513563f104ca61d72a0c9252b6236220e4b5d880 Mon Sep 17 00:00:00 2001
From: Loic Poulain <loicx.poulain@intel.com>
Date: Mon, 26 Aug 2013 11:45:04 +0200
Subject: [PORT FROM MAIN]wifi: Fix KW issues in netd

BZ: 133260 136737 77624

- 103955: Array 'daemonCmd' of size 1024 may use index value(s) 0..1024.
Also there is one similar error on line 299.

Rework the resetDnsForwarders func and fix KW:
- 101139: Array 'daemonCmd' of size 1024 may use index
value(s) 0..1024. Also there is one similar error on line 299.

- Pointer 'mAddrs' returned from call to function 'malloc'
at line 129 may be NULL and may be dereferenced at line 132.
- Pointer 'mDnsForwarders' checked for NULL at line 341
may be dereferenced at line 369

Change-Id: I21681734aacd99f503c9da6c6571bbd312e24d63
Orig-Change-Id: I5ba924376ac81f4b13cbc6c15f7d59e68fec2013
Category: device enablement
Domain: CWS.WIFI-Common
Origin: upstream
Upstream-Candidate: no,proprietary
Orig-Change-Id: Ic74b5a62d263b5f38dc63e4c598b2e7d7f826d9b
Orig-Change-Id: I1df3f1a3b32b016031b8c7ff92dcc729a6cebcc8
Signed-off-by: Paul Naoumenko <paulx.naoumenko@intel.com>
---
 TetherController.cpp |   25 ++++++++++++++++---------
 1 files changed, 16 insertions(+), 9 deletions(-)

diff --git a/TetherController.cpp b/TetherController.cpp
index 0214326..9eff02f 100644
--- a/TetherController.cpp
+++ b/TetherController.cpp
@@ -126,6 +126,12 @@ int TetherController::startTethering(int num_addrs, struct in_addr* addrs) {
 
         /* Copy the new addrs*/
         mAddrs = (struct in_addr*)malloc(sizeof (struct in_addr*) * num_addrs);
+        if (!mAddrs) {
+            ALOGE("malloc failed (%s)", strerror(errno));
+            close(pipefd[0]);
+            close(pipefd[1]);
+            return -1;
+        }
         mNum_addrs = num_addrs;
         for (int addrIndex=0; addrIndex < mNum_addrs;) {
             mAddrs[addrIndex] = addrs[addrIndex];
@@ -269,34 +275,35 @@ int TetherController::setDnsForwarders(char **servers, int numServers) {
 
 int TetherController::resetDnsForwarders() {
     int numServers = mDnsForwarders == NULL ? 0 : (int) mDnsForwarders->size();
-
+    char *addr;
+    int next_bytes_left;
     char daemonCmd[MAX_CMD_SIZE];
-    memset(daemonCmd, '\0' , sizeof(daemonCmd));
 
     if (mDaemonFd == -1)
         return -1;
 
     strcpy(daemonCmd, "update_dns");
-    int cmdLen = strlen(daemonCmd);
 
     if(numServers > 0) {
         NetAddressCollection::iterator it;
+        next_bytes_left = sizeof(daemonCmd) - strlen(daemonCmd) - 1;
         for (it = mDnsForwarders->begin(); it != mDnsForwarders->end(); ++it) {
-            cmdLen += strlen(inet_ntoa(*it));
-            if (cmdLen + 2 >= sizeof(daemonCmd)) {
+            addr = inet_ntoa(*it);
+            next_bytes_left = next_bytes_left - 1 - strlen(addr);
+            if (next_bytes_left < 0) {
                 LOGD("(resetDnsForwarders) Too many DNS servers listed");
                 break;
-            } else {
-                strncat(daemonCmd, ":", 1 );
-                strncat(daemonCmd, inet_ntoa(*it), sizeof(daemonCmd) - strlen(daemonCmd) + 1);
             }
+            strcat(daemonCmd, ":");
+            strcat(daemonCmd, addr);
         }
     }
 
     LOGD("(resetDnsForwarders) Sending update msg to dnsmasq [%s]", daemonCmd);
     if (write(mDaemonFd, daemonCmd, strlen(daemonCmd) +1) < 0) {
         LOGE("(resetDnsForwarders) Failed to send update command to dnsmasq (%s)", strerror(errno));
-        mDnsForwarders->clear();
+        if (mDnsForwarders != NULL)
+            mDnsForwarders->clear();
         return -1;
     }
 
-- 
1.7.4.1

