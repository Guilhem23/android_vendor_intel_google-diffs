From e08144ba10a99ece5eb2dda9b6ec26a92737df38 Mon Sep 17 00:00:00 2001
From: Andrew Boie <andrew.p.boie@intel.com>
Date: Wed, 2 Oct 2013 13:04:48 -0700
Subject: ueventd: don't pass a blacklist file if none exists

The result of the check is cached so that it is only done once.
Fixes a problem where modules wouldn't load if the ueventd
blacklist file isn't present.

Issue: ADEV-21
Change-Id: I1368b708a2f6dc558ff8189eab07123965bcdc5a
Signed-off-by: Andrew Boie <andrew.p.boie@intel.com>
---
 init/devices.c |   18 ++++++++++++++++--
 1 files changed, 16 insertions(+), 2 deletions(-)

diff --git a/init/devices.c b/init/devices.c
index 4faa38d..5e272b3 100644
--- a/init/devices.c
+++ b/init/devices.c
@@ -86,6 +86,20 @@ static list_declare(dev_perms);
 static list_declare(platform_names);
 static list_declare(deferred_module_loading_list);
 
+static char *get_module_blacklist(void)
+{
+    static int initialized = 0;
+    static char *blacklist = NULL;
+    struct stat sb;
+
+    if (initialized)
+        return blacklist;
+
+    initialized = 1;
+    blacklist = stat(MODULES_BLKLST, &sb) ? NULL : MODULES_BLKLST;
+    return blacklist;
+}
+
 int add_dev_perms(const char *name, const char *attr,
                   mode_t perm, unsigned int uid, unsigned int gid,
                   unsigned short wildcard) {
@@ -676,7 +690,7 @@ static void handle_deferred_module_loading()
         if (alias && alias->pattern) {
             INFO("deferred loading of module for %s\n", alias->pattern);
             ret = insmod_by_dep(alias->pattern, "", NULL, 1, NULL,
-                    MODULES_BLKLST);
+                    get_module_blacklist());
             /* if it looks like file system where these files are is not
              * ready, keep the module in defer list for retry. */
             if (!(ret & (MOD_BAD_DEP | MOD_INVALID_CALLER_BLACK | MOD_BAD_ALIAS))) {
@@ -704,7 +718,7 @@ static void handle_module_loading(const char *modalias)
 
     if (!modalias) return;
 
-    ret = insmod_by_dep(modalias, "", NULL, 1, NULL, MODULES_BLKLST);
+    ret = insmod_by_dep(modalias, "", NULL, 1, NULL, get_module_blacklist());
 
     if (ret & (MOD_BAD_DEP | MOD_INVALID_CALLER_BLACK | MOD_BAD_ALIAS)) {
         node = calloc(1, sizeof(*node));
-- 
1.7.4.1

