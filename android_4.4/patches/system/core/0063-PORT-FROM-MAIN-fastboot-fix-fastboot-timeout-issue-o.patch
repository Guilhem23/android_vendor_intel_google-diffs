From fb5dfb80f696753d980d021f2bca60a74ab9cbae Mon Sep 17 00:00:00 2001
From: Jiebing Li <jiebing.li@intel.com>
Date: Tue, 7 Aug 2012 14:29:21 +0800
Subject: [PORT FROM MAIN] fastboot: fix fastboot timeout issue of Windows host side

BZ: 48044

Normally fastboot follows the procedure that host sends a command
to device and device sends back response after the command
is executed.

But sometimes device spends too long time to execute the command
so that timeout error occurs before host receives the response.

This patch fixes the issue by aligning with the solution of ADB.

Change-Id: I50d1ecab8fb79fe66ff2e5ef774bfc97ee392883
Orig-Change-Id: If4302cfe84ce9693bfcc1b033c506be24bfc272b
Category: aosp improvement
Domain: USB ADB
Origin: internal
Upstream-Candidate: no, proprietary
Signed-off-by: Jiebing Li <jiebing.li@intel.com>
Reviewed-on: http://android.intel.com:8080/76530
Reviewed-by: Yao, Yong <yong.yao@intel.com>
Reviewed-by: Meng, Zhe <zhe.meng@intel.com>
Tested-by: Meng, Zhe <zhe.meng@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
Signed-off-by: Bo Huang <bo.b.huang@intel.com>
---
 fastboot/usb_windows.c |    6 +++---
 1 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/fastboot/usb_windows.c b/fastboot/usb_windows.c
index 7aa36b2..51bbe30 100644
--- a/fastboot/usb_windows.c
+++ b/fastboot/usb_windows.c
@@ -152,7 +152,7 @@ usb_handle* do_usb_open(const wchar_t* interface_name) {
 }
 
 int usb_write(usb_handle* handle, const void* data, int len) {
-    unsigned long time_out = 500 + len * 8;
+    unsigned long time_out = 5000;
     unsigned long written = 0;
     unsigned count = 0;
     int ret;
@@ -194,7 +194,7 @@ int usb_write(usb_handle* handle, const void* data, int len) {
 }
 
 int usb_read(usb_handle *handle, void* data, int len) {
-    unsigned long time_out = 500 + len * 8;
+    unsigned long time_out = 0;
     unsigned long read = 0;
     int ret;
 
@@ -212,7 +212,7 @@ int usb_read(usb_handle *handle, void* data, int len) {
             DBG("usb_read got: %ld, expected: %d, errno: %d\n", read, xfer, errno);
             if (ret) {
                 return read;
-            } else if (errno != ERROR_SEM_TIMEOUT) {
+            } else {
                 // assume ERROR_INVALID_HANDLE indicates we are disconnected
                 if (errno == ERROR_INVALID_HANDLE)
                     usb_kick(handle);
-- 
1.7.4.1

