From 353c8c030f671e70de0edfb4febe7ddd98224928 Mon Sep 17 00:00:00 2001
From: Vincent Tinelli <vincent.tinelli@intel.com>
Date: Wed, 15 May 2013 08:10:29 +0000
Subject: [PORT FROM MAIN]init: add setprop_from_sysfs command

BZ: 107215

add setprop_from_sysfs command to export some sysfs values as android properties
sysfs values can be used in rc script using this mechanism.

Change-Id: I44410e52fb3d5c17395f51e4d8ceb2ab343176b9
Orig-Change-Id: I8abe55643fa7fc8dd413b18c0fd85805a4c17b35
Category: aosp improvement
Domain: PUPDR-Flashing
Origin: internal
Upstream-Candidate: no, need rework
Orig-Change-Id: I04916f6ef0466b8b09ecca943d5bb09b951a72a0
Signed-off-by: Vincent Tinelli <vincent.tinelli@intel.com>
---
 init/builtins.c    |   35 +++++++++++++++++++++++++++++++++++
 init/init_parser.c |    1 +
 init/keywords.h    |    2 ++
 3 files changed, 38 insertions(+), 0 deletions(-)

diff --git a/init/builtins.c b/init/builtins.c
index 1d87627..b9fff40 100644
--- a/init/builtins.c
+++ b/init/builtins.c
@@ -900,6 +900,41 @@ int do_write(int nargs, char **args)
     return write_file(path, value);
 }
 
+int do_setprop_from_sysfs(int nargs, char **args)
+{
+    const char *path = args[1];
+    const char *prop_name = args[2];
+    char prop_val[PROP_VALUE_MAX];
+    int ret;
+    int fd;
+    unsigned sz;
+
+    if (strncmp(path, "/sys/", sizeof("/sys/") - 1)) {
+        ERROR("read from /sys only: '%s'\n", path);
+        return -EINVAL;
+    }
+
+    fd = open(path, O_RDONLY);
+    if (fd < 0) {
+        ERROR("cannot open '%s': '%s'\n", path, strerror(errno));
+        return fd;
+    }
+
+    sz = read(fd, prop_val, PROP_VALUE_MAX-1);
+    if (sz <= 0) {
+        ERROR("cannot read from '%s': '%s'\n", path, strerror(errno));
+        ret = sz;
+        goto oops;
+    }
+
+    prop_val[sz-1] = '\0';
+    ret = property_set(prop_name, prop_val);
+
+oops:
+    close(fd);
+    return ret;
+}
+
 int do_copy(int nargs, char **args)
 {
     char *buffer = NULL;
diff --git a/init/init_parser.c b/init/init_parser.c
index fec4780..b7d8a35 100644
--- a/init/init_parser.c
+++ b/init/init_parser.c
@@ -155,6 +155,7 @@ int lookup_keyword(const char *s)
         if (!strcmp(s, "etenv")) return K_setenv;
         if (!strcmp(s, "etkey")) return K_setkey;
         if (!strcmp(s, "etprop")) return K_setprop;
+        if (!strcmp(s, "etprop_from_sysfs")) return K_setprop_from_sysfs;
         if (!strcmp(s, "etrlimit")) return K_setrlimit;
         if (!strcmp(s, "etsebool")) return K_setsebool;
         if (!strcmp(s, "ocket")) return K_socket;
diff --git a/init/keywords.h b/init/keywords.h
index c781f06..72d1c56 100644
--- a/init/keywords.h
+++ b/init/keywords.h
@@ -35,6 +35,7 @@ int do_trigger(int nargs, char **args);
 int do_symlink(int nargs, char **args);
 int do_sysclktz(int nargs, char **args);
 int do_write(int nargs, char **args);
+int do_setprop_from_sysfs(int nargs, char **args);
 int do_copy(int nargs, char **args);
 int do_chown(int nargs, char **args);
 int do_chmod(int nargs, char **args);
@@ -97,6 +98,7 @@ enum {
     KEYWORD(user,        OPTION,  0, 0, 0)
     KEYWORD(wait,        COMMAND, 1, do_wait, 0)
     KEYWORD(write,       COMMAND, 2, do_write, 0)
+    KEYWORD(setprop_from_sysfs,       COMMAND, 2, do_setprop_from_sysfs, 0)
     KEYWORD(copy,        COMMAND, 2, do_copy, 0)
     KEYWORD(chown,       COMMAND, 2, do_chown, 0)
     KEYWORD(chmod,       COMMAND, 2, do_chmod, 0)
-- 
1.7.4.1

