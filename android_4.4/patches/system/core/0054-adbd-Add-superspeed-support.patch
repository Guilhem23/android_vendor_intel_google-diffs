From 5d8c6216f1eaba816293c5e9d0133954e26ca305 Mon Sep 17 00:00:00 2001
From: jzhuan5 <jin.can.zhuang@intel.com>
Date: Mon, 2 Sep 2013 12:59:49 -0400
Subject: adbd: Add superspeed support

BZ: 135849

Add superspeed descriptors to support super speed conneciton.

Change-Id: I57b1a82f9ebd79e37566e11ab9cb53564b796fc4
Category: aosp improvement
Domain: usb adb
Origin: internal
Upstream-Candidate: no
Signed-off-by: jzhuan5 <jin.can.zhuang@intel.com>
Reviewed-on: http://android.intel.com:8080/129452
Reviewed-by: Gross, Mark <mark.gross@intel.com>
Reviewed-by: Chen, HuaqiangX <huaqiangx.chen@intel.com>
Reviewed-by: Yao, Yong <yong.yao@intel.com>
Tested-by: Li, GuangleiX <guangleix.li@intel.com>
Tested-by: Wang, Yu Y <yu.y.wang@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
---
 adb/usb_linux_client.c |   45 +++++++++++++++++++++++++++++++++++++++++++++
 1 files changed, 45 insertions(+), 0 deletions(-)

diff --git a/adb/usb_linux_client.c b/adb/usb_linux_client.c
index fb1dad0..659fff5 100644
--- a/adb/usb_linux_client.c
+++ b/adb/usb_linux_client.c
@@ -33,6 +33,7 @@
 
 #define MAX_PACKET_SIZE_FS	64
 #define MAX_PACKET_SIZE_HS	512
+#define MAX_PACKET_SIZE_SS	1024
 
 #define cpu_to_le16(x)  htole16(x)
 #define cpu_to_le32(x)  htole32(x)
@@ -62,12 +63,21 @@ static const struct {
         struct usb_endpoint_descriptor_no_audio source;
         struct usb_endpoint_descriptor_no_audio sink;
     } __attribute__((packed)) fs_descs, hs_descs;
+    struct {
+        struct usb_interface_descriptor intf;
+        struct usb_endpoint_descriptor_no_audio source;
+        struct usb_ss_ep_comp_descriptor source_comp;
+        struct usb_endpoint_descriptor_no_audio sink;
+        struct usb_ss_ep_comp_descriptor sink_comp;
+    } __attribute__((packed)) ss_descs;
+
 } __attribute__((packed)) descriptors = {
     .header = {
         .magic = cpu_to_le32(FUNCTIONFS_DESCRIPTORS_MAGIC),
         .length = cpu_to_le32(sizeof(descriptors)),
         .fs_count = 3,
         .hs_count = 3,
+        .ss_count = 5,
     },
     .fs_descs = {
         .intf = {
@@ -121,6 +131,41 @@ static const struct {
             .wMaxPacketSize = MAX_PACKET_SIZE_HS,
         },
     },
+    .ss_descs = {
+        .intf = {
+            .bLength = sizeof(descriptors.ss_descs.intf),
+            .bDescriptorType = USB_DT_INTERFACE,
+            .bInterfaceNumber = 0,
+            .bNumEndpoints = 2,
+            .bInterfaceClass = ADB_CLASS,
+            .bInterfaceSubClass = ADB_SUBCLASS,
+            .bInterfaceProtocol = ADB_PROTOCOL,
+            .iInterface = 1, /* first string from the provided table */
+        },
+        .source = {
+            .bLength = sizeof(descriptors.ss_descs.source),
+            .bDescriptorType = USB_DT_ENDPOINT,
+            .bEndpointAddress = 1 | USB_DIR_OUT,
+            .bmAttributes = USB_ENDPOINT_XFER_BULK,
+            .wMaxPacketSize = MAX_PACKET_SIZE_SS,
+        },
+        .source_comp = {
+            .bLength = sizeof(descriptors.ss_descs.source_comp),
+            .bDescriptorType = USB_DT_SS_ENDPOINT_COMP,
+        },
+        .sink = {
+            .bLength = sizeof(descriptors.ss_descs.sink),
+            .bDescriptorType = USB_DT_ENDPOINT,
+            .bEndpointAddress = 2 | USB_DIR_IN,
+            .bmAttributes = USB_ENDPOINT_XFER_BULK,
+            .wMaxPacketSize = MAX_PACKET_SIZE_SS,
+        },
+        .sink_comp = {
+            .bLength = sizeof(descriptors.ss_descs.sink_comp),
+            .bDescriptorType = USB_DT_SS_ENDPOINT_COMP,
+        },
+    },
+
 };
 
 #define STR_INTERFACE_ "ADB Interface"
-- 
1.7.4.1

