From 39fd7354c42fa87e6ab68066160422e78d89a60b Mon Sep 17 00:00:00 2001
From: Andrew Boie <andrew.p.boie@intel.com>
Date: Tue, 27 Nov 2012 12:58:19 -0800
Subject: init: HACK: Try multiple times to open console

If the console is set to be a USB-to-serial adapter, there is
a bootup race for the creation of its associated device nodes
and init's one-time console detection.

If the console can't be opened, try polling up to 5 seconds. Log
an error if it ultimately fails.

A better solution would be to reimplement the console functionality
to be hot-pluggable, but this would require much more invasive changes
to make it robust.

Issue: ADEV-21
Change-Id: I347bf75e066fd3663ad63e1e3081e6de75aea1f1
Domain: AOSP-init
Category: AOSP Improvement
Source: Internal
Upstream-candidate: No
Signed-off-by: Andrew Boie <andrew.p.boie@intel.com>
---
 init/init.c |   19 ++++++++++++++++---
 1 files changed, 16 insertions(+), 3 deletions(-)

diff --git a/init/init.c b/init/init.c
index 94a2011..380d9f8 100644
--- a/init/init.c
+++ b/init/init.c
@@ -644,18 +644,31 @@ static int keychord_init_action(int nargs, char **args)
     return 0;
 }
 
+#define SLEEP_MS    50
+
 static int console_init_action(int nargs, char **args)
 {
     int fd;
+    int count = (5000 / SLEEP_MS);
 
     if (console[0]) {
         snprintf(console_name, sizeof(console_name), "/dev/%s", console);
     }
 
-    fd = open(console_name, O_RDWR);
-    if (fd >= 0)
+    /* Block the boot until the console node comes up */
+    while (1) {
+        fd = open(console_name, O_WRONLY);
+        if (fd < 0 && count--)
+            usleep(SLEEP_MS * 1000);
+        else
+            break;
+    }
+    if (fd >= 0) {
         have_console = 1;
-    close(fd);
+        close(fd);
+    } else {
+        ERROR("Gave up trying to open console %s\n", console_name);
+    }
 
     if( load_565rle_image(INIT_IMAGE_FILE) ) {
         fd = open("/dev/tty0", O_WRONLY);
-- 
1.7.4.1

