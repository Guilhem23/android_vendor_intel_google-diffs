From 26733f9fafe48b1e2cb34a4a95116e09bddc132a Mon Sep 17 00:00:00 2001
From: Pavan Kumar S <pavan.kumar.s@intel.com>
Date: Tue, 22 Oct 2013 15:23:29 +0530
Subject: [PORT FROM MAIN] ANDROID-COS: Fix the screen always on issue when charging in COS

BZ: 55126

When in COS, power off/on screen as required, for efficient charging.

Turn off screen after a certain number of animations and turn it on to draw
battery animation when either on power key press or charger removal.
This patch also clears display buffer during display off.
Without this, last drawn image can momentarily flicker
when the screen turns-on again. (BZ: 91446)

Orig-Change-Id: Ic51d547eb19ed6ad71b6c196e1fc4bb65473a04f
Category: device enablement
Domain: EM.BatteryManagement-Common
Origin: internal
Upstream-Candidate: no, proprietary

Change-Id: I9004b721670a32c58c899dec0045723654b75fec
Signed-off-by: Pavan Kumar S <pavan.kumar.s@intel.com>
---
 charger/Android.mk |    1 +
 charger/charger.c  |   12 ++++++++----
 2 files changed, 9 insertions(+), 4 deletions(-)

diff --git a/charger/Android.mk b/charger/Android.mk
index c16a1fa..96bfa0d 100644
--- a/charger/Android.mk
+++ b/charger/Android.mk
@@ -12,6 +12,7 @@ ifeq ($(strip $(BOARD_CHARGER_DISABLE_INIT_BLANK)),true)
 LOCAL_CFLAGS := -DCHARGER_DISABLE_INIT_BLANK
 endif
 
+BOARD_CHARGER_ENABLE_SUSPEND := true
 ifeq ($(strip $(BOARD_CHARGER_ENABLE_SUSPEND)),true)
 LOCAL_CFLAGS += -DCHARGER_ENABLE_SUSPEND
 endif
diff --git a/charger/charger.c b/charger/charger.c
index ebf4449..64144c9 100644
--- a/charger/charger.c
+++ b/charger/charger.c
@@ -766,8 +766,11 @@ static void update_screen_state(struct charger *charger, int64_t now)
         redraw_screen(charger);
         reset_animation(batt_anim);
 
-        if (charger->num_supplies_online > 0)
+        if (charger->num_supplies_online > 0) {
             request_suspend(true);
+            clear_screen();
+            gr_flip();
+        }
         return;
     }
 
@@ -923,12 +926,12 @@ static void process_key(struct charger *charger, int code, int64_t now)
                  */
                 set_next_key_check(charger, key, POWER_ON_KEY_TIME);
             }
+            kick_animation(charger->batt_anim);
+            request_suspend(false);
         } else {
             /* if the power key got released, force screen state cycle */
-            if (key->pending) {
-                request_suspend(false);
+            if (key->pending)
                 kick_animation(charger->batt_anim);
-            }
         }
     }
 
@@ -946,6 +949,7 @@ static void handle_input_state(struct charger *charger, int64_t now)
 static void handle_power_supply_state(struct charger *charger, int64_t now)
 {
     if (charger->num_supplies_online == 0 || !is_battery_valid(charger)) {
+        kick_animation(charger->batt_anim);
         request_suspend(false);
         if (charger->next_pwr_check == -1) {
             charger->next_pwr_check = now + UNPLUGGED_SHUTDOWN_TIME;
-- 
1.7.4.1

