From 3c48d3594f13881b44f8d2cb5f3929e6294984fe Mon Sep 17 00:00:00 2001
From: Vincent Tinelli <vincent.tinelli@intel.com>
Date: Thu, 9 Aug 2012 12:21:53 +0200
Subject: Expand variables on mount_all command

BZ: 50823

Reason:
Generic mount_all command in init.common.rc
instead of duplicating in init.${ro.hardware}
fstab.${ro.hardware} needed for vold/cryptfs

Implementation:
Expand variables on mount_all command

Change-Id: Ic328b6914d412ffa343c20581e4ddde2eacc3e51
Orig-Change-Id: I4663fb7c77f5000b6c548a683b51977f3107646b
Category: aosp improvement
Domain: PUPDR-Flashing
Origin: internal
Upstream-Candidate: no, need rework
Orig-Change-Id: I15f2443d2aae71ddfc8d2e24fc84584662b498ec
Signed-off-by: Vincent Tinelli <vincent.tinelli@intel.com>
Reviewed-on: http://android.intel.com:8080/76542
Reviewed-by: Yao, Yong <yong.yao@intel.com>
Reviewed-by: Romieu, Benoit <benoit.romieu@intel.com>
Tested-by: Romieu, Benoit <benoit.romieu@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
---
 init/builtins.c |   10 +++++++++-
 1 files changed, 9 insertions(+), 1 deletions(-)

diff --git a/init/builtins.c b/init/builtins.c
index db5984c..1d87627 100644
--- a/init/builtins.c
+++ b/init/builtins.c
@@ -669,6 +669,8 @@ int do_mount_all(int nargs, char **args)
     int status;
     const char *prop;
     struct fstab *fstab;
+    char *prop_val;
+
 
     if (nargs != 2) {
         return -1;
@@ -692,12 +694,18 @@ int do_mount_all(int nargs, char **args)
     } else if (pid == 0) {
         /* child, call fs_mgr_mount_all() */
         klog_set_level(6);  /* So we can see what fs_mgr_mount_all() does */
-        fstab = fs_mgr_read_fstab(args[1]);
+	prop_val = expand_references(args[1]);
+        if (!prop_val) {
+            ERROR("cannot expand '%s' while assigning to '%s'\n", args[1], prop_val);
+            return -1;
+        }
+        fstab = fs_mgr_read_fstab(prop_val);
         child_ret = fs_mgr_mount_all(fstab);
         fs_mgr_free_fstab(fstab);
         if (child_ret == -1) {
             ERROR("fs_mgr_mount_all returned an error\n");
         }
+        free(prop_val);
         exit(child_ret);
     } else {
         /* fork failed, return an error */
-- 
1.7.4.1

