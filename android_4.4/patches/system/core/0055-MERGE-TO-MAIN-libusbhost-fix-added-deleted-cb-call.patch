From 030bd03c684bb70e097be6b4c42d13fbb6d5977c Mon Sep 17 00:00:00 2001
From: Guillaume Ranquet <guillaumex.ranquet@intel.com>
Date: Fri, 11 Oct 2013 15:29:12 +0200
Subject: [MERGE TO MAIN] libusbhost] fix added/deleted cb call

BZ: 143879

The variable used to stop the loop handling inotify events
was also used to find devices through inotify causing the exit
of the loop. This patch introduces a new variable only for the
loop handling thuis fixing the issue of duplicate , missing and
wrong notifications to mmgr

Change-Id: I3e4b6393dd3ef18c756d420316ff9fd83ad67802
Category: aosp improvement
Domain: USB-Device
Origin: internal
Upstream-Candidate: yes
Signed-off-by: Guillaume Ranquet <guillaumex.ranquet@intel.com>
---
 libusbhost/usbhost.c |    8 +++++---
 1 files changed, 5 insertions(+), 3 deletions(-)

diff --git a/libusbhost/usbhost.c b/libusbhost/usbhost.c
index 8be393e..3f6093e 100644
--- a/libusbhost/usbhost.c
+++ b/libusbhost/usbhost.c
@@ -226,6 +226,7 @@ int usb_host_read_event(struct usb_host_context *context)
     char event_buf[512];
     char path[100];
     int i, ret, done = 0;
+    int devdone = 0;
     int offset = 0;
     int wd;
 
@@ -234,6 +235,7 @@ int usb_host_read_event(struct usb_host_context *context)
         while (offset < ret && !done) {
             event = (struct inotify_event*)&event_buf[offset];
             done = 0;
+            devdone = 0;
             wd = event->wd;
             if (wd == context->wdd) {
                 if ((event->mask & IN_CREATE) && !strcmp(event->name, "bus")) {
@@ -276,15 +278,15 @@ int usb_host_read_event(struct usb_host_context *context)
                     }
                 }
             } else {
-                for (i = 1; (i < MAX_USBFS_WD_COUNT) && !done; i++) {
+                for (i = 1; (i < MAX_USBFS_WD_COUNT) && !devdone; i++) {
                     if (wd == context->wds[i]) {
                         snprintf(path, sizeof(path), USB_FS_DIR "/%03d/%s", i, event->name);
                         if (event->mask == IN_CREATE) {
                             D("new device %s\n", path);
-                            done = context->cb_added(path, context->data);
+                            devdone = context->cb_added(path, context->data);
                         } else if (event->mask == IN_DELETE) {
                             D("gone device %s\n", path);
-                            done = context->cb_removed(path, context->data);
+                            devdone = context->cb_removed(path, context->data);
                         }
                     }
                 }
-- 
1.7.4.1

