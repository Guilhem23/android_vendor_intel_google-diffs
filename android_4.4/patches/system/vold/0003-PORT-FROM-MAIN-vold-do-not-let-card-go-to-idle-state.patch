From 823c52087c829716ed78d400c2fe1548cafe0778 Mon Sep 17 00:00:00 2001
From: Chuanxiao Dong <chuanxiao.dong@intel.com>
Date: Wed, 28 Dec 2011 11:28:49 +0800
Subject: [PORT FROM MAIN] vold: do not let card go to idle state if card is already removed

BZ: 47043
below is the original commit info
        BZ: 17817

        If card is removed already, then putting card in idle state will make
        vold server confusing.
        So, before putting card in idle state, check whether card is already
        been removed

Change-Id: Ib5d27fb8ba1cdb59d010a15393410dd0e0217000
Orig-Change-Id: I919fa57b680e2e2e558bcbc9dc1ab8b947971360
Category: aosp improvement
Domain: Storage Removable_Storage
Origin: internal
Upstream-Candidate: no, proprietary
Signed-off-by: Chuanxiao Dong <chuanxiao.dong@intel.com>
Reviewed-on: http://android.intel.com:8080/76085
Reviewed-by: lab_cactus <lab_cactus@intel.com>
Reviewed-by: Yao, Yong <yong.yao@intel.com>
Tested-by: Sun, Jianhua <jianhua.sun@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
---
 Volume.cpp |   29 ++++++++++++++++++++++++-----
 1 files changed, 24 insertions(+), 5 deletions(-)

diff --git a/Volume.cpp b/Volume.cpp
index cb0b08f..2da7b1d 100644
--- a/Volume.cpp
+++ b/Volume.cpp
@@ -281,7 +281,9 @@ int Volume::formatVol(bool wipe) {
     ret = 0;
 
 err:
-    setState(Volume::State_Idle);
+    if ((getState() != Volume::State_NoMedia))
+        setState(Volume::State_Idle);
+
     return ret;
 }
 
@@ -419,7 +421,12 @@ int Volume::mountVol() {
         SLOGI("%s being considered for volume %s\n", devicePath, getLabel());
 
         errno = 0;
-        setState(Volume::State_Checking);
+
+        if ((getState() == Volume::State_NoMedia)) {
+            errno = ENODEV;
+            return -1;
+        } else
+            setState(Volume::State_Checking);
 
         if (Fat::check(devicePath)) {
             if (errno == ENODATA) {
@@ -429,7 +436,10 @@ int Volume::mountVol() {
             errno = EIO;
             /* Badness - abort the mount */
             SLOGE("%s failed FS checks (%s)", devicePath, strerror(errno));
-            setState(Volume::State_Idle);
+            if ((getState() == Volume::State_NoMedia))
+                errno = ENODEV;
+            else
+                setState(Volume::State_Idle);
             return -1;
         }
 
@@ -447,7 +457,8 @@ int Volume::mountVol() {
         if (providesAsec && mountAsecExternal() != 0) {
             SLOGE("Failed to mount secure area (%s)", strerror(errno));
             umount(getMountpoint());
-            setState(Volume::State_Idle);
+            if ((getState() != Volume::State_NoMedia))
+                setState(Volume::State_Idle);
             return -1;
         }
 
@@ -470,7 +481,10 @@ int Volume::mountVol() {
     }
 
     SLOGE("Volume %s found no suitable devices for mounting :(\n", getLabel());
-    setState(Volume::State_Idle);
+    if ((getState() == Volume::State_NoMedia))
+        errno = ENODEV;
+    else
+        setState(Volume::State_Idle);
 
     return -1;
 }
@@ -589,6 +603,11 @@ int Volume::unmountVol(bool force, bool revert) {
         SLOGI("Encrypted volume %s reverted successfully", getMountpoint());
     }
 
+    if ((getState() == Volume::State_NoMedia)) {
+        mCurrentlyMountedKdev = -1;
+        goto out_nomedia;
+    }
+
     setUuid(NULL);
     setUserLabel(NULL);
     setState(Volume::State_Idle);
-- 
1.7.4.1

