From 79bac2af08af20ef48cd3140c7c73b293e70bf0f Mon Sep 17 00:00:00 2001
From: Octavian Purdila <octavian.purdila@intel.com>
Date: Wed, 13 Nov 2013 16:09:39 +0100
Subject: vold: extend support for partial device path matching

Switching the kernel to the new sysfs layout (unselecting
CONFIG_SYSFS_DEPRECATED) complicates VolD block device recognition.

The uevents are reporting full specific paths, such as:
/devices/pci0000:0e/0000:0e:18.0/mmc_host/mmc0/mmc0:1234/block/mmcblk0

Because the full device path may contain variable IDs (in this MMC case
"1234") using the full path entries in fstab does not work. Android supports
partial matches but only on the begining of a string.

This patch extends support for partial devpath matching. If the device
pathname in the fstab is preceeded with "*" then the match is
reported if the text following the "*" occurs anywhere in the device path
reported by the uevent. This is useful if we wish to match
on the substring in the middle or at the end of the path.

For: ABRO-262

Category: device enablement
Domain: AOSP-vold
Origin: internal
Upstream-Candidate: yes

Author:    Octavian Purdila <octavian.purdila@intel.com>
Signed-off-by: Radu Moisan <radu.moisan@intel.com>
Signed-off-by: Jim Bride <jim.bride@intel.com>

Change-Id: I4cadca31a9145c5edd640ef1abe7834115c86b64
---
 DirectVolume.cpp |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/DirectVolume.cpp b/DirectVolume.cpp
index 960eef6..38c9954 100644
--- a/DirectVolume.cpp
+++ b/DirectVolume.cpp
@@ -96,7 +96,7 @@ int DirectVolume::handleBlockEvent(NetlinkEvent *evt) {
 
     PathCollection::iterator  it;
     for (it = mPaths->begin(); it != mPaths->end(); ++it) {
-        if (!strncmp(dp, *it, strlen(*it))) {
+        if (((*it)[0] == '*' && strstr(dp, &(*it)[1])) || !strncmp(dp, *it, strlen(*it))) {
             /* We can handle this disk */
             int action = evt->getAction();
             const char *devtype = evt->findParam("DEVTYPE");
-- 
1.7.4.1

