From 525646eab00f1e14850986878b613a1727943479 Mon Sep 17 00:00:00 2001
From: Chuanxiao Dong <chuanxiao.dong@intel.com>
Date: Fri, 25 Nov 2011 19:29:43 +0800
Subject: [PORT FROM MAIN] vold: Fix the USB mass storage bug

BZ: 47043

Below is the original commit info:
	BZ: 15634
	do not export proper partitions to host PC

Change-Id: Icae422ad6f3ce73b22feadb509ff1c487602bcb9
Orig-Change-Id: Ibd196616312d51f94ca1d7614d712d1fb52294c5
Category: aosp improvement
Domain: Storage Removable_Storage
Origin: internal
Upstream-Candidate: no, proprietary
Signed-off-by: Chuanxiao Dong <chuanxiao.dong@intel.com>
Reviewed-on: http://android.intel.com:8080/76524
Reviewed-by: Yao, Yong <yong.yao@intel.com>
Tested-by: Sun, Jianhua <jianhua.sun@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
---
 DirectVolume.cpp |    7 ++++++-
 Volume.cpp       |   13 ++++++++++---
 2 files changed, 16 insertions(+), 4 deletions(-)

diff --git a/DirectVolume.cpp b/DirectVolume.cpp
index 38c9954..9146917 100644
--- a/DirectVolume.cpp
+++ b/DirectVolume.cpp
@@ -77,7 +77,12 @@ dev_t DirectVolume::getDiskDevice() {
 
 dev_t DirectVolume::getShareDevice() {
     if (mPartIdx != -1) {
-        return MKDEV(mDiskMajor, mPartIdx);
+        /*
+         * If more than one mass storage devices are mounted, mDiskMinor should be added.
+         * For example, the first device is 179:0-179:7, the second is 179:8-179:9.
+         * If system want to export 179:9, the minor index of MKDEV should be 8+1.
+         */
+        return MKDEV(mDiskMajor, mDiskMinor + mPartIdx);
     } else {
         return MKDEV(mDiskMajor, mDiskMinor);
     }
diff --git a/Volume.cpp b/Volume.cpp
index 6dd1cc0..cb0b08f 100644
--- a/Volume.cpp
+++ b/Volume.cpp
@@ -250,9 +250,7 @@ int Volume::formatVol(bool wipe) {
     bool formatEntireDevice = (mPartIdx == -1);
     char devicePath[255];
     dev_t diskNode = getDiskDevice();
-    dev_t partNode =
-        MKDEV(MAJOR(diskNode),
-              MINOR(diskNode) + (formatEntireDevice ? 1 : mPartIdx));
+    dev_t partNode = MKDEV(MAJOR(diskNode), (formatEntireDevice ? 1 : MINOR(diskNode) + mPartIdx));
 
     setState(Volume::State_Formatting);
 
@@ -459,6 +457,15 @@ int Volume::mountVol() {
 
         setState(Volume::State_Mounted);
         mCurrentlyMountedKdev = deviceNodes[i];
+
+        /*
+         * When the "part" in vold.fstab is set as "auto", mPartIdx will be -1.
+         * And USB mass storage will export entire disk(all the partitions) to host PC.
+         * So update the mPartIdx to export only one proper FAT FS partition.
+         */
+        if (mPartIdx == -1)
+            mPartIdx = i + 1;
+
         return 0;
     }
 
-- 
1.7.4.1

