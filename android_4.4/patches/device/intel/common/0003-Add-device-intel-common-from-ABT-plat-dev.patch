From f8075f342d1f6ab7a2674774af1569eee6673cb5 Mon Sep 17 00:00:00 2001
From: Yong Yao <yong.yao@intel.com>
Date: Tue, 31 Dec 2013 15:13:20 +0800
Subject: Add device/intel/common from ABT plat-dev

Change-Id: Ic9ba14deed5444dd942ba9c5b57b5602c467a9af
Signed-off-by: Yong Yao <yong.yao@intel.com>
---
 AndroidBoard.mk                              |    2 +
 AndroidProducts.mk                           |   31 ++
 BoardConfig.mk                               |   41 +++
 common.mk                                    |   27 ++
 emu_houdini/AndroidBoard.mk                  |    4 +
 emu_houdini/BoardConfig.mk                   |    2 +
 emu_houdini/emu_houdini.mk                   |   15 +
 init.common.rc                               |   45 +++
 init.recovery.common.rc                      |   20 ++
 keylayout/AT_Translated_Set_2_keyboard.kl    |  425 ++++++++++++++++++++++++++
 pc_generic/BoardConfig.mk                    |   22 ++
 pc_generic/init.rc                           |    1 +
 pc_generic/init.recovery.rc                  |    1 +
 pc_generic/pc_generic.mk                     |   19 ++
 releasetools/releasetools-generic-efi.py     |  242 +++++++++++++++
 testkeys/KEK.pk8                             |  Bin 0 -> 1217 bytes
 testkeys/KEK.x509.pem                        |   18 ++
 testkeys/PK.pk8                              |  Bin 0 -> 1217 bytes
 testkeys/PK.x509.pem                         |   18 ++
 testkeys/README                              |   54 ++++
 testkeys/kernel.x509.genkey                  |   17 +
 testkeys/production-test/DB.pk8              |  Bin 0 -> 1219 bytes
 testkeys/production-test/DB.x509.pem         |   18 ++
 testkeys/production-test/KEK.pk8             |  Bin 0 -> 1218 bytes
 testkeys/production-test/KEK.x509.pem        |   18 ++
 testkeys/production-test/PK.pk8              |  Bin 0 -> 1217 bytes
 testkeys/production-test/PK.x509.pem         |   18 ++
 testkeys/production-test/media.pk8           |  Bin 0 -> 1218 bytes
 testkeys/production-test/media.x509.pem      |   18 ++
 testkeys/production-test/platform.pk8        |  Bin 0 -> 1218 bytes
 testkeys/production-test/platform.x509.pem   |   18 ++
 testkeys/production-test/releasekey.pk8      |  Bin 0 -> 1217 bytes
 testkeys/production-test/releasekey.x509.pem |   19 ++
 testkeys/production-test/shared.pk8          |  Bin 0 -> 1217 bytes
 testkeys/production-test/shared.x509.pem     |   18 ++
 testkeys/shim.pk8                            |  Bin 0 -> 1219 bytes
 testkeys/shim.x509.pem                       |   18 ++
 vendorsetup.sh                               |  264 ++++++++++++++++
 38 files changed, 1413 insertions(+), 0 deletions(-)
 create mode 100644 AndroidBoard.mk
 create mode 100644 AndroidProducts.mk
 create mode 100644 BoardConfig.mk
 create mode 100644 common.mk
 create mode 100644 emu_houdini/AndroidBoard.mk
 create mode 100644 emu_houdini/BoardConfig.mk
 create mode 100644 emu_houdini/emu_houdini.mk
 create mode 100644 init.common.rc
 create mode 100644 init.recovery.common.rc
 create mode 100644 keylayout/AT_Translated_Set_2_keyboard.kl
 create mode 100644 pc_generic/BoardConfig.mk
 create mode 100644 pc_generic/init.rc
 create mode 100644 pc_generic/init.recovery.rc
 create mode 100644 pc_generic/pc_generic.mk
 create mode 100644 releasetools/releasetools-generic-efi.py
 create mode 100644 testkeys/KEK.pk8
 create mode 100644 testkeys/KEK.x509.pem
 create mode 100644 testkeys/PK.pk8
 create mode 100644 testkeys/PK.x509.pem
 create mode 100644 testkeys/README
 create mode 100644 testkeys/kernel.x509.genkey
 create mode 100644 testkeys/production-test/DB.pk8
 create mode 100644 testkeys/production-test/DB.x509.pem
 create mode 100644 testkeys/production-test/KEK.pk8
 create mode 100644 testkeys/production-test/KEK.x509.pem
 create mode 100644 testkeys/production-test/PK.pk8
 create mode 100644 testkeys/production-test/PK.x509.pem
 create mode 100644 testkeys/production-test/media.pk8
 create mode 100644 testkeys/production-test/media.x509.pem
 create mode 100644 testkeys/production-test/platform.pk8
 create mode 100644 testkeys/production-test/platform.x509.pem
 create mode 100644 testkeys/production-test/releasekey.pk8
 create mode 100644 testkeys/production-test/releasekey.x509.pem
 create mode 100644 testkeys/production-test/shared.pk8
 create mode 100644 testkeys/production-test/shared.x509.pem
 create mode 100644 testkeys/shim.pk8
 create mode 100644 testkeys/shim.x509.pem
 create mode 100644 vendorsetup.sh

diff --git a/AndroidBoard.mk b/AndroidBoard.mk
new file mode 100644
index 0000000..908babd
--- /dev/null
+++ b/AndroidBoard.mk
@@ -0,0 +1,2 @@
+LOCAL_PATH := $(call my-dir)
+
diff --git a/AndroidProducts.mk b/AndroidProducts.mk
new file mode 100644
index 0000000..1b5bc4a
--- /dev/null
+++ b/AndroidProducts.mk
@@ -0,0 +1,31 @@
+#
+# Copyright (C) 2013 The Android Open-Source Project
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+#
+
+#
+# This file should set PRODUCT_MAKEFILES to a list of product makefiles
+# to expose to the build system.  LOCAL_DIR will already be set to
+# the directory containing this file.
+#
+# This file may not rely on the value of any variable other than
+# LOCAL_DIR; do not use any conditionals, and do not look up the
+# value of any variable that isn't set in this file or in a file that
+# it includes.
+#
+
+PRODUCT_MAKEFILES := \
+    $(LOCAL_DIR)/emu_houdini/emu_houdini.mk \
+    $(LOCAL_DIR)/pc_generic/pc_generic.mk \
+
diff --git a/BoardConfig.mk b/BoardConfig.mk
new file mode 100644
index 0000000..2916e86
--- /dev/null
+++ b/BoardConfig.mk
@@ -0,0 +1,41 @@
+# Common BoardConfig.mk for *ALL* Intel projects.
+# Be very careful what you put in here; it may more
+# properly belong in a platform or product-specifc
+# BoardConfig.mk, or a mix-in
+
+LOCAL_PATH := device/intel/common
+
+# Common recovert library containing useful edify commands and
+# library functions. Additional commands implemented in platform-
+# specific libraries
+TARGET_RECOVERY_UPDATER_LIBS += libcommon_recovery
+
+# Location of kernel headers for all Intel projects
+TARGET_BOARD_KERNEL_HEADERS := $(LOCAL_PATH)/kernel-headers
+
+# Sets ro.product.board
+TARGET_BOOTLOADER_BOARD_NAME := $(TARGET_PRODUCT)
+
+# set default console log level
+KERNEL_LOGLEVEL ?= 5
+
+BOARD_KERNEL_CMDLINE += \
+	loglevel=$(KERNEL_LOGLEVEL) \
+	androidboot.hardware=$(TARGET_PRODUCT)
+
+TARGET_CPU_SMP := true
+
+# If signing kernel modules, use the testing BIOS DB key
+# Production builds will re-sign them via sign_target_files_apks.
+# Just use the testkey that AOSP provides
+TARGET_MODULE_KEY_PAIR := build/target/product/security/testkey
+TARGET_MODULE_GENKEY := device/intel/common/testkeys/kernel.x509.genkey
+
+# customize the malloced address to be 16-byte aligned.
+# Copied from the generic_x86 config.
+BOARD_MALLOC_ALIGNMENT := 16
+
+$(call add-path-map, stlport:external/stlport/stlport \
+       libxml2:external/libxml2/include \
+       tinyalsa:external/tinyalsa/include)
+
diff --git a/common.mk b/common.mk
new file mode 100644
index 0000000..053bda0
--- /dev/null
+++ b/common.mk
@@ -0,0 +1,27 @@
+# Product-makefile directives applicable for ALL Android
+# devices that Intel may build. Be careful what you put here,
+# it may be more appropriate to make your change in a board
+# or product level file.
+
+# Base AOSP configuration. Phone products will want to also
+# inherit aosp_base_telephony.mk. At the moment we can't do
+# this from a mix-in.
+$(call inherit-product, build/target/product/aosp_base.mk)
+
+# Base directory for mixin implementations
+$(call add-mixin-basedir, device/intel/mixins)
+
+LOCAL_PATH := device/intel/common
+
+PRODUCT_MANUFACTURER := Intel
+
+PRODUCT_COPY_FILES += \
+	$(LOCAL_PATH)/bootanimation.zip:system/media/bootanimation.zip \
+	$(LOCAL_PATH)/init.common.rc:root/init.common.rc \
+	$(LOCAL_PATH)/init.recovery.common.rc:root/init.recovery.common.rc \
+	$(LOCAL_PATH)/keylayout/AT_Translated_Set_2_keyboard.kl:system/usr/keylayout/AT_Translated_Set_2_keyboard.kl \
+
+#Adding AndoridTerm app and shared library for debugging
+ifneq ($(TARGET_BUILD_VARIANT),user)
+    PRODUCT_PACKAGES += AndroidTerm libjackpal-androidterm4
+endif
diff --git a/emu_houdini/AndroidBoard.mk b/emu_houdini/AndroidBoard.mk
new file mode 100644
index 0000000..32d731a
--- /dev/null
+++ b/emu_houdini/AndroidBoard.mk
@@ -0,0 +1,4 @@
+LOCAL_PATH := $(call my-dir)
+
+include build/target/board/emulator/AndroidBoard.mk
+
diff --git a/emu_houdini/BoardConfig.mk b/emu_houdini/BoardConfig.mk
new file mode 100644
index 0000000..4c499de
--- /dev/null
+++ b/emu_houdini/BoardConfig.mk
@@ -0,0 +1,2 @@
+include build/target/board/emulator/BoardConfig.mk
+
diff --git a/emu_houdini/emu_houdini.mk b/emu_houdini/emu_houdini.mk
new file mode 100644
index 0000000..759a4ef
--- /dev/null
+++ b/emu_houdini/emu_houdini.mk
@@ -0,0 +1,15 @@
+$(call add-mixin-basedir, device/intel/mixins)
+
+# Superclass
+$(call inherit-product, build/target/product/aosp_x86.mk)
+
+LOCAL_PATH := device/intel/common/emu_houdini
+
+PRODUCT_NAME := emu_houdini
+
+$(call inherit-mixin, gms, true)
+$(call inherit-mixin, houdini, true)
+$(call inherit-mixin, cpu-arch, x86)
+$(call inherit-mixin, boot-arch, none)
+$(call inherit-mixin, graphics, software)
+
diff --git a/init.common.rc b/init.common.rc
new file mode 100644
index 0000000..b46b1f6
--- /dev/null
+++ b/init.common.rc
@@ -0,0 +1,45 @@
+# Common init.rc directives that apply for *ALL* Intel projects.
+# Be very careful what you put in here; it may more
+# properly belong in a platform or product-specifc
+# init.rc, or a mix-in
+#
+# ALL additional directives to this file MUST have a detailed comment
+# explaining why it is necessary
+
+on early-init
+	# Mount debugfs and make it writable so that debuggerd can
+	# create stack traces, required with newer kernels
+	mount debugfs debugfs /sys/kernel/debug
+	chmod 0755 /sys/kernel/debug
+
+on init
+	# Contains unit-specific data provided during device provisioning.
+	# This includes factory.prop which is automatically read by init
+	mkdir /factory 0770 system system
+
+	# Android creates by-name disk links with the disk controller
+	# in the generated path, so that the names pulled out of the GPT
+	# can be associated with the correct disk. Create a shortcut to
+	# /dev/block/by-name so that we can use the same fstabs everywhere.
+	symlink /dev/block/platform/${ro.boot.disk}/by-name /dev/block/by-name
+
+	# Associate the specific device node use for the SD card with
+	# the stable symlink 'sdcard'. If this isn't set nothing happens.
+	symlink /dev/block/${ro.boot.sdcard} /dev/block/sdcard
+
+on fs
+	# ro.boot.hardware = TARGET_PRODUCT (set in kernel command line
+	# as androidboot.hardware). Mount all the filesystems as specified
+	# in the fstab.
+	mount_all /fstab.${ro.boot.hardware}
+
+on post-fs-data
+	# Set indication (checked by vold) that we have finished this action
+	setprop vold.post_fs_data_done 1
+
+on post-fs
+	# trigger block devices uevents to fire some "add" uevents to poke ueventd to
+	# start deferred module loading. System partition must be ready prior to
+	# this point. The correct sequence should be guaranteed by this rc file.
+	coldboot /sys/block
+
diff --git a/init.recovery.common.rc b/init.recovery.common.rc
new file mode 100644
index 0000000..dfd59b1
--- /dev/null
+++ b/init.recovery.common.rc
@@ -0,0 +1,20 @@
+# Common init.rc directives that apply for *ALL* Intel projects
+# inside the Recovery Console environment.
+# Be very careful what you put in here; it may more
+# properly belong in a platform or product-specifc
+# init.rc, or a mix-in
+#
+# ALL additional directives to this file MUST have a detailed comment
+# explaining why it is necessary
+
+on init
+	# Android creates by-name disk links with the disk controller
+	# in the generated path, so that the names pulled out of the GPT
+	# can be associated with the correct disk. Create a shortcut to
+	# /dev/block/by-name so that we can use the same fstabs everywhere.
+	symlink /dev/block/platform/${ro.boot.disk}/by-name /dev/block/by-name
+
+	# Associate the specific device node use for the SD card with
+	# the stable symlink 'sdcard'. If this isn't set nothing happens.
+	symlink /dev/block/${ro.boot.sdcard} /dev/block/sdcard
+
diff --git a/keylayout/AT_Translated_Set_2_keyboard.kl b/keylayout/AT_Translated_Set_2_keyboard.kl
new file mode 100644
index 0000000..49e70f6
--- /dev/null
+++ b/keylayout/AT_Translated_Set_2_keyboard.kl
@@ -0,0 +1,425 @@
+# Copyright (C) 2010 The Android Open Source Project
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+#
+# Generic key layout file for full alphabetic US English PC style external keyboards.
+#
+# This file is intentionally very generic and is intended to support a broad rang of keyboards.
+# Do not edit the generic key layout to support a specific keyboard; instead, create
+# a new key layout file with the required keyboard configuration.
+#
+
+key 1     ESCAPE
+key 2     1
+key 3     2
+key 4     3
+key 5     4
+key 6     5
+key 7     6
+key 8     7
+key 9     8
+key 10    9
+key 11    0
+key 12    MINUS
+key 13    EQUALS
+key 14    DEL
+key 15    TAB
+key 16    Q
+key 17    W
+key 18    E
+key 19    R
+key 20    T
+key 21    Y
+key 22    U
+key 23    I
+key 24    O
+key 25    P
+key 26    LEFT_BRACKET
+key 27    RIGHT_BRACKET
+key 28    ENTER
+key 29    CTRL_LEFT
+key 30    A
+key 31    S
+key 32    D
+key 33    F
+key 34    G
+key 35    H
+key 36    J
+key 37    K
+key 38    L
+key 39    SEMICOLON
+key 40    APOSTROPHE
+key 41    GRAVE
+key 42    SHIFT_LEFT
+key 43    BACKSLASH
+key 44    Z
+key 45    X
+key 46    C
+key 47    V
+key 48    B
+key 49    N
+key 50    M
+key 51    COMMA
+key 52    PERIOD
+key 53    SLASH
+key 54    SHIFT_RIGHT
+key 55    NUMPAD_MULTIPLY
+key 56    ALT_LEFT
+key 57    SPACE
+key 58    CAPS_LOCK
+key 59    F1
+key 60    F2
+key 61    F3
+key 62    F4
+key 63    F5
+key 64    F6
+key 65    F7
+key 66    F8
+key 67    F9
+key 68    F10
+key 69    NUM_LOCK
+key 70    SCROLL_LOCK
+key 71    NUMPAD_7
+key 72    NUMPAD_8
+key 73    NUMPAD_9
+key 74    NUMPAD_SUBTRACT
+key 75    NUMPAD_4
+key 76    NUMPAD_5
+key 77    NUMPAD_6
+key 78    NUMPAD_ADD
+key 79    NUMPAD_1
+key 80    NUMPAD_2
+key 81    NUMPAD_3
+key 82    NUMPAD_0
+key 83    NUMPAD_DOT
+# key 84 (undefined)
+key 85    ZENKAKU_HANKAKU
+key 86    BACKSLASH
+key 87    F11
+key 88    F12
+key 89    RO
+# key 90 "KEY_KATAKANA"
+# key 91 "KEY_HIRAGANA"
+key 92    HENKAN
+key 93    KATAKANA_HIRAGANA
+key 94    MUHENKAN
+key 95    NUMPAD_COMMA
+key 96    NUMPAD_ENTER
+key 97    CTRL_RIGHT
+key 98    NUMPAD_DIVIDE
+key 99    SYSRQ
+key 100   ALT_RIGHT
+# key 101 "KEY_LINEFEED"
+key 102   MOVE_HOME
+key 103   DPAD_UP
+key 104   PAGE_UP
+key 105   DPAD_LEFT
+key 106   DPAD_RIGHT
+key 107   MOVE_END
+key 108   DPAD_DOWN
+key 109   PAGE_DOWN
+key 110   INSERT
+key 111   FORWARD_DEL
+# key 112 "KEY_MACRO"
+key 113   VOLUME_MUTE
+key 114   VOLUME_DOWN
+key 115   VOLUME_UP
+key 116   POWER             WAKE
+key 117   NUMPAD_EQUALS
+# key 118 "KEY_KPPLUSMINUS"
+key 119   BREAK
+# key 120 (undefined)
+key 121   NUMPAD_COMMA
+key 122   KANA
+key 123   EISU
+key 124   YEN
+key 125   HOME
+key 126   HOME
+key 127   MENU              WAKE_DROPPED
+key 128   MEDIA_STOP
+# key 129 "KEY_AGAIN"
+# key 130 "KEY_PROPS"
+# key 131 "KEY_UNDO"
+# key 132 "KEY_FRONT"
+# key 133 "KEY_COPY"
+# key 134 "KEY_OPEN"
+# key 135 "KEY_PASTE"
+# key 136 "KEY_FIND"
+# key 137 "KEY_CUT"
+# key 138 "KEY_HELP"
+key 139   MENU              WAKE_DROPPED
+key 140   CALCULATOR
+# key 141 "KEY_SETUP"
+key 142   POWER             WAKE
+key 143   POWER             WAKE
+# key 144 "KEY_FILE"
+# key 145 "KEY_SENDFILE"
+# key 146 "KEY_DELETEFILE"
+# key 147 "KEY_XFER"
+# key 148 "KEY_PROG1"
+# key 149 "KEY_PROG2"
+key 150   EXPLORER
+# key 151 "KEY_MSDOS"
+key 152   POWER             WAKE
+# key 153 "KEY_DIRECTION"
+# key 154 "KEY_CYCLEWINDOWS"
+key 155   ENVELOPE
+key 156   BOOKMARK
+# key 157 "KEY_COMPUTER"
+key 158   BACK              WAKE_DROPPED
+key 159   FORWARD
+key 160   MEDIA_CLOSE
+key 161   MEDIA_EJECT
+key 162   MEDIA_EJECT
+key 163   MEDIA_NEXT
+key 164   MEDIA_PLAY_PAUSE
+key 165   MEDIA_PREVIOUS
+key 166   MEDIA_STOP
+key 167   MEDIA_RECORD
+key 168   MEDIA_REWIND
+key 169   CALL
+# key 170 "KEY_ISO"
+key 171   MUSIC
+key 172   HOME
+# key 173 "KEY_REFRESH"
+# key 174 "KEY_EXIT"
+# key 175 "KEY_MOVE"
+# key 176 "KEY_EDIT"
+key 177   PAGE_UP
+key 178   PAGE_DOWN
+key 179   NUMPAD_LEFT_PAREN
+key 180   NUMPAD_RIGHT_PAREN
+# key 181 "KEY_NEW"
+# key 182 "KEY_REDO"
+# key 183   F13
+# key 184   F14
+# key 185   F15
+# key 186   F16
+# key 187   F17
+# key 188   F18
+# key 189   F19
+# key 190   F20
+# key 191   F21
+# key 192   F22
+# key 193   F23
+# key 194   F24
+# key 195 (undefined)
+# key 196 (undefined)
+# key 197 (undefined)
+# key 198 (undefined)
+# key 199 (undefined)
+key 200   MEDIA_PLAY
+key 201   MEDIA_PAUSE
+# key 202 "KEY_PROG3"
+# key 203 "KEY_PROG4"
+# key 204 (undefined)
+# key 205 "KEY_SUSPEND"
+# key 206 "KEY_CLOSE"
+key 207   MEDIA_PLAY
+key 208   MEDIA_FAST_FORWARD
+# key 209 "KEY_BASSBOOST"
+# key 210 "KEY_PRINT"
+# key 211 "KEY_HP"
+key 212   CAMERA
+key 213   MUSIC
+# key 214 "KEY_QUESTION"
+key 215   ENVELOPE
+# key 216 "KEY_CHAT"
+key 217   SEARCH
+# key 218 "KEY_CONNECT"
+# key 219 "KEY_FINANCE"
+# key 220 "KEY_SPORT"
+# key 221 "KEY_SHOP"
+# key 222 "KEY_ALTERASE"
+# key 223 "KEY_CANCEL"
+key 224   BRIGHTNESS_DOWN
+key 225   BRIGHTNESS_UP
+key 226   HEADSETHOOK
+
+key 256   BUTTON_1
+key 257   BUTTON_2
+key 258   BUTTON_3
+key 259   BUTTON_4
+key 260   BUTTON_5
+key 261   BUTTON_6
+key 262   BUTTON_7
+key 263   BUTTON_8
+key 264   BUTTON_9
+key 265   BUTTON_10
+key 266   BUTTON_11
+key 267   BUTTON_12
+key 268   BUTTON_13
+key 269   BUTTON_14
+key 270   BUTTON_15
+key 271   BUTTON_16
+
+key 288   BUTTON_1
+key 289   BUTTON_2
+key 290   BUTTON_3
+key 291   BUTTON_4
+key 292   BUTTON_5
+key 293   BUTTON_6
+key 294   BUTTON_7
+key 295   BUTTON_8
+key 296   BUTTON_9
+key 297   BUTTON_10
+key 298   BUTTON_11
+key 299   BUTTON_12
+key 300   BUTTON_13
+key 301   BUTTON_14
+key 302   BUTTON_15
+key 303   BUTTON_16
+
+
+key 304   BUTTON_A
+key 305   BUTTON_B
+key 306   BUTTON_C
+key 307   BUTTON_X
+key 308   BUTTON_Y
+key 309   BUTTON_Z
+key 310   BUTTON_L1
+key 311   BUTTON_R1
+key 312   BUTTON_L2
+key 313   BUTTON_R2
+key 314   BUTTON_SELECT
+key 315   BUTTON_START
+key 316   BUTTON_MODE
+key 317   BUTTON_THUMBL
+key 318   BUTTON_THUMBR
+
+
+# key 352 "KEY_OK"
+key 353   DPAD_CENTER
+# key 354 "KEY_GOTO"
+# key 355 "KEY_CLEAR"
+# key 356 "KEY_POWER2"
+# key 357 "KEY_OPTION"
+# key 358 "KEY_INFO"
+# key 359 "KEY_TIME"
+# key 360 "KEY_VENDOR"
+# key 361 "KEY_ARCHIVE"
+key 362   GUIDE
+# key 363 "KEY_CHANNEL"
+# key 364 "KEY_FAVORITES"
+# key 365 "KEY_EPG"
+key 366   DVR
+# key 367 "KEY_MHP"
+# key 368 "KEY_LANGUAGE"
+# key 369 "KEY_TITLE"
+# key 370 "KEY_SUBTITLE"
+# key 371 "KEY_ANGLE"
+# key 372 "KEY_ZOOM"
+# key 373 "KEY_MODE"
+# key 374 "KEY_KEYBOARD"
+# key 375 "KEY_SCREEN"
+# key 376 "KEY_PC"
+key 377   TV
+# key 378 "KEY_TV2"
+# key 379 "KEY_VCR"
+# key 380 "KEY_VCR2"
+# key 381 "KEY_SAT"
+# key 382 "KEY_SAT2"
+# key 383 "KEY_CD"
+# key 384 "KEY_TAPE"
+# key 385 "KEY_RADIO"
+# key 386 "KEY_TUNER"
+# key 387 "KEY_PLAYER"
+# key 388 "KEY_TEXT"
+# key 389 "KEY_DVD"
+# key 390 "KEY_AUX"
+# key 391 "KEY_MP3"
+# key 392 "KEY_AUDIO"
+# key 393 "KEY_VIDEO"
+# key 394 "KEY_DIRECTORY"
+# key 395 "KEY_LIST"
+# key 396 "KEY_MEMO"
+key 397   CALENDAR
+# key 398 "KEY_RED"
+# key 399 "KEY_GREEN"
+# key 400 "KEY_YELLOW"
+# key 401 "KEY_BLUE"
+key 402   CHANNEL_UP
+key 403   CHANNEL_DOWN
+# key 404 "KEY_FIRST"
+# key 405 "KEY_LAST"
+# key 406 "KEY_AB"
+# key 407 "KEY_NEXT"
+# key 408 "KEY_RESTART"
+# key 409 "KEY_SLOW"
+# key 410 "KEY_SHUFFLE"
+# key 411 "KEY_BREAK"
+# key 412 "KEY_PREVIOUS"
+# key 413 "KEY_DIGITS"
+# key 414 "KEY_TEEN"
+# key 415 "KEY_TWEN"
+
+key 429   CONTACTS
+
+# key 448 "KEY_DEL_EOL"
+# key 449 "KEY_DEL_EOS"
+# key 450 "KEY_INS_LINE"
+# key 451 "KEY_DEL_LINE"
+
+
+key 464   FUNCTION
+key 465   ESCAPE            FUNCTION
+key 466   F1                FUNCTION
+key 467   F2                FUNCTION
+key 468   F3                FUNCTION
+key 469   F4                FUNCTION
+key 470   F5                FUNCTION
+key 471   F6                FUNCTION
+key 472   F7                FUNCTION
+key 473   F8                FUNCTION
+key 474   F9                FUNCTION
+key 475   F10               FUNCTION
+key 476   F11               FUNCTION
+key 477   F12               FUNCTION
+key 478   1                 FUNCTION
+key 479   2                 FUNCTION
+key 480   D                 FUNCTION
+key 481   E                 FUNCTION
+key 482   F                 FUNCTION
+key 483   S                 FUNCTION
+key 484   B                 FUNCTION
+
+
+# key 497 KEY_BRL_DOT1
+# key 498 KEY_BRL_DOT2
+# key 499 KEY_BRL_DOT3
+# key 500 KEY_BRL_DOT4
+# key 501 KEY_BRL_DOT5
+# key 502 KEY_BRL_DOT6
+# key 503 KEY_BRL_DOT7
+# key 504 KEY_BRL_DOT8
+
+# Keys defined by HID usages
+key usage 0x0c006F BRIGHTNESS_UP
+key usage 0x0c0070 BRIGHTNESS_DOWN
+
+# Joystick and game controller axes.
+# Axes that are not mapped will be assigned generic axis numbers by the input subsystem.
+axis 0x00 X
+axis 0x01 Y
+axis 0x02 Z
+axis 0x03 RX
+axis 0x04 RY
+axis 0x05 RZ
+axis 0x06 THROTTLE
+axis 0x07 RUDDER
+axis 0x08 WHEEL
+axis 0x09 GAS
+axis 0x0a BRAKE
+axis 0x10 HAT_X
+axis 0x11 HAT_Y
diff --git a/pc_generic/BoardConfig.mk b/pc_generic/BoardConfig.mk
new file mode 100644
index 0000000..b56d576
--- /dev/null
+++ b/pc_generic/BoardConfig.mk
@@ -0,0 +1,22 @@
+# Common BoardConfig options for any device that has
+# a Haswell SoC
+
+include device/intel/common/BoardConfig.mk
+LOCAL_PATH := device/intel/common/pc_generic
+
+TARGET_USE_MOKMANAGER := true
+
+ifeq ($(ANDROID_CONSOLE),usb)
+BOARD_CONSOLE_DEVICE := ttyUSB0,115200n8
+else ifeq ($(ANDROID_CONSOLE),serial)
+BOARD_CONSOLE_DEVICE := ttyS0,115200n8
+else
+BOARD_CONSOLE_DEVICE := tty0
+endif
+
+BOARD_KERNEL_CMDLINE += console=$(BOARD_CONSOLE_DEVICE)
+
+TARGET_KERNEL_ARCH := x86_64
+TARGET_KERNEL_SOURCE := linux/kernel-uefi
+TARGET_KERNEL_CONFIG := $(TARGET_KERNEL_ARCH)_bigcore_android_defconfig
+
diff --git a/pc_generic/init.rc b/pc_generic/init.rc
new file mode 100644
index 0000000..dcde7cc
--- /dev/null
+++ b/pc_generic/init.rc
@@ -0,0 +1 @@
+import init.common.rc
diff --git a/pc_generic/init.recovery.rc b/pc_generic/init.recovery.rc
new file mode 100644
index 0000000..487496a
--- /dev/null
+++ b/pc_generic/init.recovery.rc
@@ -0,0 +1 @@
+import init.recovery.common.rc
diff --git a/pc_generic/pc_generic.mk b/pc_generic/pc_generic.mk
new file mode 100644
index 0000000..b56ffe3
--- /dev/null
+++ b/pc_generic/pc_generic.mk
@@ -0,0 +1,19 @@
+include device/intel/common/common.mk
+
+PRODUCT_NAME := pc_generic
+PRODUCT_DEVICE := pc_generic
+PRODUCT_MODEL := Generic Intel PC
+
+LOCAL_PATH := device/intel/common/pc_generic
+
+PRODUCT_COPY_FILES += \
+        $(LOCAL_PATH)/init.rc:root/init.$(TARGET_PRODUCT).rc \
+        $(LOCAL_PATH)/init.recovery.rc:root/init.recovery.$(TARGET_PRODUCT).rc
+
+$(call inherit-mixin, cpu-arch, x86)
+$(call inherit-mixin, gms, true)
+$(call inherit-mixin, houdini, true)
+$(call inherit-mixin, boot-arch, efi)
+$(call inherit-mixin, graphics, software)
+$(call inherit-mixin, ethernet, static)
+
diff --git a/releasetools/releasetools-generic-efi.py b/releasetools/releasetools-generic-efi.py
new file mode 100644
index 0000000..e24338f
--- /dev/null
+++ b/releasetools/releasetools-generic-efi.py
@@ -0,0 +1,242 @@
+import common
+import fnmatch
+import os
+
+# releasetools extensions for updating UserFastBoot boot image and the
+# EFI system partition.
+# TODO: any given target can only have a single releasetools.py,
+# which will likely need to be customized on a per-product basis.
+# So product teams will need to copy this file and make changes to it
+# for their specific platform. Take most of this code and put it in
+# a python library which can be called from a much smaller releasetools.py
+
+verbatim_targets = []
+patch_list = []
+delete_files = None
+target_data = None
+source_data = None
+OPTIONS = common.OPTIONS
+bcb_device = None
+
+def SetBcbDevice(info):
+    global bcb_device
+    fstab = info.script.info.get("fstab", None)
+    bcb_device = fstab["/misc"].device
+
+def LoadBootloaderFiles(z):
+    out = {}
+    for info in z.infolist():
+        # XXX assumes only stuff that ends in .efi belongs in ESP
+        # reasonable in current design
+        if info.filename.startswith("RADIO/") and info.filename.endswith(".efi"):
+            basefilename = info.filename[6:]
+            fn = "bootloader/" + basefilename
+            data = z.read(info.filename)
+            out[fn] = common.File(fn, data)
+    return out
+
+def EspUpdateInit(info, incremental):
+    global target_data
+    global source_data
+    global delete_files
+
+    if incremental:
+        target_data = LoadBootloaderFiles(info.target_zip)
+        source_data = LoadBootloaderFiles(info.source_zip)
+    else:
+        target_data = LoadBootloaderFiles(info.input_zip)
+        source_data = None
+
+    diffs = []
+
+    for fn in sorted(target_data.keys()):
+        tf = target_data[fn]
+        if incremental:
+            sf = source_data.get(fn, None)
+        else:
+            sf = None
+
+        if sf is None:
+            tf.AddToZip(info.output_zip)
+            verbatim_targets.append(fn)
+        elif tf.sha1 != sf.sha1:
+            diffs.append(common.Difference(tf, sf))
+
+    if not incremental:
+        return
+
+    common.ComputeDifferences(diffs)
+
+    for diff in diffs:
+        tf, sf, d = diff.GetPatch()
+        if d is None or len(d) > tf.size * 0.95:
+            tf.AddToZip(info.output_zip)
+            verbatim_targets.append(tf.name)
+        else:
+            common.ZipWriteStr(info.output_zip, "patch/" + tf.name + ".p", d)
+            patch_list.append((tf.name, tf, sf, tf.size, common.sha1(d).hexdigest()))
+
+    delete_files = (["/"+i[0] for i in verbatim_targets] +
+                     ["/"+i for i in sorted(source_data) if i not in target_data])
+
+
+
+
+def MountEsp(info):
+    # AOSP edify generator in build/ does not support vfat.
+    # So we need to generate the full command to mount here.
+    # TODO bit-for-bit copy bootloader to bootloader2 and mount that
+    fstab = info.script.info.get("fstab", None)
+    info.script.script.append('copy_partition("%s", "%s");' %
+            (fstab['/bootloader'].device, fstab['/bootloader2'].device))
+    info.script.script.append('mount("vfat", "EMMC", "%s", "/bootloader");' % (fstab['/bootloader2'].device))
+
+
+fastboot = {}
+
+def GetBootableImage(name, prebuilt_name, unpack_dir, tree_subdir,
+                     info_dict=None):
+    if (not os.path.exists(os.path.join(unpack_dir, "BOOTABLE_IMAGES", prebuilt_name)) and
+                not os.path.exists(os.path.join(unpack_dir, tree_subdir))):
+        return None
+    return common.GetBootableImage(name, prebuilt_name, unpack_dir, tree_subdir, info_dict)
+
+
+def IncrementalOTA_Assertions(info):
+    SetBcbDevice(info)
+    fastboot["source"] = GetBootableImage("/tmp/fastboot.img", "fastboot.img",
+            OPTIONS.source_tmp, "FASTBOOT", OPTIONS.source_info_dict)
+    fastboot["target"] = GetBootableImage("/tmp/fastboot.img", "fastboot.img",
+            OPTIONS.target_tmp, "FASTBOOT")
+    # Policy: if both exist, try to do a patch update
+    # if target but not source, write out the target verbatim
+    # if source but not target, or neither, do nothing
+    if fastboot["target"]:
+        if fastboot["source"]:
+            fastboot["updating"] = fastboot["source"].data != fastboot["target"].data
+            fastboot["verbatim"] = False
+        else:
+            fastboot["updating"] = False
+            fastboot["verbatim"] = True
+    else:
+        fastboot["updating"] = False
+        fastboot["verbatim"] = False
+
+    EspUpdateInit(info, True)
+    MountEsp(info)
+
+
+def IncrementalOTA_VerifyEnd(info):
+    # Check fastboot patch
+    if fastboot["updating"]:
+        target_boot = fastboot["target"]
+        source_boot = fastboot["source"]
+        d = common.Difference(target_boot, source_boot)
+        _, _, d = d.ComputePatch()
+        print "fastboot  target: %d  source: %d  diff: %d" % (
+            target_boot.size, source_boot.size, len(d))
+
+        common.ZipWriteStr(info.output_zip, "patch/fastboot.img.p", d)
+
+        boot_type, boot_device = common.GetTypeAndDevice("/fastboot", OPTIONS.info_dict)
+        info.script.PatchCheck("%s:%s:%d:%s:%d:%s" %
+                          (boot_type, boot_device,
+                           source_boot.size, source_boot.sha1,
+                           target_boot.size, target_boot.sha1))
+        fastboot["boot_type"] = boot_type
+        fastboot["boot_device"] = boot_device
+
+    # Check ESP component patches
+    for fn, tf, sf, size, patch_sha in patch_list:
+        info.script.PatchCheck("/"+fn, tf.sha1, sf.sha1)
+
+def IncrementalOTA_InstallBegin(info):
+    info.script.script.append('if get_bcb_status("%s") == "" then' % (bcb_device,))
+
+def swap_entries(info):
+    fstab = info.script.info.get("fstab", None)
+    info.script.script.append('swap_entries("%s", "android_bootloader", "android_bootloader2");' %
+            (fstab['/bootloader'].device,))
+
+
+def finalize_esp(info):
+    info.script.script.append('copy_shim();')
+    info.script.script.append('copy_capsules("/system/etc/firmware/capsules");')
+    info.script.script.append('unmount("/bootloader");')
+    info.script.script.append('unmount("/system");')
+    swap_entries(info)
+
+    info.script.script.append('set_bcb_command("%s", "recovery-firmware");' % (bcb_device,))
+    info.script.script.append('abort("BCB update / reboot failed!");')
+    info.script.script.append('endif;')
+    info.script.script.append('if is_substring("FAILED", get_bcb_status("%s")) then' % (bcb_device,))
+    info.script.script.append('    abort("Firmware update failed!");')
+    info.script.script.append('endif;')
+    info.script.script.append('if get_bcb_status("%s") == "OK" then' % (bcb_device,))
+    info.script.script.append('    ui_print("Firmware update successful\n");')
+    info.script.script.append('endif;')
+
+
+def IncrementalOTA_InstallEnd(info):
+    if fastboot["updating"]:
+        target_boot = fastboot["target"]
+        source_boot = fastboot["source"]
+        boot_type = fastboot["boot_type"]
+        boot_device = fastboot["boot_device"]
+        info.script.Print("Patching fastboot image...")
+        info.script.ApplyPatch("%s:%s:%d:%s:%d:%s"
+                          % (boot_type, boot_device,
+                             source_boot.size, source_boot.sha1,
+                             target_boot.size, target_boot.sha1),
+                          "-",
+                          target_boot.size, target_boot.sha1,
+                          source_boot.sha1, "patch/fastboot.img.p")
+        print "fastboot image changed; including."
+    elif fastboot["verbatim"]:
+        common.ZipWriteStr(info.output_zip, "fastboot.img", fastboot["target"].data)
+        info.script.WriteRawImage("/fastboot", "fastboot.img")
+        print "fastboot not present in source archive; including verbatim"
+    else:
+        print "skipping fastboot update"
+
+    if delete_files:
+        info.script.Print("Removing unnecessary bootloader files...")
+        info.script.DeleteFiles(delete_files)
+
+    if patch_list:
+        info.script.Print("Patching bootloader files...")
+        for item in patch_list:
+            fn, tf, sf, size, _ = item
+            info.script.ApplyPatch("/"+fn, "-", tf.size, tf.sha1, sf.sha1, "patch/"+fn+".p")
+
+    if verbatim_targets:
+        info.script.Print("Adding new bootloader files...")
+        info.script.UnpackPackageDir("bootloader", "/bootloader")
+
+    finalize_esp(info)
+
+def FullOTA_Assertions(info):
+    SetBcbDevice(info)
+    EspUpdateInit(info, False)
+    MountEsp(info)
+
+
+def FullOTA_InstallBegin(info):
+    # Open up a block if the status field is empty; normal update phase
+    info.script.script.append('if get_bcb_status("%s") == "" then' % (bcb_device,))
+
+
+def FullOTA_InstallEnd(info):
+    fastboot_img = GetBootableImage("fastboot.img", "fastboot.img",
+                                     OPTIONS.input_tmp, "FASTBOOT")
+    if fastboot_img:
+        common.ZipWriteStr(info.output_zip, "fastboot.img", fastboot_img.data)
+        info.script.WriteRawImage("/fastboot", "fastboot.img")
+    else:
+        print "No fastboot data found, skipping"
+
+    info.script.Print("Copying updated bootloader files...")
+    info.script.UnpackPackageDir("bootloader", "/bootloader")
+    finalize_esp(info)
+
+
diff --git a/testkeys/KEK.pk8 b/testkeys/KEK.pk8
new file mode 100644
index 0000000000000000000000000000000000000000..faa0f56aaa585d6fefc216b9d7f013b1cddd80d3
GIT binary patch
literal 1217
zcmV;y1U~yPf&{$+0RS)!1_>&LNQU<f0RaI800e>rr!ay9qXGc{0)hbn0IqeA5-P+f
ziJ5F<PnK=hqN+)EP<Q?z8nAZ>Tx@cBN%afmnQ)HzVPBMJw<&Z>Rq6B^OVp{D-;h7X
z_x~aP8i7(t9=!@QFg`MAGUth1NZ11z`o_GcA_(&5VTf^MvH}~gux}wPPaCr>zyA+n
za$=%E!Vc9Sk;nVm&AJxcb->mt^4LIG9JtTdxe+P4oO6{jWg?!6OFeCPcRS?o&uZoP
zt*%ZO=*Xa?yI`QDAw2;;W=LW67klNlrBLD(kpNIO(IG#VVOx!)YI^A#JPzd<E?z1P
zl{q~?YY(J#9lPad|BIXXrULet_GT$-p2{fPU8>)-8i06!Y$ava2?7HF009Dm0RaG<
z6H^1-yv5^e9lMk?DJr}@3L>)`)_=K2+y=zw#CE|6cuqY!q`p`!(J<+REu~~cJbd;L
zSau4u8%m!2Vr9NbsoMUd@~8vs@ZO4w_o_S#{GwK8OUYh3kxdOns^w=MS+tPss>;PS
zE7PYd!H~Lgp=6-`@(%<&+=ak>Rt$aAl!V`Z>}!uyFKup2xm&?`4Iz!EbXlp#4Z<ny
zJ&IPp0X`#yEjyovka0L!vEaW<p`oYMic}>{B1c$If__$vt^6jp77{)A{<QXLI0C^p
zMllVTuw(nm=Pki{TVCA7*B2#T-vYS#R8*M#|CA4C%M{K%j>0=No)fH&yqz5afq?+$
z8+zRB1qdn-->Pgsl)1T8%2(p|EQ%4Pj9&d*cBQ|2JBRuPxrB7L3?R;_V{620s?lJ=
zLFoo;#Hr1OUOSGZ?+Iv(qYWz@^25>7CM=wT0UyLP;@EIxwoW;o%z5!b|6NeL=<jK!
zw-SMC21}4h;qBObpZST)$>73R41W^>fq?+QKofU(uh7C!M7(&>E{yyZiI2~hz7C0h
zgHMJ0%Ekv;+|}6=qj8a1LDw#rK}8Ct)7%2Oh<3-wWQ8{IA)wHqFqF^qt@hpMxy{es
z;!g96hQ4X{L`QsK5ylo9d4QaLzyi#_J9vw`1%bHjHwgwtkFkE-ZPYlzx9^IyAn5Y~
zfq)En9~kU#=?~laHE6-bbbs4%A8gNwN2$yrroCj(!U3YxgK?@0IBHY21J5F~ii`e`
z_}dSl9>R(H(ruJtVKhM>w30uBOre(ELQ;R>|7J34O&fUs1Wt?~iTCm8c52=Ni8f*S
z?{D+o%+SuocrHNBKi2+YV?<mEcxD6oD4_y@fPO%pcP}BX0YvYkGD~+}BvX|OpHxGZ
zyS>uO;eCbtT2aDu^PM2-(Mx7HZup6-(TS{I&}fZ6491@2X+NL%uvDI?nlu1&hz7%4
z^08{Dsq{V5sOKVdk&W3-(4wM#qrWRMsS!qrI>5A;OL(rk_MM``6JBp(cCx?te`T*4
zfdYYmHDagFxKW$4zO3jho}`9L#2vHzW%-{FX5_AII_GScPq`^pfXZ?13ZxTe!O|_g
z!91iMP12q8i@>FP-V-7m`}7IivF>`%{@wU<<2$mSh|aCy)N2!>g3EXzj0!`!(K4dI
f0_^8rlOz!rHNuGsED#UOGPN-_Eyua?cbia)tzTI7

literal 0
HcmV?d00001

diff --git a/testkeys/KEK.x509.pem b/testkeys/KEK.x509.pem
new file mode 100644
index 0000000..8ea6d72
--- /dev/null
+++ b/testkeys/KEK.x509.pem
@@ -0,0 +1,18 @@
+-----BEGIN CERTIFICATE-----
+MIIC7zCCAdegAwIBAgIJAIiuae4++lyuMA0GCSqGSIb3DQEBBQUAMA4xDDAKBgNV
+BAMMA0tFSzAeFw0xMzEwMDkxNzM1MjFaFw00MTAyMjQxNzM1MjFaMA4xDDAKBgNV
+BAMMA0tFSzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAK51kBIqxCiJ
+mWxkT5Zt16KqSXdQd/4hGrB3CVxscnpJ9QvlmXCO+WFflGi3KXRLVen0GkvUqZjf
+kD/G9/8h/xqBUkkevQo0MD4yaTLniV1I2AMZ+sa8pyII8udhiHFlsgIbr7BvIS1P
+G7Mtv/8PYnJiokHCDtUgkcf72s26Ftx1wNYq8thAWRy4z9e5ESm6nHOVMmUinopL
+PW14dzvk789q5fitrk4Y6MigpLtgoKUhPQE+Zkhh9Rd75balUOIVkQBQNtEhP5dh
+W42kanrpGzwO5RkuXioNlTk9QGsPpHUdu+Vo/4ub+aYC9pf2Zilrnsoo3F2q37Qa
+gHiAbCVl1wkCAwEAAaNQME4wHQYDVR0OBBYEFN4jn8WZTH8goXdtdGju9H2U45s3
+MB8GA1UdIwQYMBaAFN4jn8WZTH8goXdtdGju9H2U45s3MAwGA1UdEwQFMAMBAf8w
+DQYJKoZIhvcNAQEFBQADggEBAJhHMEF7N4q577krkC9oCc2ckbK/zugpTszxQx8t
+mdBFA4k7cUKFK4QHmYJAdTb39MKTfWcp7bWmcfQ9alb16x3OnHW0FJh3iziczpQT
+yZaiNZhFrPqv14VWyqyxw0nX9KRbrPwyVHO/dVl6V+d/7hQNDgjNSLn8sc4KsyaP
+y7WJzKZdDnXoSPrFYbgx80fdnYbEcejOo02W2Fz71OpJGUBh9JYM8g6q9F87Spz8
+62dsjhm5HkZkWbhOVUU29f4wJJIEvZZPfwaRqTqeWef8+nr9N9CI6yRydLr4WLKR
+rgpFft40cxKrhfc23itKbBYm3xtoLDiqa9tKJWhtZ7NpQsQ=
+-----END CERTIFICATE-----
diff --git a/testkeys/PK.pk8 b/testkeys/PK.pk8
new file mode 100644
index 0000000000000000000000000000000000000000..7b6c38f9593cc6c5c8b8d45ca99d146dc9460603
GIT binary patch
literal 1217
zcmV;y1U~yPf&{$+0RS)!1_>&LNQU<f0RaI800e>rr!ay9qXGc{0)hbn0JsG{+uanj
zxtR-;I)XFD>|WF9E1w_`8voRX*QsU8Tc7c&4<E_Y+NPt=4qd|nWIe4XpCCnjSe~TF
zv#p=sm7ZPfAr63<D^#!9?yLQ6p}n9(w_IgZ%lcVaX2MqzwLIinx!J_{J4P%*5^T^)
z)b8jCEgaD67J~>G+F{k3Z*VvCzC`-}bX>-EMRhg23TK@Kt2<FB4UHv5mH4>~q$m|-
zmxpb@=)kK|lYUR?2W?oTEr9mF*5iTLQ|{0lr+;@0mp2$uF0n7k8RHwivv?xZ7v=GK
z@~#<LK5Ou70sAku0QQ3anNLZhCM;Mo<<iD<Y&v7Wc6q&S#ekYitpWo9009Dm0RSXD
z%sOh>2pYj$d2Q%)pgbBB><A7=w?s+&CSbqV?`riP7#i?w#DV8+y?UG0t0L&muub!V
z90ZpE=MfX}w~O@alys6Yn|R<Y-Qw1Ei{IVDv2tuY{H;rQ%T%P3mw2EoZ2ikPvX-Ib
zSAyShN;{KnnTvMtVoXJ}6T4xjI{Yf289FbMF;SXkO!^jYRip~Ji`XO30^#TGDacuq
z<2O48V0`V3(mvlpPX9V_G(Am;M8Qyyh-#M02ERh7nBhuN4n0I4P{RRdu?_r<0t<;Q
ziKd{OR(YYfBOaK!n*YGIOv!mYr6|4Wwl-D3I2(C{fxsMME|`jO%`hC%b~OTlfdKB^
z3}<N4kJvzHmXS=OI8`O4-YW{+CzOqhBlnhPNg?Nhjd&&K^7>EvZPXu=_GRiaJI_51
z%*?$wFV(}C^3V?bcrsyG_Pw0i;M)q8mcN?u-vw)VtAJ`^nYV~OeCnj$9%z=K%u)wM
zBaSzF>8tD9fd%K>1AQ{@BpqR8X`=#xfdIug^iV=p6PjN5%958tG)?69mqpFs$#h5;
zJ}Y%2C{4*S2<V<IJ&R@J$w^M--X7j>eyyy}=_AyrWjeWY2sw@(#DQ6ET|jna;7nm^
zcb%i?n*esWR7>Hll64f<7QmplJBNeOAZ??hf0wu&|Kg~pnVu{@k@|~}Z=oK{YHtF8
zfdH;1&@x>Fm<P=L^f^DR2^U*>OeG1Y_1mLQ_pv@9Q~J6#`QQzc$OEKk=4@~gisnaH
z6t6}P5>|WX2}w(EsweZM?h2h-;6LK3+M*d4E)>YUY$G9d_6dxK6BqL5%wMmNnvWW^
zAgT4v{M%)$oO9A;R8*h!lRc*MAX}q#GYtZPfG!B4HVu`_(~ogr&mfU1W;hsjZL6hO
zKvV}{(t+>i+h`}wo`p3i6<&TVVR#Y!Yn2_(BDkP>*^4Zf975+0w`XnD4j>Y{pKU`>
zJY&q42<w(Yf3!A8F2V_7lLLQ5=SN%}fBy@V7b8d|Bm=Cp>T%Un?C*rvOZ35v+`Y7x
z?*f5<TUaf=oFA>=G2%@_z{X7tKXa75`_^4i4dM+xSvE7yo4Ho8EGL>{-bKPkV6#iE
zO=V!Md&IalI!nlmiMZ3Sz+;6Ud!r^=MvdEcQo|5p=ZB_YKK>%u3!v{?;O12|_uQn7
fcvRY3qKi*B_-0y5iulu<9`1$lTofHK)E7dpmG4Ul

literal 0
HcmV?d00001

diff --git a/testkeys/PK.x509.pem b/testkeys/PK.x509.pem
new file mode 100644
index 0000000..51bc954
--- /dev/null
+++ b/testkeys/PK.x509.pem
@@ -0,0 +1,18 @@
+-----BEGIN CERTIFICATE-----
+MIIC7TCCAdWgAwIBAgIJANilBcuD0zi4MA0GCSqGSIb3DQEBBQUAMA0xCzAJBgNV
+BAMMAlBLMB4XDTEzMTAwOTE3MzUzM1oXDTQxMDIyNDE3MzUzM1owDTELMAkGA1UE
+AwwCUEswggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC4BT7b3RS0uZkL
+lDqCM8fsXtPpK58gEBr/1IfXqWXLW5/xqg8fydTapqPPDl3DAmQ9rSefIEV9WJ6k
+yLOtn9+Vnl3sIQ6AmStUr9nuq/1tob2gQ7dcZVTL+llZZsJXErU85Fq52cT4O0Ys
+QhJs0ErU7ugKLRzQ6xaDCBnaYdWbb3A39L5E+v90XMZ2RXU1vApnnQWrO1EoDY0l
+RZX4uQykKBVll4dtwOjAq1KTfk/qB21YpS2A9r/W44HYU+7QHKd/dwyXNxhRLrEv
+yRnjG76zeCLUF+XxevKuGVo+a/BsAfsvtgD2gv+ZT0mjJixYMuXSxnRsOmPAdnm9
+bsWAmkutAgMBAAGjUDBOMB0GA1UdDgQWBBSbOWsQEMcCF5Sj/Jzzihw50PdLFTAf
+BgNVHSMEGDAWgBSbOWsQEMcCF5Sj/Jzzihw50PdLFTAMBgNVHRMEBTADAQH/MA0G
+CSqGSIb3DQEBBQUAA4IBAQBxX8Xn0DuH1ylXCfRalkoQaTv1z3hS8Vw9twaUhCfe
+aZJct0I2xg67QUo2AbOXiXiNtY9LpK2wUyGbgOp9NdJKw+Z9k6RYHjEX7ftcM2f5
+u9eyCL5ovpiVy+b/MCGv0V7yo3T83LV7msVEnrd36nGnq2z3QwnCzThzVKu9eQX8
+8KHtLMNvB1cVdCs0E4jDTYwOIjZ/ZDElxVGQdCuFN917UZKLb8VDL9q6PPZCE5i+
+r7HFEuM283Sp0ouHHcHxnr8ScyJ7AALFryWbpIBcLzlFDH69GzJotvQSro/OSKDP
+U758ZQM7ZQLkvRJ+pf7aRDuLVFd/eUI8rWj+X527hLIF
+-----END CERTIFICATE-----
diff --git a/testkeys/README b/testkeys/README
new file mode 100644
index 0000000..eebf0b0
--- /dev/null
+++ b/testkeys/README
@@ -0,0 +1,54 @@
+The PK, KEK and DB key pairs are required by UEFI BIOS for secure
+boot. The 1st UEFI boot loader should be signed with DB key pairs. and
+certificates of PK, KEK and DB should be enrolled into BIOS with the
+help either from UEFI applications in the installer or operations in
+the BIOS setup menu by the user.
+
+These key pairs are generated for test purposes (secure boot,
+OTA...) only with these commands.
+
+development/tools/make_key PK    "/CN=PK/"
+development/tools/make_key KEK   "/CN=KEK/"
+development/tools/make_key shim  "/CN=shim/"
+
+Developers and OEMs should provide their own key pairs if they want to
+use their own private keys to sign the 1st UEFI boot loader and enroll the
+certificates into BIOS. They shall have their own approach to manage
+their keys as well.
+
+Various tools may want the keys in PEM or DER format. Right now the
+private .pk8 key is in DER and the .x509.pem is in PEM.
+
+To convert private key to PEM:
+ openssl pkcs8 -inform DER -nocrypt -in key.pk8 -out key.pem
+
+To convert public key to DER:
+ openssl x509 -inform PEM -outform DER -in key.x509.pem -out key.x509
+
+If Intel provides any signed binary to customers (official released binaries),
+these test keys shall NOT be used.
+
+The following variables control how images are signed. Unless specified,
+defaults to build/target/product/security/testkey
+
+TARGET_BOOT_IMAGE_KEY_PAIR - Key to sign the AOSP boot images
+TARGET_MODULE_KEY_PAIR - Key to sign Linux kernel modules (MODSIGN)
+TARGET_MODULE_GENKEY - Metadata file for MODSIGN, uses kernel.x590.genkey
+
+For building EFI executables outside the Android build system using
+generate-prebuilts.sh scripts:
+
+DB_KEY_PAIR - Key to sign uefi_shim. DB key for efitools LockDown.efi. If
+    USE_SHIM_KEY is false, key to sign MokManager.efi.
+GUMMIBOOT_KEY_PAIR - Key to sign Gummiboot 2nd stage loader. Must be either
+    the DB or shim key. Defaults to DB.
+KEK_KEY_PAIR - KEK key for efitools LockDown.efi
+PK_KEY_PAIR - PK key for efitools LockDown.efi
+SHIM_KEY_PAIR - If USE_SHIM_KEY is set, key embedded within shim.efi and
+    used to sign MokManager.efi. USE_SHIM_KEY is false by default.
+
+You should leave these as defaults and use sign_target_files_apks to use
+production keys for releases. Developer builds should always use these
+test keys.
+
+
diff --git a/testkeys/kernel.x509.genkey b/testkeys/kernel.x509.genkey
new file mode 100644
index 0000000..86b5c24
--- /dev/null
+++ b/testkeys/kernel.x509.genkey
@@ -0,0 +1,17 @@
+[ req ]
+default_bits = 4096
+distinguished_name = req_distinguished_name
+prompt = no
+string_mask = utf8only
+x509_extensions = myexts
+
+[ req_distinguished_name ]
+O = Magrathea
+CN = Glacier signing key
+emailAddress = slartibartfast@magrathea.h2g2
+
+[ myexts ]
+basicConstraints=critical,CA:FALSE
+keyUsage=digitalSignature
+subjectKeyIdentifier=hash
+authorityKeyIdentifier=keyid
diff --git a/testkeys/production-test/DB.pk8 b/testkeys/production-test/DB.pk8
new file mode 100644
index 0000000000000000000000000000000000000000..a19d1d166be6d4409d8ea4cbdc40ac41b9986a2b
GIT binary patch
literal 1219
zcmV;!1U&mNf&{+;0RS)!1_>&LNQU<f0RaI800e>rsW5^Br2+u}0)hbn0O=y<E^k4T
zcs@aiOvE%8g>i1dBPc>+CyP}0&T`P3cBdsg`CE~H)YbwwKkhl@R!d1rhdc?^m0%8u
zrnE&o3x6NBQhd&j_PEq(yv8czW+J|sLz{{pgp>&59UvT=x+xSMEkd>N+SW<OQ>}%R
zCf{pznp;Y+Op*REzNmxfPi5hSn6k&UANJ542=rRB-3Dw4%Gz8JAo38b>C@sT4kNwO
ze+_!~A+z)rX*sWL@>I)aj-?%`R#CBKQ7?f!tViNULaxp|92*;1z}JM?9E86f;##mo
z3)*T=3skE!A3&lZl?mTpgy@$_2%_NL0w<V1PnT|fxfIqPejJ>u<pKi%009Dm0RaH!
zY!2Q)EGioyJsJG_w;8=!eZu;Jq6+F<wc#uKBHv{QlCO^~$HMlLhM^$X&Ga+0IesPQ
zTRHJ<eK6z6EZoWH9cj>EcCV*|%Dk^lmAfR5mY!J2^jvOc`Pr{QyTsPq9{enG(Cl~w
zZ|g{NDxqOQRW4>FaL$VVh@+MBY+OI8P|62vih@~NuEW+T0NKSr?#VUjeNwGK!CQ*e
zCg^y4My(mjcyRQzfutGF3x3&?&{t@h2YKUwj@>z#kEV&Qc{<vNL6Cke+762J-8c9|
zV?w)J9n!H>U2f8*KG4`H@Gsm8QPxy6%&O&v4DQ(;@@IsTGx$xDHg-q`nmqvmfq?+{
zN0e+kVaBQ6sLdCKhhqro9eblc&St<)ItoNBdKozj4h92t0YZ@Vbh2u!>LrTvz?hYZ
z^O8Ul>6igPkbKsAF|WPWYM?;T<svy_lLXrk9R%2c_os)`)`iszH|nCEBr4q7>gxci
zlR#uhAlqU!sKrJVR|w~k?Zo?+)$8E`fq?+<V#c4DhnK`Ghu6Ts7c2;Teb&JMbG-?g
zRlBL|ZonjTCghdnFV8O1lgb+kZUVgV50LC~3Y&FCG=m(QV8tw2Pd8Z7JvGe9ws_?L
z|AHfnJ>HTx%4n{ZG>V0qc>G@%#<zL0%lv4t;SbiEVehq;kNHhkM|(gbtK9Zfogjq*
zfq)aht{_H1D=Q3{<!3*>xwKWskhGRK_m{~bc>AB4oiiGo4FYXuqC+Ai9HqPn4B(e9
z^>e^G?x4nW$uS^L-hR2_WES{d7fsORC+XzyCv3h&aKk|3(IQVuJMWDu@3HJ&_(BE+
z6q!Q!;2@e*a^J^c901K_)j@|Wp@mwx96<tsfdGxIiRV)DsjWkqq`kxWWJq);F2#M|
zxev+MvCN9U6PxIvYos*#BA_&{EHxL#lJboiVUHRA%5*9=l=tmZ@uD1X2khUhm*V9Z
z7}U?}$K~%4J@)I)?l;Hlo1pg8OWHUGH0TpcO0MByB$k!w`2Y)tJEkkd!;PO|ug|wT
z42c4PfdJu#2H+9mZTR-+vLE;)v2&dC&7lvjZ0DTi&JV0VwAH@TBmKW4^Vf9xez5&^
zxw!Ov1^1lWynvJ(SRY(ZbT38LZm2x-VQx}~PlJ@p*F2x}?QXbk_<-*reS)`8%hcVZ
hwoH(VqP-aVL@HV7AYYv&1wqhjEXiOD?3#xTr%c*sTD|}P

literal 0
HcmV?d00001

diff --git a/testkeys/production-test/DB.x509.pem b/testkeys/production-test/DB.x509.pem
new file mode 100644
index 0000000..88eaf69
--- /dev/null
+++ b/testkeys/production-test/DB.x509.pem
@@ -0,0 +1,18 @@
+-----BEGIN CERTIFICATE-----
+MIIC7TCCAdWgAwIBAgIJAL9VdZxqvIICMA0GCSqGSIb3DQEBBQUAMA0xCzAJBgNV
+BAMMAkRCMB4XDTEzMTEyMDIxNDgxMVoXDTQxMDQwNzIxNDgxMVowDTELMAkGA1UE
+AwwCREIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDpIucub0GTeD5B
+iUzENBiFcW7BIyhCYyeLVPjOctCbdqclPPlbkX/U1gI3P+455VZLSUqHPAnWlWAO
+iaa0RTwLfx+2UnzOj/a41Gm8xirkZiK+mUObih+ElAjjHSAcm7opFB4tQrXx2tZJ
+x1OthZQm32t2mltKsEyR/jG+qIPoT2XhhZiyx7Uf9tAdCPRas90GbAnK2lwRIPIQ
+rOnT4icOI73Tfw169yGz9BZpOa9t8lTLZo6lHalWUbFlUS+BPKxH4kdCrs49HBsb
+WcDXhNkchL8e4lqwRAvaak8LVKszH0CiIZUJ31+E6JdKCKLg3gInmD9Pl25+uRTW
+H34cnKvlAgMBAAGjUDBOMB0GA1UdDgQWBBRUfnd/iOT52TDj+5K83hj4tWUh3TAf
+BgNVHSMEGDAWgBRUfnd/iOT52TDj+5K83hj4tWUh3TAMBgNVHRMEBTADAQH/MA0G
+CSqGSIb3DQEBBQUAA4IBAQCn+rS3CN5cHiC+NlJprZKj4qQcqJ+5C71/FScMTutw
+4INvoRBYXS5qqe08bCtJWFfZ7+Osn57g7TgJy4RVUyeDpb9rF6i601Zb721LcvRX
+62CW1qxLueOTJGsvS6ps1YkdavOqM7f9Vr6wmk8cXepdeMz4Tx0fLuGk/qL6SPjO
+pFkwDohYqV2cql+LgtILZn8H3thrFWByiLjfsG66num4ISjirXlodr7gmwgZC4LV
+2v7pR9K0onIXIRMZkqytCUrpblXIgg/3WKuEjl4XgtOvyW6ttKLSVJ5AR+F+xGd9
+FrmITdExKwH/dt73EyZYGZnOiJuynSDptDarakbhcOMA
+-----END CERTIFICATE-----
diff --git a/testkeys/production-test/KEK.pk8 b/testkeys/production-test/KEK.pk8
new file mode 100644
index 0000000000000000000000000000000000000000..5b2eae17573e785ebc0257e136a2c25235997194
GIT binary patch
literal 1218
zcmV;z1U>sOf&{(-0RS)!1_>&LNQU<f0RaI800e>rs4#*Aqyhl|0)hbn0Ns|BAl>~)
z?JGg0rE@Xe6KzEbM+=gu9Y9h!)=DkbaLxzNl95KRmC}l>t^Fpo*GfoS*;2XpY@^yN
z`VE_O!Nl`H=34%`1S9|-^k2hg0jE2n&KzDTxwB5m&wk$DQ{VhN9x?pDTG5yacYg(R
zWbfQjIe$)eP~g5350$rV&~}G3w+V#3(tr(`Jg{B|zT9jHUG89#*5Yk`M5F26yiNBo
z)-3KWtkSnn#yJe1HA^)p4W#y*Abi?~SwB7M66(nUW+?D#kwDpO#Y}8E0mALDP|V!I
z(rsu}x#^#_MN5gRqo1Rc0PTj36nJcE=q;PKTUAeZ=c|bQNn!O9UjhRG009Dm0RS*r
zmr#74v$gDITAGVgDg^%~y<=M^82_mCNFjChB7kDFS<+!xr&md(aM&^stVG$gh;8#5
z7~S8p&vlSmhf{EZ6SE7?;SSzB7`)xsX*G8w5EdaKdca0ozO_T$rKL-bVjskiefU!w
zb<H&{AA^>{;08y$`y3Lj=EBp=K5c?Lkslis0FQN^yRWLlvJ8bJvH#q!I=U63Hu<c(
zVV|;;ln-rfcCd^<#jJNYh5{68&7vy|o`e`=4}67N7K8n!cZ?E3dHm%mvd0g&IHy7X
z!Eb_oGKRclOSq1KKoRtvP!+pie`VhLrcERTz{d|$t$9g;5as}-mhQifXTbu2fdKJi
z${lr*WsdnZN?Y-25pYwGhu0+*(3@`JCEfZTqb+6@>cgqRV+->nn&HZw=U(+dU8i+=
z%H$<4w86gmG2CtcW4Go@_{5qXeKKzF{FuW3?B;=c>Abpg6x?V&rMKosca`P`03$p*
z``7YDkd=|=^`X8>*-@vjeHhX}J@*2EfdK0N`%{XLWD+Jv5gQ_Hu8ksr-Wx8nt(D^6
zLT0^opPZCU+u(r8!;*iz$01s#pG@+HvAYL(?Qh24P*Y;*e$1t`9jhi7yKIqag-a2j
z3OFy?IdEa;hHjOete)XI{+Gl#bYKHPx_$d8_h+e!&TG&AxC&wAZa*MfXXuRNo7n<^
zfDu<c*~jc~XGr(Y6SL3`*rw<w8VQUJ2wZyFg^R{w4vgCHnuWu4A`+o`j^*Q8541*~
zbG$gp0)e?-p4)v@zoZvPu9;Y~(o4_`=4P4UONbVtiX59RJ7k%M(jA)ugr|a1(Cz7J
z)g3CK`0Z+}P*Ps|f>#YecVIYoASGIW83KWU0NHCmLCBv{mY^qmA{e$+nrdXQ^MOC-
z$QJ<YR8`VkRp+=VND82iRSGS{CXLcQ>{u^HHhl6&#Pq;JcLKV304fIjv<@jRu7J~q
z!!K!EOCzeu9lF;PKUdjnjtgKTkdl#oq#qwX#k36F!(h(!ur=PNjiZS>c-S2IgXCt_
z@dAN?0MlR6I|J`ZHOWs=rnrdz9G9@yffoC;85YjU$Svz=^Sp96Y^(hAFAg1Mp14u4
zlO3etJ|(jvpnB`ZHsElJRS5XG&2k|?)@m%=T&y9dMf;h$f~irWV$X-K=yjU~rmS}Q
gW&d_h@*z!*Z0?L^Z40rca|J(bTXJ^%bbw=gQ{8V>;s5{u

literal 0
HcmV?d00001

diff --git a/testkeys/production-test/KEK.x509.pem b/testkeys/production-test/KEK.x509.pem
new file mode 100644
index 0000000..a842bee
--- /dev/null
+++ b/testkeys/production-test/KEK.x509.pem
@@ -0,0 +1,18 @@
+-----BEGIN CERTIFICATE-----
+MIIC7zCCAdegAwIBAgIJAMbTQYnod2g5MA0GCSqGSIb3DQEBBQUAMA4xDDAKBgNV
+BAMMA0tFSzAeFw0xMzExMjAyMTQ4MDJaFw00MTA0MDcyMTQ4MDJaMA4xDDAKBgNV
+BAMMA0tFSzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAN2WliDd/Ujt
+K0GlpXMx3RNtRQpHC5KoHUBSOdZKLdZwzgfQkpFGsJXSiq2t/Sa110pIXNlSufds
+o9os+g2bdMHE80HmWv66BCQAH/Rfw2cBpzuizhxeKbmzTsnPft7fU9/8PB4x/MBa
+0ZgKd38FdGTv3FE5f052UOC+Ew+Vt23Qdoc0twmEvdKADZo8sF4HvtxsCV3uYJLW
+4m1+RKPp3rxN9zDWLO4urNK3T8Y5DJ81SzUoDaT2nCB82odZPz3qEurJAmYo8GqR
+QNlsxUxsOgHC7bBQzNzC0m1oVbnpn7ZFS4mro5+jlADtho4UeGxq6C2bt1tVT3jn
+q4j9SWH1E18CAwEAAaNQME4wHQYDVR0OBBYEFFBGRc9G/ETqVMmKOvXNf94eSyJS
+MB8GA1UdIwQYMBaAFFBGRc9G/ETqVMmKOvXNf94eSyJSMAwGA1UdEwQFMAMBAf8w
+DQYJKoZIhvcNAQEFBQADggEBAGVBxelE5mNBDB8GuOd8EpbJWVK2MSBpdFTGirEU
+Rk7Fv8j0h1tFKBa9f3hfrpcr21NXS69JLsjaqEKE4f1hELoPSbA26h/2Q/9LTo5w
+P+PfC6UaGcdwL8WXGtyiXHevqG5RSXCFtiOsR/HgeALwgGB4V2JT8BhohL7rtQQh
+klfa9mRNCFeAemxJ2+t9Of2rXSfR7j+UD1S0/fGEzkZuA8E+B8R+5Y95gYNX+ZCE
+hRuxp5VOlLKzbFitJgDvYjSaYFfj1E7xl7dwOldWNJUMt85AllW0V4lpjvgVoqR5
+alKYCklqzy+lSl4HLjIZIze88xK/kByv4+nQiRe8cchJm9c=
+-----END CERTIFICATE-----
diff --git a/testkeys/production-test/PK.pk8 b/testkeys/production-test/PK.pk8
new file mode 100644
index 0000000000000000000000000000000000000000..951d34a1eeda45dab09539ea3909692d01142aac
GIT binary patch
literal 1217
zcmV;y1U~yPf&{$+0RS)!1_>&LNQU<f0RaI800e>rr!ay9qXGc{0)hbn0KR0!eZjlj
z9TVr2wS(1VW7}oic53`g=$PXKxq0<+3nR>^u1etz@1=T1t?=8d5bpUKOLb;^g<RP(
z$@M-rvg?W_Hd)DL!rPX|IJFVdgBQBQFKw;YEsx7ckB-`@f{@uc4yDiwQIaVUQ8(#z
zRCZ=(%DIwTGSIbq(+9xhbF2qaK$WY%a4HQgGD|LmHiXO)<k+(n{8&Z~r1w9j$i_tE
zCAI8%0_?L`{Hf^@7Thv--uk+la;28#iegZZa-jUm66Nk0z{-!d5je{bzG#G-QThN(
z-@~&cJrTy0speYBh143OpNZ$>jKnP6df1`$^!<q%=!nxGSQ}7ISpowA009Dm0RaH1
z!s>v<^gcjC7Bcr?^er+=R@kdin_}zc9!-HCsAVQ!rbQ(iDDEdF@(%%92vfAlkDc+m
zT}50NJf+uzZxwXdCD#g(CQcP1e4l6qvpsX0{qUWodg7@9RIGn2P4(okNUvf`AY^Aa
z9-IwA08E&n^^Zs>48nR{v*Z(Z4_o2sf8iScH-@OC7Gpy(WMK}h`#x2en8j^-?%Nn2
z)Lvfu<DEaG>}IhWtgWzJ$nl!(i%{fO0YHXn7<`G6M341sD#;_@sSlG98{0bF52|Mc
zes5Eux`JR^ykdy+doPt3CO3`eNk2@$u>*sM_ocXtCOOF~@FWk!ATdo&aIPH!fq?+#
z_T{9BLmiIh$O_+NY6@QCOvJ+lO~~{k6i{qw)G2oeO;&YYjQtjebQ7iNt#s}IY-=((
zgtI$SXq<9+^DX$=`oQ}tkO3lI#??(Jm8*m39d_iU`;WXzY4t>AsU6kp6C6vF9$2(!
zY-;Sf)PK~ubf_SH`zBq>Eh8PHC&}Lefq?+i2oMre^t4^#O<};hruC^5FQ|<Ss)OXV
zJlG!pu4!$h!CiGd;ZJwNy^%PI($V<p@GkZzL@6r{S?QSdFYGp6Dr^a%YiEcw>Fps+
zPFKTC7i4@L71)j!l~*b|_*{HLWU7d)e9Y?_!&7iUgDM}l8J_AvbHz9?q|NX;4c^BB
zfq)3+??(PRW&%P6=hR?qZRO@*=^T?W!c!KX3(|q<xrb`}fF7CrSuE=xpgKO?eyT;s
z#sTw@m(J^w7Nwf$vX$!U%TZ$dmF}A~lDHhGHYzD%DOmc%&2M&g%L`56s?xdg%${W-
z9!@3DH}=!ysNk#}K=rS$LUm6Ccv}V(+=T*xfI$I{(bj_Ayu9U6V`*x*>F9~|#obK#
zY!0Uvd=(DJ^Et>O-R8aR7~6Lpu<0_N^Qnt#EAUj3$?TQQ+l))X+suv((Ym9zG{N`%
zPw?DbG>{(9nOf{i)fslHZyO>Sdpy@!px9w)PEzDBW4H>7gHeap=o(pTJ1^kWe^;W$
zDFT6j8aIf3B(m(T`c>KAf_eQie8AyGqN+zZPH6c+&J^KEruSVe@=LVj{jpg-U-9+m
z$&&6*7XsLBh=PUFoFo`}8Ym4Ch(hrTAhGSvib?$n)qcO<sFUHu#ZLXZ>X@PStk+Ln
fHOlz68{1%gk8sjT;A~!=B?ZwffSz+^daMIZy_8&f

literal 0
HcmV?d00001

diff --git a/testkeys/production-test/PK.x509.pem b/testkeys/production-test/PK.x509.pem
new file mode 100644
index 0000000..747299e
--- /dev/null
+++ b/testkeys/production-test/PK.x509.pem
@@ -0,0 +1,18 @@
+-----BEGIN CERTIFICATE-----
+MIIC7TCCAdWgAwIBAgIJAJojrBhBh4ufMA0GCSqGSIb3DQEBBQUAMA0xCzAJBgNV
+BAMMAlBLMB4XDTEzMTEyMDIxNDc1MloXDTQxMDQwNzIxNDc1MlowDTELMAkGA1UE
+AwwCUEswggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC+ZMV9wbvcHRPn
+lLWD1WVj22Xcdmr8TOiY4wS5efVyCyPMqK5K4Q3vpXpGrfDbrBDu+RtLdWZ8hVzZ
+Msn1Pjey64omNlnJZsLblsc4tRHSgxe6xC9trdctj8tIj47aqYKQ2TkOpdALUZIp
+EVE36XVUdmZnyrmSWzLQtXvTB8Dkc6wHUkCVq79wKg0tMksuhDaEzBLk2LMV/FhG
+DqT3P6bIxkTkJbXseQLss1j8qekSFtwyd976uppypZblimJQkHKg/MoS5e4ZwMqP
+thE4yxC+aISbUfoATN/DsyQ9EcaVqeZayoXUGqOfiefkjMQs3XrYofX0/Yka6IjT
+IFgbUE5ZAgMBAAGjUDBOMB0GA1UdDgQWBBSFP3WCnyaX2H2144R/rjWlUjQ2+TAf
+BgNVHSMEGDAWgBSFP3WCnyaX2H2144R/rjWlUjQ2+TAMBgNVHRMEBTADAQH/MA0G
+CSqGSIb3DQEBBQUAA4IBAQAC/iglcNdsuNNC3YRM8JUFKJH0BODee41Y+sXoTRvV
+mf0owXt0knA7b5yQzBy/QFQdcGM8QPG405ljsY3p/SDtRi/RjFX1KUhG8R7Ks+VF
+RWHStdjvLHFlM6JknYhX5ogq0CRAz/JBmSQ0EOziUqPDQ5/qh2ShWHjL5pbzNWXE
+BU8qU934ReVmhOLqlJqmsnbqXZLVCokJQrCAuhfbKfolcQEw8hLgK/AQWoeMQF8i
+rdBIOnE9oaDhFsbAkP6zw2Pzkpij+QikQ2ToYeWEja1VEiWWJjJHqbMsZhZ3jGng
+e/m+jJc2T2aUzEji/2gbovzcZiwnrTMPWUrOL0a9r/ZV
+-----END CERTIFICATE-----
diff --git a/testkeys/production-test/media.pk8 b/testkeys/production-test/media.pk8
new file mode 100644
index 0000000000000000000000000000000000000000..dac85f840cc6594184a1e874424a1e7772c8df9a
GIT binary patch
literal 1218
zcmV;z1U>sOf&{(-0RS)!1_>&LNQU<f0RaI800e>rs4#*Aqyhl|0)hbn0Mc@qm%CbS
z5vANGa$p=%UgPBjK;rdE<!9?6Y!P7nZGBW1nSl=w-DH(5F_8RjAP?j_@g_y`K6cEw
z=h958^!>B$i@is>V~fXZP$sgeuPyU!g@(sB+b3KSbbW!bVh2;^x>SUYA<PLQzLS_#
zl_A1>O!exE$n*-&w8w=cuZ%sOj2^Ntq%$kSNN~>Ra-3y%{2QI@P2vSV(^a48H;M3B
zrhIgD&S|O&Wo}>;O5ZUX2jNrVgq-n?`xtG~<E%BsrLg~i8x%l!C^&Az;w2(gC%q?9
zltO+XJG&lgA=ZY7f4<nfCLDm5R0SFjBmo#3|0=s|I<WbxE($!6*8&3p009Dm0RTl%
zy~;jGaLb!V!Y*h1tQ*-7Oa!ewf#|`juJFxZme_+?IaIVSlq`3?vfc`nI%ts-X|n1X
zOUcVKZwuTusKn0me)PlXW;pkUJ>$T8L~M}62PECutV$r#u(@%?Px-6VG{DxWx^ClF
zcTj{VzGFyrSf9AK0!Fke19H{u!omKMcj!0KZLnMiuc6yJ2Tjx7ZRfG4UnFCDyBfv@
zq}axwW~tNeb|h@{9oE=ftIb^SdSflfh#~=~J<LVysC@(#$Vctlqjn1cEIg2Z8^}}&
z7HkFV*=a5b$Of@|!4m1y?7|Go`%pve(uF;^R=;2Gi+=jHTUu^R)uz)B&rt$_fdK1H
zu@iNH*n6~EY0rgXd09_QCE>?~OtN3Ib<X;G<N#_*uXpY}bkf9N5yvFYBzj~UL5L_c
zlfym%z9~%zS79aP7VM@8eF^0h={3?5V9tHNIc-Z~z&1CLaJoA2H>_FWeX>z7N>7=~
z1pGrY#}jCf9UK1XaL-fMyp~=KddmWVfdJ(6LOe7`9O4Ipp+IjeEHiBQYt|}6P52+^
zS<&85X@RG@wN0w~kRAF~(MQ@yFgz$29ApZ6Zu_#-1^w6=O1V7W7H0o5k}(>`^MAXo
zs!76G&Jr6UtXAUF^B{`(tT1j7JmtRSJV5MVa76?;8eET8PM_@5iveB==Dyh$r=<dc
zfdGSYNEG<BdOJ{hnN=mr=E3hg$A+S?VlmpNBaLPI!&pEF+meBCuS)g|Jfb9f+Jeko
zHFR7NQsLxBko5g!MS87rmL<q?(0H(s$K4v|TvEM=4+?PXPd9o$GTXI<es(t)0OOV0
z1_%XzmET>X6!=h=0L$FahXyKb|Cx9k%asCwfNtH?p#YQ?;9$_9vgqQI_{RXae>rkr
z>k-geh9t-Re;P1w5YGk&@N7fW4W1^fti+*!MfFK`A&sNk&f@UIT~wQvW`mc0XeQRe
z6OC5*3B`fsCZSt3=FsWiW>>|u+OomOB3wZB-(6P;rg8WX%GY9Op-OgDWpNvbM$9UU
zJpzG&0FivK72HUSi>Zu89l#`KZvH7jKxK>Dlt@sjzD?NmZ!IT01C3qU51474*Jde}
zZ>|^#->um5Gx)$xh!;y}J7-anUO&vc<|NxnPJEunPwVkHmo@beH{nsli#ZLULvwWm
g7tO(8oRq2>Op2;9@2soI8p9HcyBPh+rT|b0EfM-kvj6}9

literal 0
HcmV?d00001

diff --git a/testkeys/production-test/media.x509.pem b/testkeys/production-test/media.x509.pem
new file mode 100644
index 0000000..aa6ffcb
--- /dev/null
+++ b/testkeys/production-test/media.x509.pem
@@ -0,0 +1,18 @@
+-----BEGIN CERTIFICATE-----
+MIIC8zCCAdugAwIBAgIJAOMpT0dYykmEMA0GCSqGSIb3DQEBBQUAMBAxDjAMBgNV
+BAMMBW1lZGlhMB4XDTEzMTEyMDIxNDg1NloXDTQxMDQwNzIxNDg1NlowEDEOMAwG
+A1UEAwwFbWVkaWEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDScpmX
+u1puEaXcJ3JgHFJe4+UFQOL1SuVn6yJsEWD9bX1UF5mBDxDdZJUtMZD8biAP5Dvx
+JkXyPnbMuOfSTKv0/bPui71HumOLx2xQJrKpry3zbYWGxzfbJ1wSdH2BsWIHU+a6
+VISOIcwJI76TmFSVIcJ8TPXqi8j0Cs+0x4Ukr4w9nowesi+kMyvDSHDO6HKcZXf8
+G53sTeIFP9NVn+k3ifBZpnx0dc5pqgplbmAUSt8xGwfhU+KEnPGO+xht0uOsNcWl
+sP+AGxRAeSg4bsPiJSJVJ70nUpRCfiE7ux5qIdaGiH++2LwmHICXVAUaDyQBGBv/
+KrtsOrD5qy4KPJHXAgMBAAGjUDBOMB0GA1UdDgQWBBSHf9qHUCOoAeN05F8DqkFG
+DlU/EzAfBgNVHSMEGDAWgBSHf9qHUCOoAeN05F8DqkFGDlU/EzAMBgNVHRMEBTAD
+AQH/MA0GCSqGSIb3DQEBBQUAA4IBAQDSHXxO8JEtrW84JtRNGlD+mx+gc58fr4fd
+oIV36JrDgM1XMAsPHZtyFCdeLCzuTAlCa76BIGVrSb9xowAvQJJppNuxVVXhUGiw
+LQl2GQDbluJHd6TkTxiE+7FilTRsJzQdB7znpW5EZKmg/2+vdhOQgCyN/Icm5nVJ
+IUL1L7AT4whp5WKFdS0b1hG6m8C1mlFXLvNP9vBLcZ8Hq2WFxmp+ohPqeTJ8QKet
+NzKddzBbgLK0z2zuIioAx4UvXLwskBukDNvKm2hlJvSpsxa3lRbj6NBrbjS/xm7z
+SYx4dG23TZLXSR9SwXToE6f8UyxFIaVi7fJJgeSK0KHt++0FE5PK
+-----END CERTIFICATE-----
diff --git a/testkeys/production-test/platform.pk8 b/testkeys/production-test/platform.pk8
new file mode 100644
index 0000000000000000000000000000000000000000..e2f3696c09cbb2caeb5adf47d12d177d27c1d24e
GIT binary patch
literal 1218
zcmV;z1U>sOf&{(-0RS)!1_>&LNQU<f0RaI800e>rs4#*Aqyhl|0)hbn0I9gbjkxWg
z&wEc1))NoQ3=*xf+-79}Ev1cUN0;{G%0a49?p6R=r&9b&Dr-`j%6`a;g5$Y_Bn+K}
z@R~*|iFh4jI7YzOe6`hxcq%1%*%!x1_HR4kj)%RG)iC<4o6wDuoC0l1J+i1132w<6
zERKFN`w_2UdBF8*b^MuFKvYV}M7vbNA64qc1g92YXwtfRs=C$a@q;gEW{pD}H)J_D
zJKdMc==qNeXhlCXS}rUk9^T?otPVbj5h5uY>rC{pE2O;)##Rwp0Te0j=Z606jY#0>
z2q6S4KZ`D0vvON~U`b0m`A5u@ar3zo+G@6)1awM{orQxG6>8!hNdf}_009Dm0RR$L
z$d?|JcpKDw;5D7g$SWS*tp*DJ0etOtk^Q3E=`cRll&$lZh%~EEUn5V17W}EDEe6qR
z+;24b)n5XgaM>fJF>?f(l?yFz&6fus6T>yZu?`7Ilz<)ui~L!Y&MTMar8{Uly_s8d
zw9)}8H0=4^gX*uRpT<+?azPw2%8A4`JU`aJyiA3#0rDS~F#9hWXHhw%jwfYi^rsBs
z@iMnY%f~(UlBrP()NV{w|JC6zyqR0Jp|y|a@veHcn;t37PzV={r`h7T+4IKoV0Mob
zoF=;;)&kQ`YJC3701TkA@3e`hi@Hwk8AMFKF7%5qJD(WEeonDnB}BbG?STS;fdJZj
z%2M)8a`VjxAYd+BNdX)OuUi!(OG3)Oz=rq@$Z+J-OlP%HcnQ~!{g!c{dN{a6mlc-i
zQl_CBwP=^q`tuUk<#I3A7ZV(bP^vly2ZGVe%Or(Co%c#LnSxq%i%S_~W>qK9U`F5k
zI)g_`h%}YC(+P9v=3@XdoH_Zvm>B|rfdIzcc<hT}S?+4+Ti(Dl#-;olj-&yUvTi0Y
zdffj>wQ?VR8B2@fBM$!@_KEwa)G@FTe+#F<Yt#{~AJq-xxBH-vab}pE*BXgfD6mEG
z>RbbiC~nF?g^r{a`Hc52!Ui!*%U9W7G4N+53HV8T#l1gM@3W*R-?M<a;@Bc(J+T6T
zfdIv8#7C__#Fc(`X%64@ZPq=|$LK<`aHu-+hw`nYF0rg*E)Xm&2jIlh46f^+xv>=a
zbn5~@ji#BuqV10R@-M)kD``Q;R>xy1#UuP_E2U2qfuB!y8d^ZfEF3t;ECs<m5~lIt
z{f#Y(3JGJ|;fT7Pehzh+M$Eu@`sVyU_sIf*fI#3EhV!A$Jl$KEJpS)EuLYy$(9uIR
zLV@b$>KV>%2O$RjF^e5KUbYiB%A)d#V*F8f<j{d-FZJX|vNWm5XQ^ePRT>P$6Tl*-
zgL@7Hs;BLpb0<IzQV(taQ(=HRgVCuhStxAD+2@R%Oa_fn<o`F`#`qHLhn>S(C9rbd
z!2*GS0MUeqKRSK{zVIEPcMr5UJDcoL7QvlCpGbWc4MZzVwA9BF==um+gz+gbZA}Wb
zbTJ~<nUVfh9oMflu?;vUa~Dy<4o&i7{u7P#dsov0Fv=fMo=Qm>5p@PNH9Q7Tgb2}}
gj;ZO3q?D$pB@u29mGn$cuGDl%HRIs{aOiSoZ2&z+cK`qY

literal 0
HcmV?d00001

diff --git a/testkeys/production-test/platform.x509.pem b/testkeys/production-test/platform.x509.pem
new file mode 100644
index 0000000..3a4692d
--- /dev/null
+++ b/testkeys/production-test/platform.x509.pem
@@ -0,0 +1,18 @@
+-----BEGIN CERTIFICATE-----
+MIIC+TCCAeGgAwIBAgIJAIqBwAB18cXWMA0GCSqGSIb3DQEBBQUAMBMxETAPBgNV
+BAMMCHBsYXRmb3JtMB4XDTEzMTEyMDIxNDkyN1oXDTQxMDQwNzIxNDkyN1owEzER
+MA8GA1UEAwwIcGxhdGZvcm0wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB
+AQCpuMKNuO2gz3tPEdYTD8sMEq2y3GZlAC2ljWhHl/bkykGqUu5WAFqnUvxLKmtS
+msp+yIuC47mEJAydhfCaRiuJeB1jOEbA2Hy11Yh4KiV52RfHSPZvO+GOh72R1TD6
+rZvQjZOcAm1KPbKoEwluyRosjn4z+xGvYXnA9Wp1/JlYQFRKyUS7VMIfVerGBKcW
+YGjSunqqutXo8YMvaWaNQxw3ZDk4O92Xyuj5jwtoRT80Wi4sJB7e4lKsDj6JESIp
+G+tM9LArpL0MxlYRWgEUKe7nhv7tjUjg6QghBCw/iy5cs3JbfWBJSzv5R8yUcfO5
+E9pqtp0EdEqOnYWDFBVq4h5JAgMBAAGjUDBOMB0GA1UdDgQWBBRbrVtyESH9e2W9
+qsYssr7JF8OKFjAfBgNVHSMEGDAWgBRbrVtyESH9e2W9qsYssr7JF8OKFjAMBgNV
+HRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA4IBAQBgzepqiMhVZP21YdxYuE0wSCsG
+7kp9U1Ydo0dJEcC1d5pzdzqw4h5FzHXix4HLpVn6nzrQn28e+y/IIHxxgvsQrh3R
+xmm8htlT7oOCIR0LXyGI7BIu6Yx5so1zfrweKi46JHrThfxNtTlyeEDQuvt+OIrY
+nmxX8Y4KZfU6GvfhtP6LvUK84/6gCaGCCyCQr0LvM2LwSEYk4oP48vKy8SCXBIkD
+GLVV9OS0kaC+soXbYSapSiyt3eVHcIlwrxbHQ2Nm3TXu10u9ejigbL3Nq4x96ST2
+KZIA8vAzCyt0mI38xUcdylnWFlGsT77NiGi+BvZ5Tj0KBdhmvuoDOxFG5eMf
+-----END CERTIFICATE-----
diff --git a/testkeys/production-test/releasekey.pk8 b/testkeys/production-test/releasekey.pk8
new file mode 100644
index 0000000000000000000000000000000000000000..3f65311bdd6b5dcb403f28965f0d083d3a7c0c50
GIT binary patch
literal 1217
zcmV;y1U~yPf&{$+0RS)!1_>&LNQU<f0RaI800e>rr!ay9qXGc{0)hbn0KgKonJ--b
zV;;KsJf&|BtS*D)E+y*h_ikZV+$}!b@oZ_tttfRtDcQNe1d@wmJDD|4I1nnV9}_Gf
zi=gSFAbGOLXpUuKNk<~DTs}1I|4)&zT~qn*ZO;=-6!NB0s^C>LvKyx#7<cEhT8}M>
zKtoAVCOVAipR^f9vkxixE92(}kI}>JN{6D9`xD^54wy2N)undY_9LK;NjmI6346gZ
z;m>8%XD7Fnls4>PXO!G6;N$3RzA^1;AbF^;I6NmB=#tR#Lty>ey2n{75t@@;B3Y)h
zNQe`#J$x%ZK=(qhh!Xe%*I&+7K}V%Xi5@)V`<Sz<-b+>7WfE!@jRFG!009Dm0RUX*
zuUmORZg#I?nKST#YyU{_n`T=G>s~XF`azM=8fDy`ymwVzf(np1{M$KK8pO3S$O6JI
zA=*|Kz7|W{HvoEFGy4ApqbT;XoJQ^d1TMaMCS;O64#oPX#^Fm1kY@hlxBY&~vy0AC
z(78DfIhRlLqdUTmZeqn|gn$qcsb}uLpUfn@RD53ByB#GVajohyo$45$;iSpzoKSst
z28K`Xl3qc^!c*`ZAk~ZPK9lLpWwIHMZ*#21PEWdYK7{ZabSQSlreD~o_I0EH#CLln
z22K-x|3IGHjYzoxMUJ50+WloWWYK3BO3lg@UIyAppA<9vNF90wKGK4tX8{6%fdJ;<
zKHB&ZSl?n$ZCZ2tl?qKKZMtJ-VLAjxw+fY|slh%>yp=$RpeFyuw&s&2nK*1z!nse+
z+g*!uT%ZJ4YP#um4~D>oTIe)moKhm2#B;B9-_L*GpsMCpT`+y_fcv)fc_=69#Fr38
zNS`nq!?bl;H60dkI1OAZq|3fZgHZy3fdJI`e5&0~$*v`==<BI~A!Vng$aHM_mXmCw
z>*+Z6-FJfYmcORsp{u;H=W93*dJ`SZOE21@3uGf6565Giprd=&oTd%DT0mBxI=pid
zDB@Pf*(|TUGZjnsPK@N##G>fr@ts>k^PjVy&=gk#;q3b`cMy%S+}X_CpDFLhczpta
zfNK%S^pK#k-+kYprxz@+RKu+*WeXkpuLd@$LVjKXn7qWNoNN9tkA;NkV~Y@$bR|JG
z!0hvnUloDfjnozq0XMDb%WG4ks}@MF!6S{Uke=!JCuqHjrB?>*R>i<84-qX)55!wa
z>Sw^fgBr8!O0PAub{6K^2hbc~9H7<2(E@>h7jbt5pW@zvYUe|wT|OIc11nm&W*wJd
zmi^pB3ExiRj_A3EQz?&ZMiUn_I5CUxdcjm%YA2XAXP_~Fb2yZKDs8KBqvUPU(>5p5
z0-vWGa}5BT=%ZZnB`}TF_<?IXyMrhVcr;w5;jrJxy<<`ZG6_Ag_Qvy8jx>J;u)H=&
z0)c@5iY*GgNU&9Ml@<6sveEq`zM-T>)<;e7Ck2gf_7uxZo$|2Hz8)y;u<XG?l&_ER
zrWUx$35Le9PF-<~#{n!!XVH@hLubwvsH6%a4)Pt%8QrZ}$7TQje|~VPvB+aM@)c>_
fjXmOykDfp=m}%DDb`EjT1n^QAHzoDk(6cU72!&2b

literal 0
HcmV?d00001

diff --git a/testkeys/production-test/releasekey.x509.pem b/testkeys/production-test/releasekey.x509.pem
new file mode 100644
index 0000000..402a590
--- /dev/null
+++ b/testkeys/production-test/releasekey.x509.pem
@@ -0,0 +1,19 @@
+-----BEGIN CERTIFICATE-----
+MIIC/TCCAeWgAwIBAgIJAPRZ6EonZed7MA0GCSqGSIb3DQEBBQUAMBUxEzARBgNV
+BAMMCnJlbGVhc2VrZXkwHhcNMTMxMTIwMjE0ODQ2WhcNNDEwNDA3MjE0ODQ2WjAV
+MRMwEQYDVQQDDApyZWxlYXNla2V5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB
+CgKCAQEAwBK0mS9c/2Meuvk8pW8PrC6D5S4l6uz3bmFX3C0+3PFsacStKHVBKdm5
+wASSi2M7mTVPOBAqrB8TLCCLoOmjIHmyyGiOZWJJRyKvXD407f9PkbFdU/nvbc8T
+TBTyplKq4FU0shunHxh357Najy2JQENJUiY6jOmftBlGsw8p+Svj5weP0cPtSoei
+lPsT4L8OmDKT1aV22vYjoI1JOuxACXvBMuHPZdRnJ7eVlDbsYWeU3C3g4+htvjHt
+aiB5qLA4PCca6JLQ8kNg/du6x1krEZqTXiJZprNIiBOwPXwrPkD3QrCIEvgD11/O
+VkFHpUiJHjzl+5izq95LVdxlEmoWjQIDAQABo1AwTjAdBgNVHQ4EFgQUuqmewiL2
+tEt+s1HJZQYnM86lkM0wHwYDVR0jBBgwFoAUuqmewiL2tEt+s1HJZQYnM86lkM0w
+DAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQUFAAOCAQEAKwrjcrGvPIjMmCZtAble
+UozcGtrwMik1A2f71kK7QrX2feTyT06gGKs+tlAzfdhugtXNJaEK2TEvUod3/jfd
+vLFYmjqt+736v75XlI55WxkRA1dDQLqGnvy3sSq2Czig7nKBe6JFHiHRwCzEnjqg
+KVuiPaUDZj7qPqxS5RH7wMMRU3ZjUGzAXAhyYkVm4yTI1kio27Qm4qirVIvwAos8
+Tuo6KdCq/67gRhFneixzhJDjTmrfKuvHFXi2reVNQnsKthtCTNW0gH65L6HoF87f
+Syem/TETLKWttCgoYqdor6Kstfmdv4cW9JFapFrp8M3o3ERteB1jySA0nHLMHz04
+Qg==
+-----END CERTIFICATE-----
diff --git a/testkeys/production-test/shared.pk8 b/testkeys/production-test/shared.pk8
new file mode 100644
index 0000000000000000000000000000000000000000..a2f56d92b524731d3726b35d7139cb24a1a4f534
GIT binary patch
literal 1217
zcmV;y1U~yPf&{$+0RS)!1_>&LNQU<f0RaI800e>rr!ay9qXGc{0)hbn0KNt%-k+@H
zH+Ortb{ImAUe`{|xep210E7*DdfkDGq%Y@NuA?N-+_*>eSi>Lmh;Y5dxz0{z4uyg1
z-yYjgKR5~@VE&hQyl6x!(S{ZUQ=Vy_?}`<%(Ob$V7Fz>JBUFBOIsirNeV(jZgW!|}
z9SdlS-vh1s8*zp;dXNX#wZE`YnxhjRo>oDjk-{S+MGpwLYfMxf@(+~tOfk#N|DE)6
z*^y0G)Ubew-!Q%f9u9nGrYRPLY~krKFLmuombtY2@igEJJZh{VYGMlZw=kB3R%=v2
z4WkU@(Lni0o9(a}qgr}$!R=aWVimhMK<KR)4>9IMNPopKwd;D8MFIl>009Dm0RaG(
z)Z_@g&C3(N@1LwmjcVMrB7^}1g4mFxK;LGgG!)l*ezr4YqwsZtfcvUF7rag&&q0Si
z&eRKP#kr^*A`lE-I}A&uN-j6PyL}N_(O2OMxZ=ZDW9S7sO1H!E@+7yqb+^TSIs$>C
z)k5>K>q|4nzHw*I&*a*xz0d7EE<ANqg<iEbdBY~y;h+41&OI=Jsr!yg&sfjMQ!WO6
z3!EP*`2hQsos%XcxQgx0i{h?BH^{?YQPDf<k*&KuLRr`#5z^~}-1o-|f}33OsPYvK
ze5;wmH-!L?jb=~c{}JG~^~<WaB2OYJ5Rd85`PLy7JUi>tK*$X~s~&~P5smQzfq?+)
z`4xaI5R~b_5>PCM2`3a1Ay9H61?0Qy?`W?~*BXp_bwW2+A?4BE3DN(2uRxPATJKzP
z1VgLd;D$<QIx^eYy!==N_+YrI2%wAO(Pf5o#)@w-!k`A%#-SUABlJFT%(p9KsLqq3
z5X+;^7@4VscADOA_&vvnce&9bMwe#-fq?+dCcvuKy5XT!w+cCbP_}MQzNZ<}N_zHr
zB!L#qG^%T)?N!REq=2$~Mo_WOo253Sr711lpu4w8-x7VXrCV<6_k-h;?6wBC^B5)s
zcPKNd^C^cvcg-^0jZG^7N=CDKJ@mOkslT_Y07Tf{nPf^`LiVK|I)MlRc1hyV$@Oyr
zfq-hKQ5|-`*xhljl}8%gdnqa`o`i>XEOhr}WaeIvmUBu~tWf~-)Iji4D)bYv&N%r5
z#mxQ3iK2u6?GbWZW1>`^gIjTrT7Ud<8^%6(<u6HAcR5_YKfd?{(aCe}iZwG3IQ7Qx
zIW{Kv`eBv?E@z!+2L)t|Nw@~7K6Vt$-5&yhfM*N2?Cb9DPt4!6&92oli;HslW)D`t
zhACmx;Roy%Z@xYtPcY*Tt*9>{u<zWKMeQKnr=E-SsTS1Pl33Li5-9^sI@!BT^{2;d
zzq}={!@FeP(n=^{I@ZDk+r&mwcI{Ze)<ye4=++`hN4jMsTZ5>uPcr}gb$Wf2OFN)m
z{{n%436+XtC8x+8?;rLxnYFpxD9#P$6LW!-_o(r!hZK!Q@WBw^RvBHnhKS;#b^sVb
zX?8XMua%NmB%>=0;@UMFJMFWZX7|utcXm}LIgQ`V9Q2Hq16tnU#{K6rv1`gUH^Wv1
fZ8{AIu#&^f$9RRXm`G4{H`(C;$r{UstuqJwqKZ&S

literal 0
HcmV?d00001

diff --git a/testkeys/production-test/shared.x509.pem b/testkeys/production-test/shared.x509.pem
new file mode 100644
index 0000000..5006dc7
--- /dev/null
+++ b/testkeys/production-test/shared.x509.pem
@@ -0,0 +1,18 @@
+-----BEGIN CERTIFICATE-----
+MIIC9TCCAd2gAwIBAgIJALU/nGtPerfvMA0GCSqGSIb3DQEBBQUAMBExDzANBgNV
+BAMMBnNoYXJlZDAeFw0xMzExMjAyMTQ5MTNaFw00MTA0MDcyMTQ5MTNaMBExDzAN
+BgNVBAMMBnNoYXJlZDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL4G
+J96frOU3d3u3dhhCjl7XTs25DwnZAIQNe3rdgYukL+dbrqMk0Ny4R/VYwx/0iHC9
+xbnOTmYOhYHr3x7bUD84CiFg/pd4vGhEKtGGFgVTnmme74oVsdFbyicWWwNJI1R+
+dzoARex9nqxag+CUBR0LaIvfA636G3GGNXqQB9e1v7BRmqMTH55WQaGRwiMkRQ8I
+uGtMVB3yD5T1TDHLzf+d9HPZkU1X1LCAid8wvgUeDnxnpikWhGzh6TEvde1Klrm0
+/PE04Aw8aqwhamIK9rcwloRWa1RBDaMM5dFA+Umb7bAZo1p6csHtWmtiFbs4QOit
+GA8x5kRIf8Uxtet6lkUCAwEAAaNQME4wHQYDVR0OBBYEFIPX2N3YyS5c6oYyup6e
+KLVurGssMB8GA1UdIwQYMBaAFIPX2N3YyS5c6oYyup6eKLVurGssMAwGA1UdEwQF
+MAMBAf8wDQYJKoZIhvcNAQEFBQADggEBAGJdsfova+x3cMhDB0m97ynJj7takQt2
+p3RJ/3fAc6+jS9lvJGXcRs0vBYUQ4gORKjurZPckJHXUMgx3+nFja6EGir35wWKu
+sncJ8aHntmyH6npUZ7Vuhaq9IZ3Ury/t5qq/NmzectPUjhGRtEEDv5YxeNvfrjk9
+EvAjExnXn9b0ZBY9+bayRR2OElurHHJSDyGaYvjdg9+qARgVTuevc5XdwbzqDZLD
+JmZoPQiVGs4PMxGnD4MHOBUJhYDx7KOtTJW9y62Y8tVcQalzjHAvetoWyxTNtLkH
+GwsLXhedz3jSU5bTZaBvL2MoeT8JYf/hyRM8dWHzIFfVgslOQYFpTOQ=
+-----END CERTIFICATE-----
diff --git a/testkeys/shim.pk8 b/testkeys/shim.pk8
new file mode 100644
index 0000000000000000000000000000000000000000..4ef285ff4764cf239512056b6eadf7c5a994df15
GIT binary patch
literal 1219
zcmV;!1U&mNf&{+;0RS)!1_>&LNQU<f0RaI800e>rsW5^Br2+u}0)hbn0Mu_cVL2d|
z0$;j%-sIna+vefM8gk-|9CnZEes=IH1>2uyJ;t|iMq{%sFY=Xo4@Y~Y`qEeiHC73@
z`L-V{?YO-^da&ADlkSZ-=t5$K9fA1uz-0xTrHZ@>-cjBUlOL}%PLDV+VUv#W1+u+P
zrx;>&rIa;lC(aMpxq^UjaE~2m{>?7?@rSinID?g&WL=%~JZtg&9Ki;$ZEz;IGBV>{
zAcy;_gS4<=gI|T)S8W&y9Z6%hGfyuohL?`f2$QDCoC8Jd^M=F@9+$CRswDRT8W4tx
z>Q;cQ;27<lN<$(-MWV|D?{!2X-+gXS!is-rSB`SH(Kh5Ef$?9FZ2|)U009Dm0RaHF
zjh$&(Mk<u|h!(KVOS^c+ryy7?8cNw@EO^VF6KLr-+9WEDuw%!*Pt8Hfwv%t}Q4N}k
z^I7rj^qQ*CO<=LhC1P7G!jGwzzSySA?R$E)nj0nYWCryX$>A{q#sBFXz;jN?`#<`h
z*ekQcyhPxpb~LvvH+K;Wz^{L!9zBP_Q2@!Tu8ZoDc`}#0C46Nr;YacpVwLBhI=2CQ
zA|T+VbLHvBw<{=q`)&dxUb+i{Ly!iD^>J}*2*B_GT|Nv<jZX_r`+g(JA5YAg>H9k6
zGa&*koxnELpuoP!fWqPSviRz(*B@*U9Z)WmYEJRC4Afw}I=Roxr{NePEVjV{fq?+;
z66_0h8DKNu3mB%iOT$W^gHt201gKQ7R3H!pgWVOZQ$+0y;~|IKGel20C@roB!bXVx
zit;WbJgGLv$t&B?d7r;cM14Wb3Hom2{Q_ZLHA)km3#E=d1dB&VN(zGv*oIqtbCn2l
z=l(v1n*G+TS&#H4CCT}0sR0m1k2P@ufq?+yd3X`bosV7VQ;HgbF01bdf{e<(dzfU<
zk$Rk4%HEr0ZD^VRKVOqqiIpGh3nc+-PJ-k4?4PnR^-?p=??Ap8X{8T;WhT2yEBICS
zJjQ#pw#u$3B}AN2f;a7-(jG0let4F7q?fih1I+P``BB(qvvya>L+m}b^^|8EByGI{
zfq-o1v%4(YHf5_LqTwGBRxSc3@{x%*HSZ2P<Tod`Vc6rHGXlXP9zG*t|1}SmYv`c_
zFxhJgq;tG-9jhd(QC(WZY_8g6-l0HmGc%n4Tsu0A59f<qsMq+Hzfyy3rwBKz(%6my
zpxZ9td4a|gh?;0|DiBZTTJKUmQj4{CyCDLBfdGxB6gaUv<P6NfvYhib@Z`2#<swrb
zPqb&0PtTF@a8W=7vp+(tGwtGX&?CaG<?2pR<9p{Lj0Ql-%-Cun-X#KBAn4bjyH24`
zWFpiAN^H6bp@?;ZPlzwkaMn%HU+so<sLi_#-BTdyZ1Q&BmNB%F-aM!s-MmQ?X~+{~
zGuZ-xfdGx2!^l0M{UeCal{E$n^aPZQy71e5#RY-JtXD~HJ#&+@j7S}Csr=pRj>a(Z
zz?NE<HbGGh%j{DGCs|HOZ-=B7laX{><0N4TbO-VTOXCaheMyVpIDjQSY(S+vwjP{k
hn(TgBZN~tR+)v9(qz^$B3MmrBbJTA=;55;4oq<-HLp%Tg

literal 0
HcmV?d00001

diff --git a/testkeys/shim.x509.pem b/testkeys/shim.x509.pem
new file mode 100644
index 0000000..60d3df5
--- /dev/null
+++ b/testkeys/shim.x509.pem
@@ -0,0 +1,18 @@
+-----BEGIN CERTIFICATE-----
+MIIC8TCCAdmgAwIBAgIJAO1GWZBYldQiMA0GCSqGSIb3DQEBBQUAMA8xDTALBgNV
+BAMMBHNoaW0wHhcNMTMxMDMxMjAzMDIxWhcNNDEwMzE4MjAzMDIxWjAPMQ0wCwYD
+VQQDDARzaGltMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1G83YTkg
+lwJfunre5N+A2+bhxhpy4o0cdo/rfnbwKwXbn2Y9xrdwRmOzLi/ylXoPR3ul+tJY
+BjVWCbj5th8s7bi9P3qw2lyT7o036EJihh2B+PXAZQWcpYq8Cd5R3g+TH680To84
+MGGTjvEFsr1OpxhidaWUNWonzg/YuYKAcHCPHWj+zS778Ye1VziDlZtkXZ30PGvx
+/RzBBrFtcCa4MjLjXiCH+6uDtLBhg1+F21dtGAodSWO2M08vK4aXjtEIk6bJnANF
+7POGxA4el7FeqiT3ARoQhorqVoCt4BjtnUpDIkJFossE73VEIt99blDCin9oV45y
+uNE25CGB8V+RbQIDAQABo1AwTjAdBgNVHQ4EFgQUPf8UOLXliULNtr+NfmJssUKu
+NNswHwYDVR0jBBgwFoAUPf8UOLXliULNtr+NfmJssUKuNNswDAYDVR0TBAUwAwEB
+/zANBgkqhkiG9w0BAQUFAAOCAQEAF7gWHftXNSKmwkIJ+9Zg+3oQxYUryCBx4mUh
+q/rj6+VFdpIQ8EmSXygu7v3RS3vI9DKQjRAHukReWCLzAr+++nDl8VRfhHbnr36q
+6rgV1SdFfkld4nqD3mfAlzr+MYEJaRk7mJ68PzR6ViSemScrK+nKMyT5wIZac3LF
+XSPWmZlQb8DmGEAmh//3CyB0eu/pKRHVOhfuORiSHZntykz0dki/pR4Uyi6Bb5eT
+Ihx0k9oG8lFWKVqCEWWIFY4EkqAjZPnfCF2Aphol7+ErDMN63F7+RkVrVHG8DTZl
+aaneCggEhO79+mOuM4TgQ64dk5Utf7ROo8QeEjXuBzMMSyHKLQ==
+-----END CERTIFICATE-----
diff --git a/vendorsetup.sh b/vendorsetup.sh
new file mode 100644
index 0000000..eb95530
--- /dev/null
+++ b/vendorsetup.sh
@@ -0,0 +1,264 @@
+#
+# Copyright (C) 2013 The Android Open Source Project
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+#
+
+# This file is executed by build/envsetup.sh, and can use anything
+# defined in envsetup.sh.
+#
+# In particular, you can add lunch options with the add_lunch_combo
+# function: add_lunch_combo generic-eng
+
+add_lunch_combo emu_houdini-eng
+add_lunch_combo pc_generic-eng
+
+# We want to be able to run this multiple times without
+# cluttering up the PATH with multiple invocations
+
+if [ -z "$PATH_BEFORE_VENDORSETUP" ]; then
+    export PATH_BEFORE_VENDORSETUP=$PATH
+else
+    export PATH=$PATH_BEFORE_VENDORSETUP
+fi
+
+export PATH=$(gettop)/vendor/intel/support:$PATH
+
+# Similar to the built-in gdbclient, but over Ethernet
+# $1 : remote IP address (e.g. 192.168.42.1)
+# $2 : executable name (e.g. mediaserver)
+# $3 : port number     (e.g. :5678)
+# $4 : process name    (e.g. mediaserver)
+function gdbclient_eth()
+{
+   local OUT_ROOT=$(get_abs_build_var PRODUCT_OUT)
+   local OUT_SYMBOLS=$(get_abs_build_var TARGET_OUT_UNSTRIPPED)
+   local OUT_SO_SYMBOLS=$(get_abs_build_var TARGET_OUT_SHARED_LIBRARIES_UNSTRIPPED)
+   local OUT_EXE_SYMBOLS=$(get_abs_build_var TARGET_OUT_EXECUTABLES_UNSTRIPPED)
+   local PREBUILTS=$(get_abs_build_var ANDROID_PREBUILTS)
+   if [ "$OUT_ROOT" -a "$PREBUILTS" ]; then
+       local IPADDR="$1"
+       if [ -z "$IPADDR" ]; then
+           echo "Must specify remote IP address"
+           return 1
+       fi
+
+       local EXE="$2"
+       if [ "$EXE" ] ; then
+           EXE=$2
+       else
+           EXE="app_process"
+       fi
+       if [ ! -f "$OUT_EXE_SYMBOLS/$EXE" ]; then
+           echo "Unable to find executable: $OUT_EXE_SYMBOLS/$EXE"
+           return 1
+       fi
+
+       local PORT="$3"
+       if [ "$PORT" ] ; then
+           PORT=$3
+       else
+           PORT=":5039"
+       fi
+
+       local PID
+       local PROG="$4"
+       if [ "$PROG" ] ; then
+           if [[ "$PROG" =~ ^[0-9]+$ ]] ; then
+               PID="$4"
+           else
+               PID=`pid $4`
+           fi
+           adb shell gdbserver $PORT --attach $PID &
+           sleep 2
+       else
+               echo ""
+               echo "If you haven't done so already, do this first on the device:"
+               echo "    gdbserver $PORT /system/bin/$EXE"
+                   echo " or"
+               echo "    gdbserver $PORT --attach $PID"
+               echo ""
+       fi
+
+       echo >|"$OUT_ROOT/gdbclient.cmds" "set solib-absolute-prefix $OUT_SYMBOLS"
+       echo >>"$OUT_ROOT/gdbclient.cmds" "set solib-search-path $OUT_SO_SYMBOLS"
+       echo >>"$OUT_ROOT/gdbclient.cmds" "target remote $IPADDR$PORT"
+       echo >>"$OUT_ROOT/gdbclient.cmds" ""
+
+       if [ "$(get_build_var TARGET_ARCH)" = "x86" ]; then
+           GDB=i686-linux-android-gdb
+       else
+           GDB=arm-linux-androideabi-gdb
+       fi
+
+       $GDB -x "$OUT_ROOT/gdbclient.cmds" "$OUT_EXE_SYMBOLS/$EXE"
+
+  else
+       echo "Unable to determine build system output dir."
+   fi
+
+}
+
+# Creates a gdb startup file which sets search paths
+# and connects to the target
+function create_gdb_startup_file()
+{
+   local OUT_SYMBOLS=$(get_abs_build_var TARGET_OUT_UNSTRIPPED)
+   local OUT_SO_SYMBOLS=$(get_abs_build_var TARGET_OUT_SHARED_LIBRARIES_UNSTRIPPED)
+
+   echo >|"$OUT_ROOT/gdbclient.cmds" "set solib-absolute-prefix $OUT_SYMBOLS"
+   echo >>"$OUT_ROOT/gdbclient.cmds" "set solib-search-path $OUT_SO_SYMBOLS"
+   echo >>"$OUT_ROOT/gdbclient.cmds" "target remote $IPADDR$PORT"
+   echo >>"$OUT_ROOT/gdbclient.cmds" ""
+}
+
+
+# Yet another gdb debug version, now using a GUI frontend (ddd) over Ethernet
+# $1 : remote IP address (e.g. 192.168.42.1)
+# $2 : executable name (e.g. mediaserver)
+# $3 : port number     (e.g. :5678) - optional
+# $4 : process name    (e.g. mediaserver)
+function gdbclient_ddd()
+{
+   local OUT_ROOT=$(get_abs_build_var PRODUCT_OUT)
+   local OUT_EXE_SYMBOLS=$(get_abs_build_var TARGET_OUT_EXECUTABLES_UNSTRIPPED)
+   local PREBUILTS=$(get_abs_build_var ANDROID_PREBUILTS)
+   if [ "$OUT_ROOT" -a "$PREBUILTS" ]; then
+       local IPADDR="$1"
+       if [ -z "$IPADDR" ]; then
+           echo "Must specify remote IP address"
+           return 1
+       fi
+
+       local EXE="$2"
+       if [ "$EXE" ] ; then
+           EXE=$2
+       else
+           EXE="app_process"
+       fi
+       if [ ! -f "$OUT_EXE_SYMBOLS/$EXE" ]; then
+           echo "Unable to find executable: $OUT_EXE_SYMBOLS/$EXE"
+           return 1
+       fi
+
+       local PORT="$3"
+       if [ "$PORT" ] ; then
+           PORT=$3
+       else
+           PORT=":5039"
+       fi
+
+       local PID
+       local PROG="$4"
+       if [ "$PROG" ] ; then
+           if [[ "$PROG" =~ ^[0-9]+$ ]] ; then
+               PID="$4"
+           else
+               PID=`pid $4`
+           fi
+           adb shell gdbserver $PORT --attach $PID &
+           sleep 2
+       else
+               echo ""
+               echo "If you haven't done so already, do this first on the device:"
+               echo "    gdbserver $PORT /system/bin/$EXE"
+                   echo " or"
+               echo "    gdbserver $PORT --attach $PID"
+               echo ""
+       fi
+
+       create_gdb_startup_file
+
+       if [ "$(get_build_var TARGET_ARCH)" = "x86" ]; then
+           GDB=i686-linux-android-gdb
+       else
+           GDB=arm-linux-androideabi-gdb
+       fi
+       ddd  --gdb --debugger "$GDB"  --command="$OUT_ROOT/gdbclient.cmds" "$OUT_EXE_SYMBOLS/$EXE" 
+
+  else
+       echo "Unable to determine build system output dir."
+   fi
+
+}
+
+# Yet another gdb debug version, now using a GUI frontend (emacs) over Ethernet
+# If you prefer the multi-window debug GUI, add (setq gdb-many-windows "1")
+# to your .emacs file.
+# $1 : remote IP address (e.g. 192.168.42.1)
+# $2 : executable name (e.g. mediaserver)
+# $3 : port number     (e.g. :5678) - optional
+# $4 : process name    (e.g. mediaserver)
+function gdbclient_emacs()
+{
+   local OUT_ROOT=$(get_abs_build_var PRODUCT_OUT)
+   local OUT_EXE_SYMBOLS=$(get_abs_build_var TARGET_OUT_EXECUTABLES_UNSTRIPPED)
+   local PREBUILTS=$(get_abs_build_var ANDROID_PREBUILTS)
+
+   if [ "$OUT_ROOT" -a "$PREBUILTS" ]; then
+       local IPADDR="$1"
+       if [ -z "$IPADDR" ]; then
+           echo "Must specify remote IP address"
+           return 1
+       fi
+       local EXE="$2"
+       if [ "$EXE" ] ; then
+           EXE=$2
+       else
+           EXE="app_process"
+       fi
+       if [ ! -f "$OUT_EXE_SYMBOLS/$EXE" ]; then
+           echo "Unable to find executable: $OUT_EXE_SYMBOLS/$EXE"
+           return 1
+       fi
+       local PORT="$3"
+       if [ "$PORT" ] ; then
+           PORT=$3
+       else
+           PORT=":5039"
+       fi
+       local PID
+       local PROG="$4"
+       if [ "$PROG" ] ; then
+           if [[ "$PROG" =~ ^[0-9]+$ ]] ; then
+               PID="$4"
+           else
+               PID=`pid $4`
+           fi
+           adb shell gdbserver $PORT --attach $PID &
+           sleep 2
+       else
+               echo ""
+               echo "If you haven't done so already, do this first on the device:"
+               echo "    gdbserver $PORT /system/bin/$EXE"
+                   echo " or"
+               echo "    gdbserver $PORT --attach $PID"
+               echo ""
+       fi
+
+       create_gdb_startup_file
+
+       if [ "$(get_build_var TARGET_ARCH)" = "x86" ]; then
+           GDB=i686-linux-android-gdb
+       else
+           GDB=arm-linux-androideabi-gdb
+       fi
+
+       echo > "$OUT_ROOT/emacsdebug.el" "(gdb \"$GDB --annotate=3 $OUT_EXE_SYMBOLS/$EXE -x $OUT_ROOT/gdbclient.cmds\")" 
+       emacs --load=$OUT_ROOT/emacsdebug.el
+  else
+       echo "Unable to determine build system output dir."
+   fi
+
+}
+
-- 
1.7.4.1

