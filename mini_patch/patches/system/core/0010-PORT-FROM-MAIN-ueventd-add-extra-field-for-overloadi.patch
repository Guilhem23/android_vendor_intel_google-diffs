From a070d1ffb79e3733830f8b82cc56a1ca0ab23e81 Mon Sep 17 00:00:00 2001
From: Quentin Casasnovas <quentinx.casasnovas@intel.com>
Date: Fri, 12 Jul 2013 10:28:02 +0200
Subject: [PORT FROM MAIN]ueventd: add extra field for overloading builtins callbacks

BZ: 125765

Some builtins are only valid if executed from within init, like do_setprop
which directly writes the properties memory area which is not possible if
you're not init. This patch adds an extra field so we can overload such
functions with custom ones for ueventd.

Category: device enablement
Domain: CWS.WIFI-Common
Origin: internal
Upstream-Candidate: yes

Change-Id: I5740ae244ff973b7feee6b497d5aa45e492c0ef0
Orig-Change-Id: Id2f7a3b2c4ca205c9494fd68c6cd780d08e2eeaf
Signed-off-by: Quentin Casasnovas <quentinx.casasnovas@intel.com>
Reviewed-on: http://android.intel.com:8080/118418
Reviewed-by: Champciaux, Nicolas <nicolas.champciaux@intel.com>
Tested-by: Champciaux, Nicolas <nicolas.champciaux@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
Signed-off-by: Jeremie GARCIA <jeremie.garcia@intel.com>
---
 init/init_parser.c |    6 ++-
 init/keywords.h    |  116 ++++++++++++++++++++++++++--------------------------
 2 files changed, 62 insertions(+), 60 deletions(-)

diff --git a/init/init_parser.c b/init/init_parser.c
index 958e36e..a6e3786 100644
--- a/init/init_parser.c
+++ b/init/init_parser.c
@@ -57,12 +57,13 @@ static void parse_line_action(struct parse_state *state, int nargs, char **args)
 
 #include "keywords.h"
 
-#define KEYWORD(symbol, flags, nargs, func) \
-    [ K_##symbol ] = { #symbol, func, nargs + 1, flags, },
+#define KEYWORD(symbol, flags, nargs, func, uev_func) \
+    [ K_##symbol ] = { #symbol, func, uev_func, nargs + 1, flags, },
 
 struct {
     const char *name;
     int (*func)(int nargs, char **args);
+    int (*uev_func)(int nargs, char **args);
     unsigned char nargs;
     unsigned char flags;
 } keyword_info[KEYWORD_COUNT] = {
@@ -74,6 +75,7 @@ struct {
 #define kw_is(kw, type) (keyword_info[kw].flags & (type))
 #define kw_name(kw) (keyword_info[kw].name)
 #define kw_func(kw) (keyword_info[kw].func)
+#define kw_uev_func(kw) (keyword_info[kw].uev_func ? keyword_info[kw].uev_func : keyword_info[kw].func )
 #define kw_nargs(kw) (keyword_info[kw].nargs)
 
 int lookup_keyword(const char *s)
diff --git a/init/keywords.h b/init/keywords.h
index efba30d..58c0a48 100644
--- a/init/keywords.h
+++ b/init/keywords.h
@@ -41,67 +41,67 @@ int do_loglevel(int nargs, char **args);
 int do_load_persist_props(int nargs, char **args);
 int do_wait(int nargs, char **args);
 #define __MAKE_KEYWORD_ENUM__
-#define KEYWORD(symbol, flags, nargs, func) K_##symbol,
+#define KEYWORD(symbol, flags, nargs, func, uev_func) K_##symbol,
 enum {
     K_UNKNOWN,
 #endif
-    KEYWORD(capability,  OPTION,  0, 0)
-    KEYWORD(chdir,       COMMAND, 1, do_chdir)
-    KEYWORD(chroot,      COMMAND, 1, do_chroot)
-    KEYWORD(class,       OPTION,  0, 0)
-    KEYWORD(class_start, COMMAND, 1, do_class_start)
-    KEYWORD(class_stop,  COMMAND, 1, do_class_stop)
-    KEYWORD(class_reset, COMMAND, 1, do_class_reset)
-    KEYWORD(console,     OPTION,  0, 0)
-    KEYWORD(critical,    OPTION,  0, 0)
-    KEYWORD(disabled,    OPTION,  0, 0)
-    KEYWORD(domainname,  COMMAND, 1, do_domainname)
-    KEYWORD(exec,        COMMAND, 1, do_exec)
-    KEYWORD(export,      COMMAND, 2, do_export)
-    KEYWORD(group,       OPTION,  0, 0)
-    KEYWORD(hostname,    COMMAND, 1, do_hostname)
-    KEYWORD(ifup,        COMMAND, 1, do_ifup)
-    KEYWORD(insmod,      COMMAND, 1, do_insmod)
-    KEYWORD(import,      SECTION, 1, 0)
-    KEYWORD(keycodes,    OPTION,  0, 0)
-    KEYWORD(mkdir,       COMMAND, 1, do_mkdir)
-    KEYWORD(mount_all,   COMMAND, 1, do_mount_all)
-    KEYWORD(mount,       COMMAND, 3, do_mount)
-    KEYWORD(on,          SECTION, 0, 0)
-    KEYWORD(oneshot,     OPTION,  0, 0)
-    KEYWORD(onrestart,   OPTION,  0, 0)
-    KEYWORD(powerctl,    COMMAND, 1, do_powerctl)
-    KEYWORD(probemod,    COMMAND, 1, do_probemod)
-    KEYWORD(restart,     COMMAND, 1, do_restart)
-    KEYWORD(restorecon,  COMMAND, 1, do_restorecon)
-    KEYWORD(rm,          COMMAND, 1, do_rm)
-    KEYWORD(rmdir,       COMMAND, 1, do_rmdir)
-    KEYWORD(seclabel,    OPTION,  0, 0)
-    KEYWORD(service,     SECTION, 0, 0)
-    KEYWORD(setcon,      COMMAND, 1, do_setcon)
-    KEYWORD(setenforce,  COMMAND, 1, do_setenforce)
-    KEYWORD(setenv,      OPTION,  2, 0)
-    KEYWORD(setkey,      COMMAND, 0, do_setkey)
-    KEYWORD(setprop,     COMMAND, 2, do_setprop)
-    KEYWORD(setrlimit,   COMMAND, 3, do_setrlimit)
-    KEYWORD(setsebool,   COMMAND, 2, do_setsebool)
-    KEYWORD(socket,      OPTION,  0, 0)
-    KEYWORD(start,       COMMAND, 1, do_start)
-    KEYWORD(stop,        COMMAND, 1, do_stop)
-    KEYWORD(swapon_all,  COMMAND, 1, do_swapon_all)
-    KEYWORD(trigger,     COMMAND, 1, do_trigger)
-    KEYWORD(symlink,     COMMAND, 1, do_symlink)
-    KEYWORD(sysclktz,    COMMAND, 1, do_sysclktz)
-    KEYWORD(user,        OPTION,  0, 0)
-    KEYWORD(wait,        COMMAND, 1, do_wait)
-    KEYWORD(write,       COMMAND, 2, do_write)
-    KEYWORD(copy,        COMMAND, 2, do_copy)
-    KEYWORD(chown,       COMMAND, 2, do_chown)
-    KEYWORD(chmod,       COMMAND, 2, do_chmod)
-    KEYWORD(loglevel,    COMMAND, 1, do_loglevel)
-    KEYWORD(load_persist_props,    COMMAND, 0, do_load_persist_props)
-    KEYWORD(ioprio,      OPTION,  0, 0)
-    KEYWORD(coldboot,    COMMAND, 1, do_builtin_coldboot)
+    KEYWORD(capability,  OPTION,  0, 0, 0)
+    KEYWORD(chdir,       COMMAND, 1, do_chdir, 0)
+    KEYWORD(chroot,      COMMAND, 1, do_chroot, 0)
+    KEYWORD(class,       OPTION,  0, 0, 0)
+    KEYWORD(class_start, COMMAND, 1, do_class_start, 0)
+    KEYWORD(class_stop,  COMMAND, 1, do_class_stop, 0)
+    KEYWORD(class_reset, COMMAND, 1, do_class_reset, 0)
+    KEYWORD(console,     OPTION,  0, 0, 0)
+    KEYWORD(critical,    OPTION,  0, 0, 0)
+    KEYWORD(disabled,    OPTION,  0, 0, 0)
+    KEYWORD(domainname,  COMMAND, 1, do_domainname, 0)
+    KEYWORD(exec,        COMMAND, 1, do_exec, 0)
+    KEYWORD(export,      COMMAND, 2, do_export, 0)
+    KEYWORD(group,       OPTION,  0, 0, 0)
+    KEYWORD(hostname,    COMMAND, 1, do_hostname, 0)
+    KEYWORD(ifup,        COMMAND, 1, do_ifup, 0)
+    KEYWORD(insmod,      COMMAND, 1, do_insmod, 0)
+    KEYWORD(import,      SECTION, 1, 0, 0)
+    KEYWORD(keycodes,    OPTION,  0, 0, 0)
+    KEYWORD(mkdir,       COMMAND, 1, do_mkdir, 0)
+    KEYWORD(mount_all,   COMMAND, 1, do_mount_all, 0)
+    KEYWORD(mount,       COMMAND, 3, do_mount, 0)
+    KEYWORD(on,          SECTION, 0, 0, 0)
+    KEYWORD(oneshot,     OPTION,  0, 0, 0)
+    KEYWORD(onrestart,   OPTION,  0, 0, 0)
+    KEYWORD(powerctl,    COMMAND, 1, do_powerctl, 0)
+    KEYWORD(probemod,    COMMAND, 1, do_probemod, 0)
+    KEYWORD(restart,     COMMAND, 1, do_restart, 0)
+    KEYWORD(restorecon,  COMMAND, 1, do_restorecon, 0)
+    KEYWORD(rm,          COMMAND, 1, do_rm, 0)
+    KEYWORD(rmdir,       COMMAND, 1, do_rmdir, 0)
+    KEYWORD(seclabel,    OPTION,  0, 0, 0)
+    KEYWORD(service,     SECTION, 0, 0, 0)
+    KEYWORD(setcon,      COMMAND, 1, do_setcon, 0)
+    KEYWORD(setenforce,  COMMAND, 1, do_setenforce, 0)
+    KEYWORD(setenv,      OPTION,  2, 0, 0)
+    KEYWORD(setkey,      COMMAND, 0, do_setkey, 0)
+    KEYWORD(setprop,     COMMAND, 2, do_setprop, 0)
+    KEYWORD(setrlimit,   COMMAND, 3, do_setrlimit, 0)
+    KEYWORD(setsebool,   COMMAND, 1, do_setsebool, 0)
+    KEYWORD(socket,      OPTION,  0, 0, 0)
+    KEYWORD(start,       COMMAND, 1, do_start, 0)
+    KEYWORD(stop,        COMMAND, 1, do_stop, 0)
+    KEYWORD(swapon_all,  COMMAND, 1, do_swapon_all, 0)
+    KEYWORD(trigger,     COMMAND, 1, do_trigger, 0)
+    KEYWORD(symlink,     COMMAND, 1, do_symlink, 0)
+    KEYWORD(sysclktz,    COMMAND, 1, do_sysclktz, 0)
+    KEYWORD(user,        OPTION,  0, 0, 0)
+    KEYWORD(wait,        COMMAND, 1, do_wait, 0)
+    KEYWORD(write,       COMMAND, 2, do_write, 0)
+    KEYWORD(copy,        COMMAND, 2, do_copy, 0)
+    KEYWORD(chown,       COMMAND, 2, do_chown, 0)
+    KEYWORD(chmod,       COMMAND, 2, do_chmod, 0)
+    KEYWORD(loglevel,    COMMAND, 1, do_loglevel, 0)
+    KEYWORD(load_persist_props,    COMMAND, 0, do_load_persist_props, 0)
+    KEYWORD(ioprio,      OPTION,  0, 0, 0)
+    KEYWORD(coldboot,    COMMAND, 1, do_builtin_coldboot, 0)
 #ifdef __MAKE_KEYWORD_ENUM__
     KEYWORD_COUNT,
 };
-- 
1.7.4.1

