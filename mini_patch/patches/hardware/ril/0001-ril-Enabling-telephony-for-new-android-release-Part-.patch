From 2db79159b43c816239b6abeb4490e3dd1dffd1d1 Mon Sep 17 00:00:00 2001
From: Arun Ravindran <arun.ravindran@intel.com>
Date: Wed, 21 Nov 2012 15:16:39 +0200
Subject: ril: Enabling telephony for new android release- Part 1

BZ: 47372 47879

The following changes ported from MCG Android 4.1.2
for enabling telephony in any android rebase activity.

1) Introduction of new Call Failure cause enumerations
2) Introduction of new RIL_Errno enumerations for
    support of network personalisation.
3) usage of rild socket as command line option to rild.
4) Adding various Data Profile enumerations in Ril_DataProfile.

Change-Id: I720a18f0e474f7748a619880c598920e924e4d49
Orig-Change-Id: I05e9e9f7e7ba8e9d5159ec7beaf4ed18430dc0c3
Category: aosp improvement
Domain: Telephony-Telephony-FWK
Origin: internal
Upstream-Candidate: yes
Signed-off-by: Arun Ravindran <arun.ravindran@intel.com>
---
 include/telephony/ril.h |   19 ++++++++++++++++++-
 libril/ril.cpp          |    4 +++-
 rild/rild.c             |    8 ++++++++
 3 files changed, 29 insertions(+), 2 deletions(-)

diff --git a/include/telephony/ril.h b/include/telephony/ril.h
index 8a09bdf..243d9c0 100644
--- a/include/telephony/ril.h
+++ b/include/telephony/ril.h
@@ -34,6 +34,8 @@ extern "C" {
 #define CDMA_ALPHA_INFO_BUFFER_LENGTH 64
 #define CDMA_NUMBER_INFO_BUFFER_LENGTH 81
 
+#define RIL_SOCKET_NAME_MAX_LENGTH 6
+
 typedef void * RIL_Token;
 
 typedef enum {
@@ -57,8 +59,12 @@ typedef enum {
                                                    location */
     RIL_E_MODE_NOT_SUPPORTED = 13,              /* HW does not support preferred network type */
     RIL_E_FDN_CHECK_FAILURE = 14,               /* command failed because recipient is not on FDN list */
-    RIL_E_ILLEGAL_SIM_OR_ME = 15                /* network selection failed due to
+    RIL_E_ILLEGAL_SIM_OR_ME = 15,                /* network selection failed due to
                                                    illegal SIM or ME */
+    RIL_E_NETWORK_PUK_REQUIRED = 16,            /* Network Personalisation PUK required */
+    RIL_E_MISSING_RESOURCE = 17,
+    RIL_E_NO_SUCH_ELEMENT = 18,
+
 } RIL_Errno;
 
 typedef enum {
@@ -371,7 +377,11 @@ typedef enum {
     CALL_FAIL_NORMAL = 16,
     CALL_FAIL_BUSY = 17,
     CALL_FAIL_CONGESTION = 34,
+    CALL_FAIL_RESSOURCES_UNAVAILABLE = 47,
+    CALL_FAIL_BEARER_CAPABILITY_NOT_AUTHORIZED = 57,
+    CALL_FAIL_BEARER_CAPABILITY_NOT_AVAILABLE = 58,
     CALL_FAIL_ACM_LIMIT_EXCEEDED = 68,
+    CALL_FAIL_INCOMPATIBLE_DESTINATION = 88,
     CALL_FAIL_CALL_BARRED = 240,
     CALL_FAIL_FDN_BLOCKED = 241,
     CALL_FAIL_IMSI_UNKNOWN_IN_VLR = 242,
@@ -438,6 +448,12 @@ typedef enum {
 typedef enum {
     RIL_DATA_PROFILE_DEFAULT    = 0,
     RIL_DATA_PROFILE_TETHERED   = 1,
+    RIL_DATA_PROFILE_IMS        = 2,
+    RIL_DATA_PROFILE_FOTA       = 3,
+    RIL_DATA_PROFILE_CBS        = 4,
+    RIL_DATA_PROFILE_MMS        = 5,
+    RIL_DATA_PROFILE_SUPL       = 6,
+    RIL_DATA_PROFILE_HIPRI      = 7,
     RIL_DATA_PROFILE_OEM_BASE   = 1000    /* Start of OEM-specific profiles */
 } RIL_DataProfile;
 
@@ -4209,6 +4225,7 @@ const RIL_RadioFunctions *RIL_Init(const struct RIL_Env *env, int argc, char **a
  */
 void RIL_register (const RIL_RadioFunctions *callbacks);
 
+char gs_rilSocketName[RIL_SOCKET_NAME_MAX_LENGTH];
 
 /**
  *
diff --git a/libril/ril.cpp b/libril/ril.cpp
index 1957939..5220999 100644
--- a/libril/ril.cpp
+++ b/libril/ril.cpp
@@ -3197,7 +3197,9 @@ RIL_register (const RIL_RadioFunctions *callbacks) {
     s_fdListen = ret;
 
 #else
-    s_fdListen = android_get_control_socket(SOCKET_NAME_RIL);
+    //s_fdListen = android_get_control_socket(SOCKET_NAME_RIL);
+    s_fdListen = android_get_control_socket(gs_rilSocketName);
+    ALOGD("Gettting socket '%s", gs_rilSocketName);
     if (s_fdListen < 0) {
         RLOGE("Failed to get socket '" SOCKET_NAME_RIL "'");
         exit(-1);
diff --git a/rild/rild.c b/rild/rild.c
index 70530c6..225fcbf 100644
--- a/rild/rild.c
+++ b/rild/rild.c
@@ -39,6 +39,8 @@
 #define LIB_ARGS_PROPERTY   "rild.libargs"
 #define MAX_LIB_ARGS        16
 
+extern char gs_rilSocketName[RIL_SOCKET_NAME_MAX_LENGTH];
+
 static void usage(const char *argv0)
 {
     fprintf(stderr, "Usage: %s -l <ril impl library> [-- <args for impl library>]\n", argv0);
@@ -109,11 +111,17 @@ int main(int argc, char **argv)
 
     int i;
 
+    strncpy(gs_rilSocketName, "rild", RIL_SOCKET_NAME_MAX_LENGTH - 1);
+
     umask(S_IRGRP | S_IWGRP | S_IXGRP | S_IROTH | S_IWOTH | S_IXOTH);
     for (i = 1; i < argc ;) {
         if (0 == strcmp(argv[i], "-l") && (argc - i > 1)) {
             rilLibPath = argv[i + 1];
             i += 2;
+        } else if (0 == strcmp(argv[i], "-S")) {
+            strncpy(gs_rilSocketName, argv[i + 1], RIL_SOCKET_NAME_MAX_LENGTH - 1);
+            gs_rilSocketName[RIL_SOCKET_NAME_MAX_LENGTH - 1] = '\0';
+            i += 2;
         } else if (0 == strcmp(argv[i], "--")) {
             i++;
             hasLibArgs = 1;
-- 
1.7.4.1

