From 33b55726c5f05167e2501590d80fee3b353e1c55 Mon Sep 17 00:00:00 2001
From: Cedric Poignet <cedric.poignet@intel.com>
Date: Fri, 12 Jul 2013 14:38:25 +0200
Subject: Remove spamming "BT_WAKE" and "op for 7" traces

BZ: 123264

These debug traces impacts the power management and fills
the traces files with useless information.

We want to keep the debug trace level before Beta and we
want to get rid of these spaming traces.

Category: device enablement
Domain: CWS.BT-Core
Origin: internal
Upstream-Candidate: no, needs rework

Change-Id: I605e28ea98968f9a58ffdedc4fe04cf8bfbb0a2b
Orig-Change-Id: I257186acb937d0cfb73cc784ea0427206d252bbf
Signed-off-by: Cedric Poignet <cedric.poignet@intel.com>
Reviewed-on: http://android.intel.com:8080/118517
Reviewed-by: Bondier, CedricX <cedricx.bondier@intel.com>
Reviewed-by: Biselli, MirkoX <mirkox.biselli@intel.com>
Reviewed-by: Yao, Yong <yong.yao@intel.com>
Tested-by: Lestienne, ChristopheX <christophex.lestienne@intel.com>
Reviewed-by: buildbot <buildbot@intel.com>
Tested-by: buildbot <buildbot@intel.com>
Reviewed-on: http://android.intel.com:8080/123809
Reviewed-by: Gros, Julien <julien.gros@intel.com>
Tested-by: Champciaux, Nicolas <nicolas.champciaux@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
---
 src/bt_vendor_brcm.c |    9 +++++++--
 src/upio.c           |    8 +++++++-
 2 files changed, 14 insertions(+), 3 deletions(-)

diff --git a/src/bt_vendor_brcm.c b/src/bt_vendor_brcm.c
index 19e40d6..0476ca5 100644
--- a/src/bt_vendor_brcm.c
+++ b/src/bt_vendor_brcm.c
@@ -132,12 +132,11 @@ static int op(bt_vendor_opcode_t opcode, void *param)
 {
     int retval = 0;
 
-    BTVNDDBG("op for %d", opcode);
-
     switch(opcode)
     {
         case BT_VND_OP_POWER_CTRL:
             {
+                BTVNDDBG("op: BT_VND_OP_POWER_CTRL");
                 int *state = (int *) param;
                 if (*state == BT_VND_PWR_OFF)
                     upio_set_bluetooth_power(UPIO_BT_POWER_OFF);
@@ -148,12 +147,14 @@ static int op(bt_vendor_opcode_t opcode, void *param)
 
         case BT_VND_OP_FW_CFG:
             {
+                BTVNDDBG("op: BT_VND_OP_FW_CFG");
                 hw_config_start();
             }
             break;
 
         case BT_VND_OP_SCO_CFG:
             {
+                BTVNDDBG("op: BT_VND_OP_SCO_CFG");
 #if (SCO_CFG_INCLUDED == TRUE)
                 hw_sco_config();
 #else
@@ -164,6 +165,7 @@ static int op(bt_vendor_opcode_t opcode, void *param)
 
         case BT_VND_OP_USERIAL_OPEN:
             {
+                BTVNDDBG("op: BT_VND_OP_USERIAL_OPEN");
                 int (*fd_array)[] = (int (*)[]) param;
                 int fd, idx;
                 fd = userial_vendor_open((tUSERIAL_CFG *) &userial_init_cfg);
@@ -180,12 +182,14 @@ static int op(bt_vendor_opcode_t opcode, void *param)
 
         case BT_VND_OP_USERIAL_CLOSE:
             {
+                BTVNDDBG("op: BT_VND_OP_USERIAL_CLOSE");
                 userial_vendor_close();
             }
             break;
 
         case BT_VND_OP_GET_LPM_IDLE_TIMEOUT:
             {
+                BTVNDDBG("op: BT_VND_OP_GET_LPM_IDLE_TIMEOUT");
                 uint32_t *timeout_ms = (uint32_t *) param;
                 *timeout_ms = hw_lpm_get_idle_timeout();
             }
@@ -193,6 +197,7 @@ static int op(bt_vendor_opcode_t opcode, void *param)
 
         case BT_VND_OP_LPM_SET_MODE:
             {
+                BTVNDDBG("op: BT_VND_OP_LPM_SET_MODE");
                 uint8_t *mode = (uint8_t *) param;
                 retval = hw_lpm_enable(*mode);
             }
diff --git a/src/upio.c b/src/upio.c
index 2de171c..a5f690f 100644
--- a/src/upio.c
+++ b/src/upio.c
@@ -404,7 +404,13 @@ void upio_set(uint8_t pio, uint8_t action, uint8_t polarity)
         case UPIO_BT_WAKE:
             if (upio_state[UPIO_BT_WAKE] == action)
             {
-                UPIODBG("BT_WAKE is %s already", lpm_state[action]);
+#if (UPIO_DBG == TRUE)
+                // Filters UPIO_ASSERT action done each 20ms in the A2DP use case.
+                if (action != UPIO_ASSERT)
+                {
+                    UPIODBG("BT_WAKE is %s already", lpm_state[action]);
+                }
+#endif
 
 #if (BT_WAKE_VIA_PROC == TRUE)
                 if (lpm_proc_cb.btwrite_active == TRUE)
-- 
1.7.4.1

