From 66e32887a631843c008b45c5c1abbc9e1bd22b01 Mon Sep 17 00:00:00 2001
From: Patrick Combes <patrick.combes@intel.com>
Date: Fri, 14 Jun 2013 10:09:13 +0200
Subject: Add support for dynamic bt_vendor configuration

BZ: 117478

Add the flexibility to configure the libbt-vendor parameters through
properties at runtime.
Then these properties can be configured based on spid, sdio enumeration,
or any other mean to detect the BT chip connected.

Change-Id: I401ceca81dc4530dde5203349f63064b543c80e1
Signed-off-by: Patrick Combes <patrick.combes@intel.com>
Reviewed-on: http://android.intel.com:8080/126530
Reviewed-by: Gros, Julien <julien.gros@intel.com>
Tested-by: Champciaux, Nicolas <nicolas.champciaux@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
---
 src/bt_vendor_brcm.c |    5 +++++
 src/conf.c           |   33 +++++++++++++++++++++++++++++++++
 2 files changed, 38 insertions(+), 0 deletions(-)

diff --git a/src/bt_vendor_brcm.c b/src/bt_vendor_brcm.c
index dc93b74..46a930b 100644
--- a/src/bt_vendor_brcm.c
+++ b/src/bt_vendor_brcm.c
@@ -54,6 +54,7 @@ void hw_lpm_set_wake_state(uint8_t wake_assert);
 #if (SCO_CFG_INCLUDED == TRUE)
 void hw_sco_config(void);
 #endif
+void vnd_load_prop();
 void vnd_load_conf(const char *p_path);
 #if (HW_END_WITH_HCI_RESET == TRUE)
 void hw_epilog_process(void);
@@ -117,6 +118,10 @@ static int init(const bt_vendor_callbacks_t* p_cb, unsigned char *local_bdaddr)
     userial_vendor_init();
     upio_init();
 
+    /* Load first the configuration through properties */
+    vnd_load_prop();
+
+    /* Then the file configuration can overwrite them */
     property_get("ro.bt.conf_file", lib_conf_file, VENDOR_LIB_CONF_FILE);
     vnd_load_conf(lib_conf_file);
 
diff --git a/src/conf.c b/src/conf.c
index 96f259d..2592e57 100644
--- a/src/conf.c
+++ b/src/conf.c
@@ -29,6 +29,7 @@
 
 #include <utils/Log.h>
 #include <string.h>
+#include <cutils/properties.h>
 #include "bt_vendor_brcm.h"
 
 /******************************************************************************
@@ -175,3 +176,35 @@ void vnd_load_conf(const char *p_path)
     }
 }
 
+/*******************************************************************************
+**
+** Function        vnd_load_prop
+**
+** Description     Read conf entry from android system properties and call
+**                 the corresponding config function
+**
+** Returns         None
+**
+*******************************************************************************/
+void vnd_load_prop()
+{
+    char     prop_key[PROPERTY_KEY_MAX];
+    char     prop_value[PROPERTY_VALUE_MAX];
+    conf_entry_t    *p_entry;
+
+    p_entry = (conf_entry_t *)conf_table;
+
+    while (p_entry->conf_entry != NULL)
+    {
+        strcpy(prop_key, "ro.bt.vnd.");
+        strcat(prop_key, p_entry->conf_entry);
+        property_get(prop_key, prop_value, NULL);
+        if (prop_value != NULL) {
+            p_entry->p_action((char *)p_entry->conf_entry, prop_value,
+                                                           p_entry->param);
+            ALOGI("%s set to %s through property", p_entry->conf_entry,
+                                                   prop_value);
+        }
+        p_entry++;
+    }
+}
-- 
1.7.4.1

