From 08e7bff68d559c36079631c54ef5a12ed5850816 Mon Sep 17 00:00:00 2001
From: Dan Liang <dan.liang@intel.com>
Date: Sun, 25 Nov 2012 13:38:49 +0800
Subject: [PATCH 042/170] [PORT FROM MAIN] libstagefright: port WMV related
 patch

BZ:47670

original patch:
51112:libstagefright: Fix an issue that thumbnail for WMV file can not be generated
42039: libstagefright: Ignore seek in case of no index object within asf file
30078:libstagefright: Porting patches from R2 to R3

Signed-off-by: ywan171 <yi.a.wang@intel.com>
Signed-off-by: Dan Liang <dan.liang@intel.com>
Change-Id: I34de769270993d46b93dfd3be4daf8276221b3b0
Reviewed-on: http://android.intel.com:8080/75859
Reviewed-by: lab_cactus <lab_cactus@intel.com>
Reviewed-by: Yao, Yong <yong.yao@intel.com>
Tested-by: Tong, BoX <box.tong@intel.com>
Reviewed-by: Tong, BoX <box.tong@intel.com>
---
 include/media/stagefright/MediaBuffer.h          |    4 +++-
 media/libstagefright/Android.mk                  |   10 ++++++++++
 media/libstagefright/DataSource.cpp              |    7 ++++++-
 media/libstagefright/MediaExtractor.cpp          |    8 ++++++++
 media/libstagefright/OMXCodec.cpp                |   22 ++++++++++++++++++++++
 media/libstagefright/StagefrightMediaScanner.cpp |    3 +++
 6 files changed, 52 insertions(+), 2 deletions(-)

diff --git a/include/media/stagefright/MediaBuffer.h b/include/media/stagefright/MediaBuffer.h
index 3d79596..167beb0 100644
--- a/include/media/stagefright/MediaBuffer.h
+++ b/include/media/stagefright/MediaBuffer.h
@@ -91,7 +91,9 @@ protected:
 private:
     friend class MediaBufferGroup;
     friend class OMXDecoder;
-
+#ifdef USE_INTEL_ASF_EXTRACTOR
+    friend class MediaBufferPool;
+#endif
     // For use by OMXDecoder, reference count must be 1, drop reference
     // count to 0 without signalling the observer.
     void claim();
diff --git a/media/libstagefright/Android.mk b/media/libstagefright/Android.mk
index 3153436..fea2564 100644
--- a/media/libstagefright/Android.mk
+++ b/media/libstagefright/Android.mk
@@ -117,6 +117,16 @@ LOCAL_SRC_FILES += \
         chromium_http_stub.cpp
 LOCAL_CPPFLAGS += -DCHROMIUM_AVAILABLE=1
 
+ifeq ($(USE_INTEL_ASF_EXTRACTOR),true)
+
+LOCAL_C_INCLUDES += \
+        $(TARGET_OUT_HEADERS)/libmix_asf_extractor
+
+LOCAL_STATIC_LIBRARIES += libasfextractor
+LOCAL_SHARED_LIBRARIES += libasfparser
+LOCAL_CPPFLAGS += -DUSE_INTEL_ASF_EXTRACTOR
+endif
+
 LOCAL_SHARED_LIBRARIES += libstlport
 include external/stlport/libstlport.mk
 
diff --git a/media/libstagefright/DataSource.cpp b/media/libstagefright/DataSource.cpp
index cff8a7f..6e585a7 100644
--- a/media/libstagefright/DataSource.cpp
+++ b/media/libstagefright/DataSource.cpp
@@ -34,6 +34,9 @@
 #include "include/OggExtractor.h"
 #include "include/WAVExtractor.h"
 #include "include/WVMExtractor.h"
+#ifdef USE_INTEL_ASF_EXTRACTOR
+#include "AsfExtractor.h"
+#endif
 
 #include "matroska/MatroskaExtractor.h"
 
@@ -124,7 +127,9 @@ void DataSource::RegisterDefaultSniffers() {
     RegisterSniffer(SniffMPEG2PS);
     RegisterSniffer(SniffWVM);
     RegisterSniffer(SniffAVI);
-
+#ifdef USE_INTEL_ASF_EXTRACTOR
+    RegisterSniffer(SniffAsf);
+#endif
     char value[PROPERTY_VALUE_MAX];
     if (property_get("drm.service.enabled", value, NULL)
             && (!strcmp(value, "1") || !strcasecmp(value, "true"))) {
diff --git a/media/libstagefright/MediaExtractor.cpp b/media/libstagefright/MediaExtractor.cpp
index 6e33984..495e3e3 100644
--- a/media/libstagefright/MediaExtractor.cpp
+++ b/media/libstagefright/MediaExtractor.cpp
@@ -32,6 +32,10 @@
 #include "include/FLACExtractor.h"
 #include "include/AACExtractor.h"
 
+#ifdef USE_INTEL_ASF_EXTRACTOR
+#include "AsfExtractor.h"
+#include "MetaDataExt.h"
+#endif
 #include "matroska/MatroskaExtractor.h"
 
 #include <media/stagefright/foundation/AMessage.h>
@@ -116,6 +120,10 @@ sp<MediaExtractor> MediaExtractor::Create(
         ret = new MatroskaExtractor(source);
     } else if (!strcasecmp(mime, MEDIA_MIMETYPE_CONTAINER_MPEG2TS)) {
         ret = new MPEG2TSExtractor(source);
+#ifdef USE_INTEL_ASF_EXTRACTOR
+    } else if (!strcasecmp(mime, MEDIA_MIMETYPE_CONTAINER_ASF)) {
+        return new AsfExtractor(source);
+#endif
     } else if (!strcasecmp(mime, MEDIA_MIMETYPE_CONTAINER_AVI)) {
         ret = new AVIExtractor(source);
     } else if (!strcasecmp(mime, MEDIA_MIMETYPE_CONTAINER_WVM)) {
diff --git a/media/libstagefright/OMXCodec.cpp b/media/libstagefright/OMXCodec.cpp
index e8a0a87..c8ca21c 100755
--- a/media/libstagefright/OMXCodec.cpp
+++ b/media/libstagefright/OMXCodec.cpp
@@ -49,6 +49,10 @@
 #include "include/ThreadedSource.h"
 #endif
 
+#ifdef USE_INTEL_ASF_EXTRACTOR
+#include "MetaDataExt.h"
+#endif
+
 namespace android {
 
 // Treat time out as an error if we have not received any output
@@ -504,6 +508,12 @@ status_t OMXCodec::configureCodec(const sp<MetaData> &meta) {
 
             addCodecSpecificData(
                     codec_specific_data, codec_specific_data_size);
+#ifdef USE_INTEL_ASF_EXTRACTOR
+        } else if (meta->findData(kKeyConfigData, &type, &data, &size)) {
+
+            CODEC_LOGV("Found config data for WMV, size is %d", size);
+            addCodecSpecificData(data, size);
+#endif
         } else if (meta->findData(kKeyAVCC, &type, &data, &size)) {
             // Parse the AVCDecoderConfigurationRecord
 
@@ -867,6 +877,10 @@ void OMXCodec::setVideoInputFormat(
         compressionFormat = OMX_VIDEO_CodingMPEG4;
     } else if (!strcasecmp(MEDIA_MIMETYPE_VIDEO_H263, mime)) {
         compressionFormat = OMX_VIDEO_CodingH263;
+#ifdef USE_INTEL_ASF_EXTRACTOR
+    } else if (!strcasecmp(MEDIA_MIMETYPE_VIDEO_WMV, mime)) {
+        compressionFormat = OMX_VIDEO_CodingWMV;
+#endif
     } else {
         ALOGE("Not a supported video mime type: %s", mime);
         CHECK(!"Should not be here. Not a supported video mime type.");
@@ -1264,6 +1278,10 @@ status_t OMXCodec::setVideoOutputFormat(
         compressionFormat = OMX_VIDEO_CodingVPX;
     } else if (!strcasecmp(MEDIA_MIMETYPE_VIDEO_MPEG2, mime)) {
         compressionFormat = OMX_VIDEO_CodingMPEG2;
+#ifdef USE_INTEL_ASF_EXTRACTOR
+    } else if (!strcasecmp(MEDIA_MIMETYPE_VIDEO_WMV, mime)) {
+        compressionFormat = OMX_VIDEO_CodingWMV;
+#endif
     } else {
         ALOGE("Not a supported video mime type: %s", mime);
         CHECK(!"Should not be here. Not a supported video mime type.");
@@ -1498,6 +1516,10 @@ void OMXCodec::setComponentRole(
             "video_decoder.mpeg4", "video_encoder.mpeg4" },
         { MEDIA_MIMETYPE_VIDEO_H263,
             "video_decoder.h263", "video_encoder.h263" },
+#ifdef USE_INTEL_ASF_EXTRACTOR
+        { MEDIA_MIMETYPE_VIDEO_WMV,
+            "video_decoder.wmv", NULL },
+#endif
         { MEDIA_MIMETYPE_VIDEO_VPX,
             "video_decoder.vpx", "video_encoder.vpx" },
         { MEDIA_MIMETYPE_AUDIO_RAW,
diff --git a/media/libstagefright/StagefrightMediaScanner.cpp b/media/libstagefright/StagefrightMediaScanner.cpp
index b7cf96e..a23f269 100644
--- a/media/libstagefright/StagefrightMediaScanner.cpp
+++ b/media/libstagefright/StagefrightMediaScanner.cpp
@@ -43,6 +43,9 @@ static bool FileHasAcceptableExtension(const char *extension) {
         ".wav", ".amr", ".midi", ".xmf", ".rtttl", ".rtx", ".ota",
         ".mkv", ".mka", ".webm", ".ts", ".fl", ".flac", ".mxmf",
         ".avi", ".mpeg", ".mpg"
+#ifdef USE_INTEL_ASF_EXTRACTOR
+        ,".wmv",".asf"
+#endif
     };
     static const size_t kNumValidExtensions =
         sizeof(kValidExtensions) / sizeof(kValidExtensions[0]);
-- 
1.7.9

