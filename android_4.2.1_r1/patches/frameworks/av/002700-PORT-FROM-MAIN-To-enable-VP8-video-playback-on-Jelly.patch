From 9a98c1145fafca5a7b6d5da6a708377ea10b8622 Mon Sep 17 00:00:00 2001
From: wfeng6 <wei.feng@intel.com>
Date: Wed, 21 Nov 2012 21:33:22 +0800
Subject: [PATCH 027/170] [PORT FROM MAIN] To enable VP8 video playback on
 Jelly Bean

BZ: 47610

Port patches from Intel R3 ICS release to enable VP8 video playback on JB.

Original patch:
34845: Enable one thread for enhancement SW VP8 deode preformance

DO NOT UPSTREAM!

Change-Id: I13fbe80f8655e283f1c085f84a83dbbd48cafcae
Signed-off-by: wfeng6 <wei.feng@intel.com>
Signed-off-by: Tong, Bo <box.tong@intel.com>
Reviewed-on: http://android.intel.com:8080/75086
Reviewed-by: Yao, Yong <yong.yao@intel.com>
Reviewed-by: lab_cactus <lab_cactus@intel.com>
Reviewed-by: buildbot <buildbot@intel.com>
Tested-by: buildbot <buildbot@intel.com>
---
 media/libstagefright/Android.mk   |   11 +++++++++++
 media/libstagefright/OMXCodec.cpp |   16 ++++++++++++++++
 2 files changed, 27 insertions(+), 0 deletions(-)

diff --git a/media/libstagefright/Android.mk b/media/libstagefright/Android.mk
index 25b9ce5..187f7a0 100644
--- a/media/libstagefright/Android.mk
+++ b/media/libstagefright/Android.mk
@@ -101,6 +101,17 @@ LOCAL_STATIC_LIBRARIES := \
         libstagefright_id3 \
         libFLAC \
 
+ifeq ($(USE_INTEL_MDP),true)
+LOCAL_C_INCLUDES += $(TARGET_OUT_HEADERS)/media_codecs
+
+LOCAL_STATIC_LIBRARIES += \
+        lib_stagefright_mdp_vp8dec \
+        libmc_vp8_dec \
+        libmc_codec_common \
+        libmc_core
+LOCAL_CPPFLAGS += -DUSE_INTEL_MDP
+endif
+
 LOCAL_SRC_FILES += \
         chromium_http_stub.cpp
 LOCAL_CPPFLAGS += -DCHROMIUM_AVAILABLE=1
diff --git a/media/libstagefright/OMXCodec.cpp b/media/libstagefright/OMXCodec.cpp
index c3dd997..e8a0a87 100755
--- a/media/libstagefright/OMXCodec.cpp
+++ b/media/libstagefright/OMXCodec.cpp
@@ -44,6 +44,11 @@
 
 #include "include/avc_utils.h"
 
+#ifdef USE_INTEL_MDP
+#include "UMCMacro.h"
+#include "include/ThreadedSource.h"
+#endif
+
 namespace android {
 
 // Treat time out as an error if we have not received any output
@@ -62,6 +67,10 @@ static sp<MediaSource> Make##name(const sp<MediaSource> &source, const sp<MetaDa
     return new name(source, meta); \
 }
 
+#ifdef USE_INTEL_MDP
+FACTORY_CREATE_DECL(CIPVP8Decoder)
+#endif
+
 #define FACTORY_REF(name) { #name, Make##name },
 
 FACTORY_CREATE_ENCODER(AACEncoder)
@@ -330,6 +339,13 @@ sp<MediaSource> OMXCodec::Create(
             componentName = tmp.c_str();
         }
 
+#if USE_INTEL_MDP
+        if (!strncmp(componentName, "CIPVP8Decoder", 13)) {
+            ALOGI("Loading CIPVP8Decoder");
+            return new ThreadedSource(MakeCIPVP8Decoder(source));
+        }
+#endif
+
         if (createEncoder) {
             sp<MediaSource> softwareCodec =
                 InstantiateSoftwareEncoder(componentName, source, meta);
-- 
1.7.9

