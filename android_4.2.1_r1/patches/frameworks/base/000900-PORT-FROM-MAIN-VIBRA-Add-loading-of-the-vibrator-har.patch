From 04be1835caaa5698f9821f834f8fa420925fc663 Mon Sep 17 00:00:00 2001
From: Vincent Becker <vincentx.becker@intel.com>
Date: Fri, 10 Aug 2012 14:17:33 +0200
Subject: [PATCH 009/277] [PORT FROM MAIN] [VIBRA] Add loading of the vibrator hardware module.

BZ: 49760

Vibrator HAL is now formed of two hardware modules : one is the
default AOSP and the other is the Intel vendor implementation.
The vendor implementation will be loaded prior to the default one.
For that, the vibrator service has to load the module before
registering itself to the JNI.

Change-Id: Id26f54bd4431ef67de544d20eeebba006c74db68
Orig-Change-Id: Id7b1844f043a05dfb58e7d2eda313c0419664fed
JB-integ-Change-Id: I4f01250dee58bb8dffc61c3920957fd4b46fcf1b
Signed-off-by: Vincent Becker <vincentx.becker@intel.com>
Reviewed-on: http://android.intel.com:8080/75593
Reviewed-by: lab_cactus <lab_cactus@intel.com>
Reviewed-by: Yao, Yong <yong.yao@intel.com>
Tested-by: Barthes, FabienX <fabienx.barthes@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
---
 .../jni/com_android_server_VibratorService.cpp     |   37 +++++++++++++++-----
 1 files changed, 28 insertions(+), 9 deletions(-)

diff --git a/services/jni/com_android_server_VibratorService.cpp b/services/jni/com_android_server_VibratorService.cpp
index 2b3f74a..43f4ecc 100644
--- a/services/jni/com_android_server_VibratorService.cpp
+++ b/services/jni/com_android_server_VibratorService.cpp
@@ -22,40 +22,59 @@
 
 #include <utils/misc.h>
 #include <utils/Log.h>
-#include <hardware_legacy/vibrator.h>
+#include <hardware/vibrator.h>
 
 #include <stdio.h>
+#include <assert.h>
 
-namespace android
+namespace android {
+
+static struct vibrator_module *gVibraModule;
+
+static void vibratorControlInit()
 {
+    assert(!gVibraModule);
+    int err;
+
+    err = hw_get_module(VIBRATOR_HARDWARE_MODULE_ID, (hw_module_t const**)&gVibraModule);
+
+    if (err) {
+      ALOGE("Couldn't load %s module (%s)", VIBRATOR_HARDWARE_MODULE_ID, strerror(-err));
+    }
+}
 
 static jboolean vibratorExists(JNIEnv *env, jobject clazz)
 {
-    return vibrator_exists() > 0 ? JNI_TRUE : JNI_FALSE;
+    return (gVibraModule && gVibraModule->vibrator_exists() > 0) ? JNI_TRUE : JNI_FALSE;
 }
 
 static void vibratorOn(JNIEnv *env, jobject clazz, jlong timeout_ms)
 {
-    // ALOGI("vibratorOn\n");
-    vibrator_on(timeout_ms);
+    if (gVibraModule) {
+        gVibraModule->vibrator_on(timeout_ms);
+    }
 }
 
 static void vibratorOff(JNIEnv *env, jobject clazz)
 {
-    // ALOGI("vibratorOff\n");
-    vibrator_off();
+    if (gVibraModule) {
+        gVibraModule->vibrator_off();
+    }
 }
 
 static JNINativeMethod method_table[] = {
     { "vibratorExists", "()Z", (void*)vibratorExists },
     { "vibratorOn", "(J)V", (void*)vibratorOn },
-    { "vibratorOff", "()V", (void*)vibratorOff }
+    { "vibratorOff", "()V", (void*)vibratorOff },
 };
 
 int register_android_server_VibratorService(JNIEnv *env)
 {
+    // Load vibrator hardware module
+    vibratorControlInit();
+
     return jniRegisterNativeMethods(env, "com/android/server/VibratorService",
             method_table, NELEM(method_table));
 }
 
-};
+}; // namespace android
-- 
1.7.4.1

