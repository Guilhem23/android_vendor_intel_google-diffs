From 5f5ff7a9ac027571679dc26ddd4058761676c5b7 Mon Sep 17 00:00:00 2001
From: Vincent Becker <vincentx.becker@intel.com>
Date: Mon, 15 Oct 2012 13:43:40 +0200
Subject: [PATCH 16/49] [PORT FROM MAIN] [AUDIO] Add FM source and device in
 audio policy

BZ: 61505

Add to the base policy the source AUDIO_SOURCE_FM associated
to the device DEVICE_IN_FM_RECORD..

Change-Id: Ief0350e8f3feaf0abd60fb036e03e9709311de9a
Origin-Change-Id: I5c03520914de7293f5359fb7f0f6ba92c00797ef
Signed-off-by: Vincent Becker <vincentx.becker@intel.com>
Reviewed-on: http://android.intel.com:8080/78829
Reviewed-by: Yao, Yong <yong.yao@intel.com>
Tested-by: Barthes, FabienX <fabienx.barthes@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
---
 audio/AudioPolicyManagerBase.cpp            |   11 +++++++++++
 include/hardware_legacy/AudioSystemLegacy.h |   14 +++++++++++---
 2 files changed, 22 insertions(+), 3 deletions(-)

diff --git a/audio/AudioPolicyManagerBase.cpp b/audio/AudioPolicyManagerBase.cpp
index 2614683..7b9fb96 100644
--- a/audio/AudioPolicyManagerBase.cpp
+++ b/audio/AudioPolicyManagerBase.cpp
@@ -2247,6 +2247,11 @@ audio_devices_t AudioPolicyManagerBase::getDeviceForStrategy(routing_strategy st
     case STRATEGY_MEDIA: {
 
         uint32_t device2 = 0;
+
+                if(mForceUse[AudioSystem::FOR_MEDIA] == AudioSystem::FORCE_SPEAKER) {
+            LOGV("getDeviceForStrategy() Out. strategy: MEDIA, device: SPEAKER for forceuse.");
+            return AUDIO_DEVICE_OUT_SPEAKER;
+        }
         if (mHasA2dp && (mForceUse[AudioSystem::FOR_MEDIA] != AudioSystem::FORCE_NO_BT_A2DP) &&
                 (getA2dpOutput() != 0) && !mA2dpSuspended) {
             device2 = mAvailableOutputDevices & AudioSystem::DEVICE_OUT_BLUETOOTH_A2DP;
@@ -2521,6 +2526,11 @@ audio_devices_t AudioPolicyManagerBase::getDeviceForInputSource(int inputSource)
             device = AUDIO_DEVICE_IN_REMOTE_SUBMIX;
         }
         break;
+    case AUDIO_SOURCE_FM:
+        if (mAvailableInputDevices & AudioSystem::DEVICE_IN_FM_RECORD) {
+            device = AudioSystem::DEVICE_IN_FM_RECORD;
+        }
+        break;
     default:
         ALOGW("getDeviceForInputSource() invalid input source %d", inputSource);
         break;
@@ -3454,6 +3464,7 @@ const struct StringToEnum sDeviceNameToEnumTable[] = {
     STRING_TO_ENUM(AUDIO_DEVICE_IN_ANLG_DOCK_HEADSET),
     STRING_TO_ENUM(AUDIO_DEVICE_IN_DGTL_DOCK_HEADSET),
     STRING_TO_ENUM(AUDIO_DEVICE_IN_USB_ACCESSORY),
+    STRING_TO_ENUM(AUDIO_DEVICE_IN_FM_RECORD),
 };
 
 const struct StringToEnum sFlagNameToEnumTable[] = {
diff --git a/include/hardware_legacy/AudioSystemLegacy.h b/include/hardware_legacy/AudioSystemLegacy.h
index 4e5b99f..6a69be4 100644
--- a/include/hardware_legacy/AudioSystemLegacy.h
+++ b/include/hardware_legacy/AudioSystemLegacy.h
@@ -61,8 +61,8 @@ enum audio_source {
     AUDIO_SOURCE_CAMCORDER = 5,
     AUDIO_SOURCE_VOICE_RECOGNITION = 6,
     AUDIO_SOURCE_VOICE_COMMUNICATION = 7,
-    AUDIO_SOURCE_MAX = AUDIO_SOURCE_VOICE_COMMUNICATION,
-
+    AUDIO_SOURCE_FM = 8,
+    AUDIO_SOURCE_MAX = AUDIO_SOURCE_FM,
     AUDIO_SOURCE_LIST_END  // must be last - used to validate audio source type
 };
 
@@ -270,11 +270,19 @@ public:
         DEVICE_IN_AUX_DIGITAL = AUDIO_DEVICE_IN_AUX_DIGITAL,
         DEVICE_IN_VOICE_CALL = AUDIO_DEVICE_IN_VOICE_CALL,
         DEVICE_IN_BACK_MIC = AUDIO_DEVICE_IN_BACK_MIC,
+        DEVICE_IN_FM_RECORD = AUDIO_DEVICE_IN_FM_RECORD,
         DEVICE_IN_DEFAULT = AUDIO_DEVICE_IN_DEFAULT,
 
         DEVICE_IN_ALL = (DEVICE_IN_COMMUNICATION | DEVICE_IN_AMBIENT | DEVICE_IN_BUILTIN_MIC |
                 DEVICE_IN_BLUETOOTH_SCO_HEADSET | DEVICE_IN_WIRED_HEADSET | DEVICE_IN_AUX_DIGITAL |
-                DEVICE_IN_VOICE_CALL | DEVICE_IN_BACK_MIC | DEVICE_IN_DEFAULT)
+                DEVICE_IN_VOICE_CALL | DEVICE_IN_BACK_MIC | DEVICE_IN_FM_RECORD | DEVICE_IN_DEFAULT)
+
+        //devices not supported for codec offload
+        DEVICE_OUT_NON_OFFLOAD = (DEVICE_OUT_ALL & ~(DEVICE_OUT_SPEAKER |
+                                  DEVICE_OUT_WIRED_HEADSET |
+                                  DEVICE_OUT_WIRED_HEADPHONE |
+                                  DEVICE_OUT_EARPIECE))
+
     };
 
     // request to open a direct output with getOutput() (by opposition to sharing an output with other AudioTracks)
-- 
1.7.9

