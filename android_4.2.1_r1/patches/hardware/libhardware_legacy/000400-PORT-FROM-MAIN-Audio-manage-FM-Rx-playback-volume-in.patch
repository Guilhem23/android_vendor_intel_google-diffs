From 122ce9113efb0d769c2e0ebbea587597d795b049 Mon Sep 17 00:00:00 2001
From: jbelloua <jean-marie.bellouard@intel.com>
Date: Tue, 25 Sep 2012 18:23:55 +0200
Subject: [PATCH 04/49] [PORT FROM MAIN] [Audio] manage FM Rx playback volume
 in Audio HAL

BZ: 46452

Add new stream type and handle FM RX volume
Volume update for FM RX playback is done in derived class of policy

Change-Id: I1bb6a3b3fc29d0779d0b7985101676ea26d32a7e
Orig-Change-Id: I3e8649aaf5cdfff5a04fa77a1ce39c42e729f7ad
Signed-off-by: jbelloua <jean-marie.bellouard@intel.com>
Reviewed-on: http://android.intel.com:8080/75602
Reviewed-by: Barthes, FabienX <fabienx.barthes@intel.com>
Tested-by: Barthes, FabienX <fabienx.barthes@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
---
 audio/AudioPolicyCompatClient.cpp                |    5 +++++
 audio/AudioPolicyCompatClient.h                  |    1 +
 audio/AudioPolicyManagerBase.cpp                 |   10 ++++++++--
 audio/audio_hw_hal.cpp                           |    7 +++++++
 include/hardware_legacy/AudioHardwareInterface.h |    3 +++
 include/hardware_legacy/AudioPolicyInterface.h   |    3 +++
 include/hardware_legacy/AudioPolicyManagerBase.h |    2 +-
 include/hardware_legacy/AudioSystemLegacy.h      |    1 +
 8 files changed, 29 insertions(+), 3 deletions(-)

diff --git a/audio/AudioPolicyCompatClient.cpp b/audio/AudioPolicyCompatClient.cpp
index 4c80428..23837cd 100644
--- a/audio/AudioPolicyCompatClient.cpp
+++ b/audio/AudioPolicyCompatClient.cpp
@@ -145,4 +145,9 @@ status_t AudioPolicyCompatClient::setVoiceVolume(float volume, int delayMs)
     return mServiceOps->set_voice_volume(mService, volume, delayMs);
 }
 
+status_t AudioPolicyCompatClient::setFmRxVolume(float volume, int delayMs)
+{
+    return mServiceOps->set_fm_rx_volume(mService, volume, delayMs);
+}
+
 }; // namespace android_audio_legacy
diff --git a/audio/AudioPolicyCompatClient.h b/audio/AudioPolicyCompatClient.h
index 5399c8c..74aed76 100644
--- a/audio/AudioPolicyCompatClient.h
+++ b/audio/AudioPolicyCompatClient.h
@@ -71,6 +71,7 @@ public:
     virtual status_t startTone(ToneGenerator::tone_type tone, AudioSystem::stream_type stream);
     virtual status_t stopTone();
     virtual status_t setVoiceVolume(float volume, int delayMs = 0);
+    virtual status_t setFmRxVolume(float volume, int delayMs = 0);
 
 private:
     struct audio_policy_service_ops* mServiceOps;
diff --git a/audio/AudioPolicyManagerBase.cpp b/audio/AudioPolicyManagerBase.cpp
index 2c8ca7d..98b298f 100644
--- a/audio/AudioPolicyManagerBase.cpp
+++ b/audio/AudioPolicyManagerBase.cpp
@@ -2056,6 +2056,7 @@ AudioPolicyManagerBase::routing_strategy AudioPolicyManagerBase::getStrategy(
         // while key clicks are played produces a poor result
     case AudioSystem::TTS:
     case AudioSystem::MUSIC:
+    case AudioSystem::FM_RX:
         return STRATEGY_MEDIA;
     case AudioSystem::ENFORCED_AUDIBLE:
         return STRATEGY_ENFORCED_AUDIBLE;
@@ -2408,8 +2409,8 @@ uint32_t AudioPolicyManagerBase::setOutputDevice(audio_io_handle_t output,
     param.addInt(String8(AudioParameter::keyRouting), (int)device);
     mpClientInterface->setParameters(output, param.toString(), delayMs);
 
-    // update stream volumes according to new device
-    applyStreamVolumes(output, device, delayMs);
+    // update stream volumes according to new device, force the reevaluation in case of FM
+    applyStreamVolumes(output, device, delayMs, mFmMode == MODE_FM_ON);
 
     return muteWaitMs;
 }
@@ -2700,6 +2701,11 @@ const AudioPolicyManagerBase::VolumeCurvePoint
         sSpeakerMediaVolumeCurve, // DEVICE_CATEGORY_SPEAKER
         sDefaultMediaVolumeCurve  // DEVICE_CATEGORY_EARPIECE
     },
+    { // AUDIO_STREAM_FM_RX
+        sDefaultMediaVolumeCurve, // DEVICE_CATEGORY_HEADSET
+        sSpeakerMediaVolumeCurve, // DEVICE_CATEGORY_SPEAKER
+        sDefaultMediaVolumeCurve  // DEVICE_CATEGORY_EARPIECE
+    },
 };
 
 void AudioPolicyManagerBase::initializeVolumeCurves()
diff --git a/audio/audio_hw_hal.cpp b/audio/audio_hw_hal.cpp
index cc81ba0..b462d61 100644
--- a/audio/audio_hw_hal.cpp
+++ b/audio/audio_hw_hal.cpp
@@ -428,6 +428,12 @@ static int adev_set_voice_volume(struct audio_hw_device *dev, float volume)
     return ladev->hwif->setVoiceVolume(volume);
 }
 
+static int adev_set_fm_rx_volume(struct audio_hw_device *dev, float volume)
+{
+    struct legacy_audio_device *ladev = to_ladev(dev);
+    return ladev->hwif->setFmRxVolume(volume);
+}
+
 static int adev_set_master_volume(struct audio_hw_device *dev, float volume)
 {
     struct legacy_audio_device *ladev = to_ladev(dev);
@@ -658,6 +664,7 @@ static int legacy_adev_open(const hw_module_t* module, const char* name,
 
     ladev->device.init_check = adev_init_check;
     ladev->device.set_voice_volume = adev_set_voice_volume;
+    ladev->device.set_fm_rx_volume = adev_set_fm_rx_volume;
     ladev->device.set_master_volume = adev_set_master_volume;
     ladev->device.get_master_volume = adev_get_master_volume;
     ladev->device.set_mode = adev_set_mode;
diff --git a/include/hardware_legacy/AudioHardwareInterface.h b/include/hardware_legacy/AudioHardwareInterface.h
index b466000..20161c3 100644
--- a/include/hardware_legacy/AudioHardwareInterface.h
+++ b/include/hardware_legacy/AudioHardwareInterface.h
@@ -209,6 +209,9 @@ public:
     /** set the audio volume of a voice call. Range is between 0.0 and 1.0 */
     virtual status_t    setVoiceVolume(float volume) = 0;
 
+    /** set the audio volume of fm rx playback. Range is between 0.0 and 1.0 */
+    virtual status_t    setFmRxVolume(float volume) = 0;
+
     /**
      * set the audio volume for all audio activities other than voice call.
      * Range between 0.0 and 1.0. If any value other than NO_ERROR is returned,
diff --git a/include/hardware_legacy/AudioPolicyInterface.h b/include/hardware_legacy/AudioPolicyInterface.h
index d63979b..3e5e31c 100644
--- a/include/hardware_legacy/AudioPolicyInterface.h
+++ b/include/hardware_legacy/AudioPolicyInterface.h
@@ -244,6 +244,9 @@ public:
     // set down link audio volume.
     virtual status_t setVoiceVolume(float volume, int delayMs = 0) = 0;
 
+    // set fm rx playback audio volume.
+    virtual status_t setFmRxVolume(float volume, int delayMs = 0) = 0;
+
     // move effect to the specified output
     virtual status_t moveEffects(int session,
                                      audio_io_handle_t srcOutput,
diff --git a/include/hardware_legacy/AudioPolicyManagerBase.h b/include/hardware_legacy/AudioPolicyManagerBase.h
index 65a81b6..0ce2836 100644
--- a/include/hardware_legacy/AudioPolicyManagerBase.h
+++ b/include/hardware_legacy/AudioPolicyManagerBase.h
@@ -367,7 +367,7 @@ protected:
         virtual float computeVolume(int stream, int index, audio_io_handle_t output, audio_devices_t device);
 
         // check that volume change is permitted, compute and send new volume to audio hardware
-        status_t checkAndSetVolume(int stream, int index, audio_io_handle_t output, audio_devices_t device, int delayMs = 0, bool force = false);
+        virtual status_t checkAndSetVolume(int stream, int index, audio_io_handle_t output, audio_devices_t device, int delayMs = 0, bool force = false);
 
         // apply all stream volumes to the specified output and device
         void applyStreamVolumes(audio_io_handle_t output, audio_devices_t device, int delayMs = 0, bool force = false);
diff --git a/include/hardware_legacy/AudioSystemLegacy.h b/include/hardware_legacy/AudioSystemLegacy.h
index 6296b8b..a8c21ba 100644
--- a/include/hardware_legacy/AudioSystemLegacy.h
+++ b/include/hardware_legacy/AudioSystemLegacy.h
@@ -81,6 +81,7 @@ public:
         ENFORCED_AUDIBLE = 7, // Sounds that cannot be muted by user and must be routed to speaker
         DTMF             = 8,
         TTS              = 9,
+        FM_RX            = 10,
         NUM_STREAM_TYPES
     };
 
-- 
1.7.9

