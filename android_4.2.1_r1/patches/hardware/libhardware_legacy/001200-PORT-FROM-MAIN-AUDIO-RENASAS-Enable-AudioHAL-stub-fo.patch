From cb598859ba02776c0fd9b7317721eb0bb36f4b58 Mon Sep 17 00:00:00 2001
From: Francois Gaffie <francois.gaffie@intel.com>
Date: Tue, 23 Oct 2012 16:24:30 +0200
Subject: [PATCH 12/49] [PORT FROM MAIN] [AUDIO][RENASAS] Enable AudioHAL stub
 for camp

BZ: 66390

This patch activates the AudioHAL stub.
It emulates a HW consumption/production of audio data by
sleeping and sending zeroed buffer.

Change-Id: Ie186a7ef1ac573d7f256bbfa5f55ce6a01d3c8a9
Origin-Change-Id: Ibd3748c9aa92da9aaea0385e0697fa93bd9c1285
Signed-off-by: Francois Gaffie <francois.gaffie@intel.com>
Reviewed-on: http://android.intel.com:8080/77383
Reviewed-by: Barthes, FabienX <fabienx.barthes@intel.com>
Tested-by: Barthes, FabienX <fabienx.barthes@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
---
 audio/Android.mk                 |   21 +++++++++++++++++++--
 audio/AudioHardwareGeneric.h     |    7 ++++++-
 audio/AudioHardwareInterface.cpp |   16 ++++++++++++++++
 audio/AudioHardwareStub.cpp      |    4 ++++
 audio/AudioHardwareStub.h        |    5 +++++
 5 files changed, 50 insertions(+), 3 deletions(-)

diff --git a/audio/Android.mk b/audio/Android.mk
index a69b9cd..adf6b14 100644
--- a/audio/Android.mk
+++ b/audio/Android.mk
@@ -76,5 +76,22 @@ include $(BUILD_SHARED_LIBRARY)
 #
 #include $(BUILD_SHARED_LIBRARY)
 
-#    AudioHardwareGeneric.cpp \
-#    AudioHardwareStub.cpp \
+include $(CLEAR_VARS)
+
+LOCAL_SRC_FILES := \
+    AudioHardwareInterface.cpp \
+    audio_hw_hal.cpp \
+    AudioHardwareStub.cpp
+
+
+LOCAL_MODULE := audio.primary.default
+LOCAL_MODULE_PATH := $(TARGET_OUT_SHARED_LIBRARIES)/hw
+LOCAL_MODULE_TAGS := optional
+TARGET_ERROR_FLAGS += -Wno-non-virtual-dtor
+LOCAL_STATIC_LIBRARIES := libmedia_helper
+LOCAL_SHARED_LIBRARIES := \
+    libcutils \
+    libutils \
+    libhardware_legacy
+
+include $(BUILD_SHARED_LIBRARY)
diff --git a/audio/AudioHardwareGeneric.h b/audio/AudioHardwareGeneric.h
index 7b41e95..b0edb5a 100644
--- a/audio/AudioHardwareGeneric.h
+++ b/audio/AudioHardwareGeneric.h
@@ -92,7 +92,8 @@ public:
     virtual status_t    setParameters(const String8& keyValuePairs);
     virtual String8     getParameters(const String8& keys);
     virtual unsigned int  getInputFramesLost() const { return 0; }
-
+    virtual status_t addAudioEffect(effect_handle_t effect) { return NO_ERROR; }
+    virtual status_t removeAudioEffect(effect_handle_t effect) { return NO_ERROR; }
 private:
     AudioHardwareGeneric *mAudioHardware;
     Mutex   mLock;
@@ -134,6 +135,10 @@ public:
 
             void            closeOutputStream(AudioStreamOutGeneric* out);
             void            closeInputStream(AudioStreamInGeneric* in);
+
+    /** set the audio volume of fm rx playback. Range is between 0.0 and 1.0 */
+    virtual status_t    setFmRxVolume(float volume) { return NO_ERROR; }
+
 protected:
     virtual status_t        dump(int fd, const Vector<String16>& args);
 
diff --git a/audio/AudioHardwareInterface.cpp b/audio/AudioHardwareInterface.cpp
index 60cce27..372501c 100644
--- a/audio/AudioHardwareInterface.cpp
+++ b/audio/AudioHardwareInterface.cpp
@@ -81,6 +81,8 @@ AudioStreamIn::~AudioStreamIn() {}
 AudioHardwareBase::AudioHardwareBase()
 {
     mMode = 0;
+    mFmRxMode = AudioSystem::MODE_FM_OFF;
+    mPrevFmRxMode = AudioSystem::MODE_FM_OFF;
 }
 
 status_t AudioHardwareBase::setMode(int mode)
@@ -96,6 +98,20 @@ status_t AudioHardwareBase::setMode(int mode)
     return NO_ERROR;
 }
 
+status_t AudioHardwareBase::setFmRxMode(int mode)
+{
+#if LOG_ROUTING_CALLS
+    ALOGD("setFmRxMode(%s)", (mode == AudioSystem::MODE_FM_ON) ? "FM ON" : "FM OFF");
+#endif
+    if ((mode < 0) || (mode >= AudioSystem::MODE_FM_NUM))
+        return BAD_VALUE;
+    if (mFmRxMode == mode)
+        return ALREADY_EXISTS;
+    mPrevFmRxMode = mFmRxMode;
+    mFmRxMode = mode;
+    return NO_ERROR;
+}
+
 // default implementation
 status_t AudioHardwareBase::setParameters(const String8& keyValuePairs)
 {
diff --git a/audio/AudioHardwareStub.cpp b/audio/AudioHardwareStub.cpp
index 70a8309..3a2f71f 100644
--- a/audio/AudioHardwareStub.cpp
+++ b/audio/AudioHardwareStub.cpp
@@ -204,6 +204,10 @@ String8 AudioStreamInStub::getParameters(const String8& keys)
     return param.toString();
 }
 
+
+extern "C" AudioHardwareInterface* createAudioHardware(void) {
+     return new AudioHardwareStub();
+}
 // ----------------------------------------------------------------------------
 
 }; // namespace android
diff --git a/audio/AudioHardwareStub.h b/audio/AudioHardwareStub.h
index 0858f37..2dc7a77 100644
--- a/audio/AudioHardwareStub.h
+++ b/audio/AudioHardwareStub.h
@@ -58,6 +58,8 @@ public:
     virtual status_t    setParameters(const String8& keyValuePairs) { return NO_ERROR;}
     virtual String8     getParameters(const String8& keys);
     virtual unsigned int  getInputFramesLost() const { return 0; }
+    virtual status_t addAudioEffect(effect_handle_t effect) { return NO_ERROR; }
+    virtual status_t removeAudioEffect(effect_handle_t effect) { return NO_ERROR; }
 };
 
 class AudioHardwareStub : public  AudioHardwareBase
@@ -91,6 +93,9 @@ public:
                                 AudioSystem::audio_in_acoustics acoustics);
     virtual    void        closeInputStream(AudioStreamIn* in);
 
+    /** set the audio volume of fm rx playback. Range is between 0.0 and 1.0 */
+    virtual status_t    setFmRxVolume(float volume) { return NO_ERROR; }
+
 protected:
     virtual status_t    dump(int fd, const Vector<String16>& args);
 
-- 
1.7.9

