From 9e9a5996e693608fd825474da366e301563a7208 Mon Sep 17 00:00:00 2001
From: jbelloua <jean-marie.bellouard@intel.com>
Date: Tue, 25 Sep 2012 18:21:51 +0200
Subject: [PATCH 04/18] [PORT FROM MAIN] [Audio] manage FM Rx playback volume
 in Audio framework

BZ: 46452

Add new interface to handle fm volume

Change-Id: I59ec73a29ca24566a8af2c37c05006ffda093eea
Orig-Change-Id: I403d3ca5fbd98decd0eb69007796c04158906547
Signed-off-by: jbelloua <jean-marie.bellouard@intel.com>
Reviewed-on: http://android.intel.com:8080/75603
Reviewed-by: lab_cactus <lab_cactus@intel.com>
Reviewed-by: Yao, Yong <yong.yao@intel.com>
Tested-by: Barthes, FabienX <fabienx.barthes@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
---
 include/hardware/audio.h        |    3 +++
 include/hardware/audio_policy.h |    5 +++++
 modules/audio/audio_hw.c        |    6 ++++++
 3 files changed, 14 insertions(+), 0 deletions(-)

diff --git a/include/hardware/audio.h b/include/hardware/audio.h
index 573a78d..73edb2b 100644
--- a/include/hardware/audio.h
+++ b/include/hardware/audio.h
@@ -358,6 +358,9 @@ struct audio_hw_device {
     /** set the audio volume of a voice call. Range is between 0.0 and 1.0 */
     int (*set_voice_volume)(struct audio_hw_device *dev, float volume);
 
+    /** set fm rx playback volume. Range is between 0.0 and 1.0 */
+    int (*set_fm_rx_volume)(struct audio_hw_device *dev, float volume);
+
     /**
      * set the audio volume for all audio activities other than voice call.
      * Range between 0.0 and 1.0. If any value other than 0 is returned,
diff --git a/include/hardware/audio_policy.h b/include/hardware/audio_policy.h
index dde98b8..aa4514f 100644
--- a/include/hardware/audio_policy.h
+++ b/include/hardware/audio_policy.h
@@ -363,6 +363,11 @@ struct audio_policy_service_ops {
                             float volume,
                             int delay_ms);
 
+    /* set fm rx playback audio volume. */
+    int (*set_fm_rx_volume)(void *service,
+                            float volume,
+                            int delay_ms);
+
     /* move effect to the specified output */
     int (*move_effects)(void *service,
                         int session,
diff --git a/modules/audio/audio_hw.c b/modules/audio/audio_hw.c
index 3051519..cd860ad 100644
--- a/modules/audio/audio_hw.c
+++ b/modules/audio/audio_hw.c
@@ -282,6 +282,11 @@ static int adev_set_voice_volume(struct audio_hw_device *dev, float volume)
     return -ENOSYS;
 }
 
+static int adev_set_fm_rx_volume(struct audio_hw_device *dev, float volume)
+{
+    return -ENOSYS;
+}
+
 static int adev_set_master_volume(struct audio_hw_device *dev, float volume)
 {
     return -ENOSYS;
@@ -399,6 +404,7 @@ static int adev_open(const hw_module_t* module, const char* name,
 
     adev->device.init_check = adev_init_check;
     adev->device.set_voice_volume = adev_set_voice_volume;
+    adev->device.set_fm_rx_volume = adev_set_fm_rx_volume;
     adev->device.set_master_volume = adev_set_master_volume;
     adev->device.get_master_volume = adev_get_master_volume;
     adev->device.set_master_mute = adev_set_master_mute;
-- 
1.7.9

