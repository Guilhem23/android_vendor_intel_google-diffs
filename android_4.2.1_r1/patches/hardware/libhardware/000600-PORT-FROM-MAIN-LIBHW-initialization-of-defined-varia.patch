From 0a9bd3f071d74b2a866d7a9c40f6f2666e85bd90 Mon Sep 17 00:00:00 2001
From: "Andrei V. FOMITCHEV" <andreix.fomitchev@intel.com>
Date: Fri, 19 Oct 2012 16:26:33 +0200
Subject: [PATCH 06/18] [PORT FROM MAIN] [LIBHW]initialization of defined
 variables

BZ: 63404

Because in functions of hardware.c, the variables are
not initialized when they are defined, valgrind indicates
that these variables are used as uninitialised! So,
the purpose of this patch is initialization of varaibles.
In the same way, the patch fixes the compilation warning
(unused variable).

Change-Id: Icfadf6e2fe2206d05a9c48682b10119e5e4d4fdb
Origin-Change-Id: I152fbc612613076cfb2a92c482e2d23581586e9c
Signed-off-by: Andrei V. FOMITCHEV <andreix.fomitchev@intel.com>
Reviewed-on: http://android.intel.com:8080/76863
Reviewed-by: Barthes, FabienX <fabienx.barthes@intel.com>
Reviewed-by: Yao, Yong <yong.yao@intel.com>
Tested-by: Barthes, FabienX <fabienx.barthes@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
---
 hardware.c |   17 ++++++++---------
 1 files changed, 8 insertions(+), 9 deletions(-)

diff --git a/hardware.c b/hardware.c
index 1f831cb..867a477 100644
--- a/hardware.c
+++ b/hardware.c
@@ -62,9 +62,9 @@ static int load(const char *id,
         const char *path,
         const struct hw_module_t **pHmi)
 {
-    int status;
-    void *handle;
-    struct hw_module_t *hmi;
+    int status = -EINVAL;
+    void *handle = NULL;
+    struct hw_module_t *hmi = NULL;
 
     /*
      * load the symbols resolving undefined symbols before
@@ -120,12 +120,11 @@ static int load(const char *id,
 int hw_get_module_by_class(const char *class_id, const char *inst,
                            const struct hw_module_t **module)
 {
-    int status;
-    int i;
-    const struct hw_module_t *hmi = NULL;
-    char prop[PATH_MAX];
-    char path[PATH_MAX];
-    char name[PATH_MAX];
+    int status = -EINVAL;
+    int i = 0;
+    char prop[PATH_MAX] = {0};
+    char path[PATH_MAX] = {0};
+    char name[PATH_MAX] = {0};
 
     if (inst)
         snprintf(name, PATH_MAX, "%s.%s", class_id, inst);
-- 
1.7.9

