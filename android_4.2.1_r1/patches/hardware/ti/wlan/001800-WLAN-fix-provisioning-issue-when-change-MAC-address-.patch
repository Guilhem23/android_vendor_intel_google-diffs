From 81a4a672892bd807dee3828790a32148207d0821 Mon Sep 17 00:00:00 2001
From: "jonathan.de.cesco" <jonathan.de.cesco@intel.com>
Date: Thu, 9 Aug 2012 14:22:04 +0200
Subject: [PATCH 18/78] WLAN: fix provisioning issue when change MAC address
 without calibration

BZ: 53052

unbind/bind sequence was move just after calibration to avoid unnecessary
unbind/bind that sometime cause failure. But one case was forget, when
only updating MAC address without previous calibration. In this case,
the unbind / bind of the driver is no more done. So the the new nvs file
is not taking into accout till rebooting the device.

Fix this issue by moving back the unbind/bind sequence at the end of
provisioning, but enable a trigger to start it only when calibration is
done and/or MAC updated.

Change-Id: I9c833f5d1287071c0c095256e3f63c607447e275
Orig-Change-Id: I735e402d5b31fe49b34972fb2d3c8ef31f65fb32
Signed-off-by: Honore Tricot <honorex.tricot@intel.com>
Reviewed-on: http://android.intel.com:8080/63036
Reviewed-by: Champciaux, Nicolas <nicolas.champciaux@intel.com>
Tested-by: Champciaux, Nicolas <nicolas.champciaux@intel.com>
Reviewed-by: buildbot <buildbot@intel.com>
Tested-by: buildbot <buildbot@intel.com>
Reviewed-on: http://android.intel.com:8080/77975
Reviewed-by: Li, XiaojingX <xiaojingx.li@intel.com>
Tested-by: Li, XiaojingX <xiaojingx.li@intel.com>
---
 wlan_prov/wlan_provisioning.c |   40 +++++++++++++++++++++++-----------------
 1 files changed, 23 insertions(+), 17 deletions(-)

diff --git a/wlan_prov/wlan_provisioning.c b/wlan_prov/wlan_provisioning.c
index 71422d3..b0ef079 100644
--- a/wlan_prov/wlan_provisioning.c
+++ b/wlan_prov/wlan_provisioning.c
@@ -237,6 +237,7 @@ int main(int argc, char **argv)
 	unsigned char *ChaabiMacAddr = NULL;
 	int res = 0;
 	char device_id[64];
+	int unbind_bind_request = 0;
 
 	/* Check parameters */
 	if (argc != 1) {
@@ -262,6 +263,7 @@ int main(int argc, char **argv)
 
 	if (!nvsBinFile) {
 		LOGI("run calibration");
+		unbind_bind_request = 1;
 		if (wifi_calibration()) {
 			res =  -2;
 			goto end;
@@ -307,28 +309,32 @@ int main(int argc, char **argv)
 			res =  -4;
 			goto end;
 		}
+		LOGI("MAC updated");
+		unbind_bind_request = 1;
 	}
 
-	/*
-	 * If we are not allowed to bind/unbind the driver, the mac address as
-	 * well as the new configuration firmware (.nvs) will not be taken into
-	 * account. In that case, the reboot is required after flashing for the
-	 * time the board.
-	 */
-	if (!sdio_get_pci_id(SYSFS_SDIO_DEVICES_PATH, device_id)) {
-		unbind_wlan_sdio_drv(WLAN_SDIO_BUS_PATH, device_id);
-		bind_wlan_sdio_drv(WLAN_SDIO_BUS_PATH, device_id);
-	} else {
+end:
+
+	if (unbind_bind_request) {
+		LOGI("unbind/bind the driver");
 		/*
-		 * Rebooting the board: In this level, the NVS was saved. The
-		 * next reboot will be fine since no need to bind/unbind the
-		 * driver.
-		 */
-		goto fatal;
+		* If we are not allowed to bind/unbind the driver, the mac address as
+		* well as the new configuration firmware (.nvs) will not be taken into
+		* account. In that case, the reboot is required after flashing for the
+		* time the board.
+		*/
+		if (sdio_get_pci_id(SYSFS_SDIO_DEVICES_PATH, device_id)
+			|| unbind_wlan_sdio_drv(WLAN_SDIO_BUS_PATH, device_id)
+			|| bind_wlan_sdio_drv(WLAN_SDIO_BUS_PATH, device_id)) {
+			/*
+			* Rebooting the board: In this level, the NVS was saved. The
+			* next reboot will be fine since no need to bind/unbind the
+			* driver.
+			*/
+			goto fatal;
+		}
 	}
 
-end:
-
 	/* Take into acount the new NVS firmware */
 	sync();
 
-- 
1.7.9

