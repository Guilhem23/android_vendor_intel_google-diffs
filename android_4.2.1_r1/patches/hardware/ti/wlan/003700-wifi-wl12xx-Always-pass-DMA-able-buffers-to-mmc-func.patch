From d2baa9cf55e6ebd11465a64168786afbf6d62380 Mon Sep 17 00:00:00 2001
From: Jonathan DE CESCO <jonathan.de.cesco@intel.com>
Date: Mon, 15 Oct 2012 16:07:12 +0200
Subject: [PATCH 37/78] wifi: wl12xx: Always pass DMA-able buffers to mmc
 functions

BZ: 42696

From TI R5 commit: de735e302987fdc8b43f2d8c294250c2bc426298

Some of the mmc drivers initiate DMA transfers with buffers passed from
higher layers. This means that the driver shouldn't ever pass non
DMA-able buffers, such as ones that are unaligned, allocated on the
stack or static.

Fix a couple of calls to the mmc layer in which buffers which weren't
necessarily DMA-able were passed.

Change-Id: Ibbd6225db0cf6801efbacec01189285250c52e1a
Signed-off-by: Jonathan DE CESCO <jonathan.de.cesco@intel.com>
Reported-by: "De Cesco, Jonathan" <jonathanc@ti.com>
Signed-off-by: Ido Yariv <ido@wizery.com>
Signed-off-by: Jonathan DE CESCO <jonathan.de.cesco@intel.com>
Reviewed-on: http://android.intel.com:8080/66506
Reviewed-by: Casasnovas, QuentinX <quentinx.casasnovas@intel.com>
Reviewed-by: Garcia, JeremieX <jeremiex.garcia@intel.com>
Tested-by: Champciaux, Nicolas <nicolas.champciaux@intel.com>
Reviewed-by: buildbot <buildbot@intel.com>
Tested-by: buildbot <buildbot@intel.com>
Reviewed-on: http://android.intel.com:8080/77994
Reviewed-by: Li, XiaojingX <xiaojingx.li@intel.com>
Tested-by: Li, XiaojingX <xiaojingx.li@intel.com>
---
 wl12xx-compat/drivers/net/wireless/wl12xx/boot.c   |   18 +++++++----
 wl12xx-compat/drivers/net/wireless/wl12xx/cmd.c    |    6 +--
 wl12xx-compat/drivers/net/wireless/wl12xx/event.c  |    5 +--
 wl12xx-compat/drivers/net/wireless/wl12xx/io.h     |   10 +++---
 wl12xx-compat/drivers/net/wireless/wl12xx/main.c   |   31 ++++++++++++++++++++
 wl12xx-compat/drivers/net/wireless/wl12xx/rx.c     |   11 ++++---
 wl12xx-compat/drivers/net/wireless/wl12xx/wl12xx.h |    7 +++-
 7 files changed, 63 insertions(+), 25 deletions(-)

diff --git a/wl12xx-compat/drivers/net/wireless/wl12xx/boot.c b/wl12xx-compat/drivers/net/wireless/wl12xx/boot.c
index c872542..c6a32a9 100644
--- a/wl12xx-compat/drivers/net/wireless/wl12xx/boot.c
+++ b/wl12xx-compat/drivers/net/wireless/wl12xx/boot.c
@@ -89,15 +89,19 @@ static void wl1271_parse_fw_ver(struct wl1271 *wl)
 
 static int wl1271_boot_fw_version(struct wl1271 *wl)
 {
-	struct wl1271_static_data static_data;
+	struct wl1271_static_data *static_data;
 	int ret;
 
-	ret = wl1271_read(wl, wl->cmd_box_addr, &static_data,
-			  sizeof(static_data), false);
+	static_data = kmalloc(sizeof(*static_data), GFP_KERNEL);
+	if (!static_data)
+		return -ENOMEM;
+
+	ret = wl1271_read(wl, wl->cmd_box_addr, static_data,
+			  sizeof(*static_data), false);
 	if (ret < 0)
-		return ret;
+		goto out;
 
-	strncpy(wl->chip.fw_ver_str, static_data.fw_version,
+	strncpy(wl->chip.fw_ver_str, static_data->fw_version,
 		sizeof(wl->chip.fw_ver_str));
 
 	/* make sure the string is NULL-terminated */
@@ -105,7 +109,9 @@ static int wl1271_boot_fw_version(struct wl1271 *wl)
 
 	wl1271_parse_fw_ver(wl);
 
-	return 0;
+out:
+	kfree(static_data);
+	return ret;
 }
 
 static int wl1271_boot_upload_firmware_chunk(struct wl1271 *wl, void *buf,
diff --git a/wl12xx-compat/drivers/net/wireless/wl12xx/cmd.c b/wl12xx-compat/drivers/net/wireless/wl12xx/cmd.c
index 9515853..940d190 100644
--- a/wl12xx-compat/drivers/net/wireless/wl12xx/cmd.c
+++ b/wl12xx-compat/drivers/net/wireless/wl12xx/cmd.c
@@ -372,15 +372,13 @@ static int wl1271_cmd_wait_for_event_or_timeout(struct wl1271 *wl, u32 mask,
 		msleep(1);
 
 		/* read from both event fields */
-		ret = wl1271_read(wl, wl->mbox_ptr[0], &events_vector,
-				  sizeof(events_vector), false);
+		ret = wl1271_read32(wl, wl->mbox_ptr[0], &events_vector);
 		if (ret < 0)
 			return ret;
 
 		event = events_vector & mask;
 
-		ret = wl1271_read(wl, wl->mbox_ptr[1], &events_vector,
-				  sizeof(events_vector), false);
+		ret = wl1271_read32(wl, wl->mbox_ptr[1], &events_vector);
 		if (ret < 0)
 			return ret;
 
diff --git a/wl12xx-compat/drivers/net/wireless/wl12xx/event.c b/wl12xx-compat/drivers/net/wireless/wl12xx/event.c
index 9e1003b..f104236 100644
--- a/wl12xx-compat/drivers/net/wireless/wl12xx/event.c
+++ b/wl12xx-compat/drivers/net/wireless/wl12xx/event.c
@@ -324,7 +324,6 @@ int wl1271_event_mbox_config(struct wl1271 *wl)
 
 int wl1271_event_handle(struct wl1271 *wl, u8 mbox_num)
 {
-	struct event_mailbox mbox;
 	int ret;
 
 	wl1271_debug(DEBUG_EVENT, "EVENT on mbox %d", mbox_num);
@@ -333,13 +332,13 @@ int wl1271_event_handle(struct wl1271 *wl, u8 mbox_num)
 		return -EINVAL;
 
 	/* first we read the mbox descriptor */
-	ret = wl1271_read(wl, wl->mbox_ptr[mbox_num], &mbox,
+	ret = wl1271_read(wl, wl->mbox_ptr[mbox_num], wl->mbox,
 			  sizeof(struct event_mailbox), false);
 	if (ret < 0)
 		return ret;
 
 	/* process the descriptor */
-	ret = wl1271_event_process(wl, &mbox);
+	ret = wl1271_event_process(wl, wl->mbox);
 	if (ret < 0)
 		return ret;
 
diff --git a/wl12xx-compat/drivers/net/wireless/wl12xx/io.h b/wl12xx-compat/drivers/net/wireless/wl12xx/io.h
index 38c2023..e9396d2 100644
--- a/wl12xx-compat/drivers/net/wireless/wl12xx/io.h
+++ b/wl12xx-compat/drivers/net/wireless/wl12xx/io.h
@@ -93,13 +93,13 @@ static inline int __must_check wl1271_raw_read32(struct wl1271 *wl, int addr,
 {
 	int ret;
 
-	ret = wl1271_raw_read(wl, addr, &wl->buffer_32, sizeof(wl->buffer_32),
+	ret = wl1271_raw_read(wl, addr, wl->buffer_32, sizeof(*wl->buffer_32),
 			      false);
 	if (ret < 0)
 		goto out;
 
 	if (val)
-		*val = le32_to_cpu(wl->buffer_32);
+		*val = le32_to_cpu(*wl->buffer_32);
 
 out:
 	return ret;
@@ -108,9 +108,9 @@ out:
 static inline int __must_check wl1271_raw_write32(struct wl1271 *wl, int addr,
 						  u32 val)
 {
-	wl->buffer_32 = cpu_to_le32(val);
-	return wl1271_raw_write(wl, addr, &wl->buffer_32,
-				sizeof(wl->buffer_32), false);
+	*wl->buffer_32 = cpu_to_le32(val);
+	return wl1271_raw_write(wl, addr, wl->buffer_32,
+				sizeof(*wl->buffer_32), false);
 }
 
 /* Translated target IO */
diff --git a/wl12xx-compat/drivers/net/wireless/wl12xx/main.c b/wl12xx-compat/drivers/net/wireless/wl12xx/main.c
index a0331d2..0559121 100644
--- a/wl12xx-compat/drivers/net/wireless/wl12xx/main.c
+++ b/wl12xx-compat/drivers/net/wireless/wl12xx/main.c
@@ -6321,8 +6321,36 @@ static struct ieee80211_hw *wl1271_alloc_hw(void)
 		goto err_dummy_packet;
 	}
 
+	wl->rx_mem_pool_addr = kmalloc(sizeof(*wl->rx_mem_pool_addr),
+				       GFP_KERNEL);
+	if (!wl->rx_mem_pool_addr) {
+		ret = -ENOMEM;
+		goto err_fwlog;
+	}
+
+	wl->mbox = kmalloc(sizeof(*wl->mbox), GFP_KERNEL);
+	if (!wl->mbox) {
+		ret = -ENOMEM;
+		goto err_pool_addr;
+	}
+
+	wl->buffer_32 = kmalloc(sizeof(*wl->buffer_32), GFP_KERNEL);
+	if (!wl->buffer_32) {
+		ret = -ENOMEM;
+		goto err_mbox;
+	}
+
 	return hw;
 
+err_mbox:
+	kfree(wl->mbox);
+
+err_pool_addr:
+	kfree(wl->rx_mem_pool_addr);
+
+err_fwlog:
+	free_page((unsigned long)wl->fwlog);
+
 err_dummy_packet:
 	dev_kfree_skb(wl->dummy_packet);
 
@@ -6359,6 +6387,9 @@ static int wl1271_free_hw(struct wl1271 *wl)
 	device_remove_file(wl->dev, &dev_attr_hw_pg_ver);
 
 	device_remove_file(wl->dev, &dev_attr_bt_coex_state);
+	kfree(wl->buffer_32);
+	kfree(wl->mbox);
+	kfree(wl->rx_mem_pool_addr);
 	free_page((unsigned long)wl->fwlog);
 	dev_kfree_skb(wl->dummy_packet);
 	free_pages((unsigned long)wl->aggr_buf,
diff --git a/wl12xx-compat/drivers/net/wireless/wl12xx/rx.c b/wl12xx-compat/drivers/net/wireless/wl12xx/rx.c
index 79172d3..0be586d 100644
--- a/wl12xx-compat/drivers/net/wireless/wl12xx/rx.c
+++ b/wl12xx-compat/drivers/net/wireless/wl12xx/rx.c
@@ -236,15 +236,16 @@ int wl12xx_rx(struct wl1271 *wl, struct wl12xx_fw_status *status)
 			mem_block = wl12xx_rx_get_mem_block(status,
 							    drv_rx_counter);
 
-			wl->rx_mem_pool_addr.addr = (mem_block << 8) +
+			wl->rx_mem_pool_addr->addr = (mem_block << 8) +
 			   le32_to_cpu(wl_mem_map->packet_memory_pool_start);
 
-			wl->rx_mem_pool_addr.addr_extra =
-				wl->rx_mem_pool_addr.addr + 4;
+			wl->rx_mem_pool_addr->addr_extra =
+				wl->rx_mem_pool_addr->addr + 4;
 
 			ret = wl1271_write(wl, WL1271_SLV_REG_DATA,
-					   &wl->rx_mem_pool_addr,
-					   sizeof(wl->rx_mem_pool_addr), false);
+					   wl->rx_mem_pool_addr,
+					   sizeof(*wl->rx_mem_pool_addr),
+					   false);
 			if (ret < 0)
 				goto out;
 		}
diff --git a/wl12xx-compat/drivers/net/wireless/wl12xx/wl12xx.h b/wl12xx-compat/drivers/net/wireless/wl12xx/wl12xx.h
index f1d8331..874018a 100644
--- a/wl12xx-compat/drivers/net/wireless/wl12xx/wl12xx.h
+++ b/wl12xx-compat/drivers/net/wireless/wl12xx/wl12xx.h
@@ -435,7 +435,7 @@ struct wl1271 {
 	u32 rx_counter;
 
 	/* Rx memory pool address */
-	struct wl1271_rx_mem_pool_addr rx_mem_pool_addr;
+	struct wl1271_rx_mem_pool_addr *rx_mem_pool_addr;
 
 	/* Intermediate buffer, used for packet aggregation */
 	u8 *aggr_buf;
@@ -458,6 +458,9 @@ struct wl1271 {
 	/* Hardware recovery work */
 	struct work_struct recovery_work;
 
+	/* Pointer that holds DMA-friendly block for the mailbox */
+	struct event_mailbox *mbox;
+
 	/* The mbox event mask */
 	u32 event_mask;
 
@@ -490,7 +493,7 @@ struct wl1271 {
 
 	struct wl1271_stats stats;
 
-	__le32 buffer_32;
+	__le32 *buffer_32;
 	u32 buffer_cmd;
 	u32 buffer_busyword[WL1271_BUSY_WORD_CNT];
 
-- 
1.7.9

