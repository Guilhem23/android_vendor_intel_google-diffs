From 05287afa5996f91d7caec560830c79e8c763100b Mon Sep 17 00:00:00 2001
From: "jonathan.de.cesco" <jonathan.de.cesco@intel.com>
Date: Mon, 23 Jul 2012 15:48:06 +0200
Subject: [PATCH 02/78] wifi: MCP 2.5.4 performances improvements

BZ: 47543

Includes:
0026-WLAN-update-wlan_prov-licence-to-Apache-V2.patch
0027-WLAN-update-build-since-wpa_supplicant_6-move-to-PRI.patch
0028-WLAN-MCP-2.5.4-regression-towards-S3-fixes.patch
0029-wifi-Avoiding-kernel-crash-with-os_SignalObjectWait-.patch
0030-WLAN-REVERTME-Workaround-to-avoid-S3-when-wifi-is-up.patch
0031-WLAN-Wake-lock-on-WLAN-when-chip-not-present.patch
0032-Revert-WLAN-update-build-since-wpa_supplicant_6-move.patch
0033-Enable-format-security-Error-Checking.patch
0034-WLAN-update-build-since-wpa_supplicant_6-move-to-PRI.patch
0035-wifi-boot_without_wifi_chip.patch
0036-WLAN-Low-throughput-performance-WLAN-11b-g-n-mode.patch
0037-WLAN-S3-Revert-WLAN-REVERTME-Workaround-to-avoid-S3-.patch

Change-Id: I0020a559206ce361dfd5ddea75430b64ff4ac7e7
Signed-off-by: jonathan.de.cesco <jonathan.de.cesco@intel.com>
Reviewed-on: http://android.intel.com:8080/59008
Reviewed-by: Regairaz, Julie <julie.regairaz@intel.com>
Tested-by: Champciaux, Nicolas <nicolas.champciaux@intel.com>
Reviewed-by: buildbot <buildbot@intel.com>
Tested-by: buildbot <buildbot@intel.com>
Reviewed-on: http://android.intel.com:8080/77959
Reviewed-by: Li, XiaojingX <xiaojingx.li@intel.com>
Tested-by: Li, XiaojingX <xiaojingx.li@intel.com>
---
 wl1271/CUDK/os/linux/src/osapi.c                   |    6 +-
 wl1283-ap/CUDK/configurationutility/Android.mk     |   27 +-------
 wl1283-ap/CUDK/os/linux/src/Android.mk             |   23 +-----
 wl1283-ap/CUDK/os/linux/src/osapi.c                |   14 ++--
 wl1283/CUDK/configurationutility/Android.mk        |   26 +------
 wl1283/CUDK/os/linux/src/Android.mk                |   22 +-----
 wl1283/CUDK/os/linux/src/osapi.c                   |   14 ++--
 .../hw/host_platform_linux/linux/SdioDrv.c         |   21 +++++-
 .../hw/host_platform_linux/linux/host_platform.c   |   17 ++++-
 wl1283/platforms/os/linux/inc/WlanDrvIf.h          |    3 +-
 wl1283/platforms/os/linux/src/WlanDrvIf.c          |   77 +++++++++++++-------
 wl1283/platforms/os/linux/src/osapi.c              |    7 +-
 wl1283/stad/src/Ctrl_Interface/CmdHndlr.c          |   34 +++++++++-
 wl1283/stad/src/Ctrl_Interface/DrvMain.c           |    6 +-
 wlan_prov/wlan_provisioning.c                      |   27 +++----
 15 files changed, 164 insertions(+), 160 deletions(-)

diff --git a/wl1271/CUDK/os/linux/src/osapi.c b/wl1271/CUDK/os/linux/src/osapi.c
index b124211..be06394 100644
--- a/wl1271/CUDK/os/linux/src/osapi.c
+++ b/wl1271/CUDK/os/linux/src/osapi.c
@@ -325,13 +325,13 @@ CONTEXT:
 S32 os_sscanf(const PS8 str, const PS8 arg_list, ...)
 {
     va_list ap;
-    S8 msg[MAX_HOST_MESSAGE_SIZE];
+    S32 ret_val;
 
     va_start(ap, arg_list);
-    vsprintf((char*)msg, (char*)arg_list, ap);
+    ret_val = vsscanf((const char *)str, (const char *)arg_list, ap);
     va_end(ap);
 
-    return sscanf((char*)str, (char*)msg);
+    return ret_val;
 }
 
 /************************************************************************
diff --git a/wl1283-ap/CUDK/configurationutility/Android.mk b/wl1283-ap/CUDK/configurationutility/Android.mk
index a46a6b7..e2eec0f 100644
--- a/wl1283-ap/CUDK/configurationutility/Android.mk
+++ b/wl1283-ap/CUDK/configurationutility/Android.mk
@@ -3,7 +3,6 @@ include $(CLEAR_VARS)
 
 STATIC_LIB ?= y
 DEBUG ?= y
-BUILD_SUPPL = n
 WPA_ENTERPRISE ?= y
 CONFIG_EAP_WSC ?= y
 HOST_PLATFORM ?= zoom2
@@ -12,7 +11,7 @@ TI_HOSTAPD_LIB ?= y
 WILINK_ROOT = ../..
 CUDK_ROOT ?= $(WILINK_ROOT)/CUDK
 CU_ROOT = $(CUDK_ROOT)/configurationutility
-SUPPL_PATH ?= external/wpa_supplicant_6
+WPA_SUPPL_DIR_INCLUDE = $(TARGET_OUT_HEADERS)/wpa_supplicant_6
 
 ifeq ($(DEBUG),y)
  DEBUGFLAGS = -O2 -g -DDEBUG -DTI_DBG -fno-builtin   # "-O" is needed to expand inlines
@@ -39,15 +38,6 @@ endif
 
 #DK_DEFINES += -D NO_WPA_SUPPL
 
-#Supplicant image building
-ifeq ($(BUILD_SUPPL), y)
-DK_DEFINES += -D WPA_SUPPLICANT -D CONFIG_CTRL_IFACE -D CONFIG_CTRL_IFACE_UNIX
-  -include external/wpa_supplicant/.config
-ifeq ($(CONFIG_EAP_WSC), y)
-DK_DEFINES += -DCONFIG_EAP_WSC
-endif
-endif
-
 ARMFLAGS  = -fno-common -g #-fno-builtin -Wall #-pipe
 
 LOCAL_C_INCLUDES = \
@@ -67,15 +57,7 @@ LOCAL_C_INCLUDES = \
 	$(LOCAL_PATH)/$(KERNEL_DIR)/include \
 	$(LOCAL_PATH)/$(WILINK_ROOT)/TWD/FW_Transfer/Export_Inc \
 	$(CUDK_ROOT)/$(TI_SUPP_LIB_DIR) \
-	$(SUPPL_PATH)/wpa_supplicant/ \
-	$(SUPPL_PATH)/wpa_supplicant/src/ \
-	$(SUPPL_PATH)/wpa_supplicant/src/common \
-	$(SUPPL_PATH)/wpa_supplicant/src/eap_peer \
-	$(SUPPL_PATH)/wpa_supplicant/src/drivers \
-	$(SUPPL_PATH)/wpa_supplicant/src/l2_packet \
-	$(SUPPL_PATH)/wpa_supplicant/src/utils \
-	$(SUPPL_PATH)/wpa_supplicant/src/wps \
-	$(SUPPL_PATH)/wpa_supplicant/src/eap_peer 
+	$(WPA_SUPPL_DIR_INCLUDE)
 
 LOCAL_SRC_FILES:= \
 	src/console.c \
@@ -101,11 +83,6 @@ ifeq ($(TI_HOSTAPD_LIB), y)
 	LOCAL_STATIC_LIBRARIES += libhostapdcli
 endif
 
-ifeq ($(BUILD_SUPPL), y)
-LOCAL_SHARED_LIBRARIES := \
-        libwpa_client
-endif
-
 LOCAL_MODULE:= tiap_cu
 LOCAL_MODULE_TAGS := optional
 
diff --git a/wl1283-ap/CUDK/os/linux/src/Android.mk b/wl1283-ap/CUDK/os/linux/src/Android.mk
index e0b8d2d..2631b6d 100644
--- a/wl1283-ap/CUDK/os/linux/src/Android.mk
+++ b/wl1283-ap/CUDK/os/linux/src/Android.mk
@@ -3,7 +3,6 @@ include $(CLEAR_VARS)
 
 STATIC_LIB ?= y
 DEBUG ?= y
-BUILD_SUPPL ?= n
 WPA_ENTERPRISE ?= y
 
 ifeq ($(DEBUG),y)
@@ -14,22 +13,13 @@ endif
 
 WILINK_ROOT = ../../../..
 CUDK_ROOT = $(WILINK_ROOT)/CUDK
-ANDR_TI_SUPP_LIB_DIR = $(WILINK_ROOT)/../../../../external/wpa_supplicant_6
-# TI_SUPP_LIB_DIR = $(WILINK_ROOT)/external_suppl
+WPA_SUPPL_DIR_INCLUDE = $(TARGET_OUT_HEADERS)/wpa_supplicant_6
 
 DK_DEFINES = 
 ifeq ($(WPA_ENTERPRISE), y)
         DK_DEFINES += -D WPA_ENTERPRISE
 endif
 
-ifeq ($(BUILD_SUPPL), y)
-  DK_DEFINES += -D WPA_SUPPLICANT -D CONFIG_CTRL_IFACE -D CONFIG_CTRL_IFACE_UNIX
-  -include external/wpa_supplicant/.config
-  ifeq ($(CONFIG_EAP_WSC), y)
-    DK_DEFINES += -DCONFIG_EAP_WSC
-  endif
-endif
-
 ifeq ("$(HOST_PLATFORM)","zoom2")
 	DK_DEFINES += -DHOST_PLATFORM_ZOOM2
 endif
@@ -53,12 +43,6 @@ LOCAL_SRC_FILES:= \
         osapi.c
 
 
-ifeq ($(BUILD_SUPPL), y)
-LOCAL_SRC_FILES += \
-	$(ANDR_TI_SUPP_LIB_DIR)/wpa_ctrl.c
-endif
-
-
 LOCAL_C_INCLUDES := \
         $(LOCAL_PATH)/../inc \
         $(LOCAL_PATH)/../../common/inc \
@@ -74,9 +58,8 @@ LOCAL_C_INCLUDES := \
         $(LOCAL_PATH)/$(WILINK_ROOT)/platforms/os/linux/inc \
         $(LOCAL_PATH)/$(WILINK_ROOT)/platforms/os/common/inc \
         $(LOCAL_PATH)/$(WILINK_ROOT)/TWD/FirmwareApi \
-	external/wpa_supplicant_6/wpa_supplicant/src/common \
-        external/wpa_supplicant_6/wpa_supplicant/src/utils \
-        $(LOCAL_PATH)/$(CUDK_ROOT)/configurationutility/inc
+        $(LOCAL_PATH)/$(CUDK_ROOT)/configurationutility/inc \
+	$(WPA_SUPPL_DIR_INCLUDE)
 
 LOCAL_MODULE:=libtiOsLibAP
 LOCAL_MODULE_TAGS := optional
diff --git a/wl1283-ap/CUDK/os/linux/src/osapi.c b/wl1283-ap/CUDK/os/linux/src/osapi.c
index 55bebd5..8fe5345 100644
--- a/wl1283-ap/CUDK/os/linux/src/osapi.c
+++ b/wl1283-ap/CUDK/os/linux/src/osapi.c
@@ -111,9 +111,9 @@ VOID os_error_printf(S32 debug_level, const PS8 arg_list ,...)
 
     /* print the message */
 
-    fprintf(ftmp,(char*)msg);
+    fprintf(ftmp, "%s", (char*)msg);
     fclose(ftmp);
-    fprintf(stderr, (char*)msg);
+    fprintf(stderr, "%s", (char*)msg);
 }
 
 /****************************************************************************************
@@ -162,7 +162,7 @@ S32 os_sprintf(PS8 str, const PS8 arg_list, ...)
     vsprintf((char*)msg, (char*)arg_list, ap);
     va_end(ap);
 
-    return sprintf((char*)str, (char*)msg);
+    return sprintf((char*)str, "%s", (char*)msg);
 }
 
 /****************************************************************************************
@@ -176,7 +176,7 @@ RETURN:
 *****************************************************************************************/
 S32 os_Printf(const PS8 buffer)
 {
-    return printf((char*)buffer);
+    return printf("%s", (char*)buffer);
 }
 
 
@@ -335,13 +335,13 @@ CONTEXT:
 S32 os_sscanf(const PS8 str, const PS8 arg_list, ...)
 {
     va_list ap;
-    S8 msg[MAX_HOST_MESSAGE_SIZE];
+    S32 ret_val;
 
     va_start(ap, arg_list);
-    vsprintf((char*)msg, (char*)arg_list, ap);
+    ret_val = vsscanf((const char *)str, (const char *)arg_list, ap);
     va_end(ap);
 
-    return sscanf((char*)str, (char*)msg);
+    return ret_val;
 }
 
 /************************************************************************
diff --git a/wl1283/CUDK/configurationutility/Android.mk b/wl1283/CUDK/configurationutility/Android.mk
index ec69715..add826b 100644
--- a/wl1283/CUDK/configurationutility/Android.mk
+++ b/wl1283/CUDK/configurationutility/Android.mk
@@ -3,7 +3,6 @@ include $(CLEAR_VARS)
 
 STATIC_LIB ?= y
 DEBUG ?= y
-BUILD_SUPPL = y
 WPA_ENTERPRISE ?= y
 
 WILINK_ROOT = ../..
@@ -16,17 +15,11 @@ endif
 
 ifeq ($(WPA_SUPPLICANT_VERSION),VER_0_5_X)
 WPA_SUPPL_DIR = external/wpa_supplicant
-else
-WPA_SUPPL_DIR = external/wpa_supplicant_6/wpa_supplicant
-endif
 WPA_SUPPL_DIR_INCLUDE = $(WPA_SUPPL_DIR)
+endif
+
 ifeq ($(WPA_SUPPLICANT_VERSION),VER_0_6_X)
-WPA_SUPPL_DIR_INCLUDE += $(WPA_SUPPL_DIR)/src \
-	$(WPA_SUPPL_DIR)/src/common \
-	$(WPA_SUPPL_DIR)/src/drivers \
-	$(WPA_SUPPL_DIR)/src/l2_packet \
-	$(WPA_SUPPL_DIR)/src/utils \
-	$(WPA_SUPPL_DIR)/src/wps
+WPA_SUPPL_DIR_INCLUDE = $(TARGET_OUT_HEADERS)/wpa_supplicant_6
 endif
 
 ifeq ($(DEBUG),y)
@@ -55,15 +48,6 @@ endif
 
 #DK_DEFINES += -D NO_WPA_SUPPL
 
-#Supplicant image building
-ifeq ($(BUILD_SUPPL), y)
-DK_DEFINES += -D WPA_SUPPLICANT -D CONFIG_CTRL_IFACE -D CONFIG_CTRL_IFACE_UNIX
--include $(WPA_SUPPL_DIR)/.config
-ifdef CONFIG_WPS
-	DK_DEFINES += -DCONFIG_WPS
-endif
-endif
-
 ARMFLAGS = -fno-common -g #-fno-builtin -Wall #-pipe
 
 LOCAL_C_INCLUDES = \
@@ -100,10 +84,6 @@ LOCAL_LDLIBS += -lpthread
 LOCAL_STATIC_LIBRARIES = \
 	libtiOsLib
 
-ifeq ($(BUILD_SUPPL), y)
-LOCAL_SHARED_LIBRARIES = \
-	libwpa_client
-endif
 
 LOCAL_MODULE:= wlan_cu
 LOCAL_MODULE_TAGS := optional
diff --git a/wl1283/CUDK/os/linux/src/Android.mk b/wl1283/CUDK/os/linux/src/Android.mk
index abb15cb..22564bb 100644
--- a/wl1283/CUDK/os/linux/src/Android.mk
+++ b/wl1283/CUDK/os/linux/src/Android.mk
@@ -3,7 +3,6 @@ include $(CLEAR_VARS)
 
 STATIC_LIB ?= y
 DEBUG ?= y
-BUILD_SUPPL = y
 WPA_ENTERPRISE ?= y
 
 ifeq ($(DEBUG),y)
@@ -20,17 +19,11 @@ endif
 
 ifeq ($(WPA_SUPPLICANT_VERSION),VER_0_5_X)
 WPA_SUPPL_DIR = external/wpa_supplicant
-else
-WPA_SUPPL_DIR = external/wpa_supplicant_6/wpa_supplicant
-endif
 WPA_SUPPL_DIR_INCLUDE = $(WPA_SUPPL_DIR)
+endif
+
 ifeq ($(WPA_SUPPLICANT_VERSION),VER_0_6_X)
-WPA_SUPPL_DIR_INCLUDE += $(WPA_SUPPL_DIR)/src \
-	$(WPA_SUPPL_DIR)/src/common \
-	$(WPA_SUPPL_DIR)/src/drivers \
-	$(WPA_SUPPL_DIR)/src/l2_packet \
-	$(WPA_SUPPL_DIR)/src/utils \
-	$(WPA_SUPPL_DIR)/src/wps
+WPA_SUPPL_DIR_INCLUDE = $(TARGET_OUT_HEADERS)/wpa_supplicant_6
 endif
 
 DK_DEFINES = 
@@ -38,15 +31,6 @@ ifeq ($(WPA_ENTERPRISE), y)
         DK_DEFINES += -D WPA_ENTERPRISE
 endif
 
-ifeq ($(BUILD_SUPPL), y)
-DK_DEFINES += -D WPA_SUPPLICANT -D CONFIG_CTRL_IFACE -D CONFIG_CTRL_IFACE_UNIX
--include $(WPA_SUPPL_DIR)/.config
-ifdef CONFIG_WPS
-DK_DEFINES += -DCONFIG_WPS
-endif
-endif
-
-
 
 LOCAL_CFLAGS+= \
 	-Wall -Wstrict-prototypes $(DEBUGFLAGS) -D__LINUX__ $(DK_DEFINES) -D__BYTE_ORDER_LITTLE_ENDIAN -fno-common #-pipe
diff --git a/wl1283/CUDK/os/linux/src/osapi.c b/wl1283/CUDK/os/linux/src/osapi.c
index 793b1be..9b395d8 100644
--- a/wl1283/CUDK/os/linux/src/osapi.c
+++ b/wl1283/CUDK/os/linux/src/osapi.c
@@ -98,12 +98,12 @@ VOID os_error_printf(S32 debug_level, const PS8 arg_list ,...)
     va_end(ap);
 
     /* print the message */
-    fprintf(stderr, (char *)msg);
+    fprintf(stderr, "%s", (char *)msg);
 	
 #ifdef OS_CLI_LOG_TO_FILE
     ftmp = fopen(file_name, "a");
     if (ftmp != NULL) {
-	fprintf(ftmp,(char*)msg);
+	fprintf(ftmp, "%s", (char*)msg);
 	fclose(ftmp);
     }
 #endif
@@ -155,7 +155,7 @@ S32 os_sprintf(PS8 str, const PS8 arg_list, ...)
     vsprintf((char*)msg, (char*)arg_list, ap);
     va_end(ap);
 
-    return sprintf((char*)str, (char*)msg);
+    return sprintf((char*)str, "%s", (char*)msg);
 }
 
 /****************************************************************************************
@@ -169,7 +169,7 @@ RETURN:
 *****************************************************************************************/
 S32 os_Printf(const PS8 buffer)
 {
-    return printf((char*)buffer);
+    return printf("%s", (char*)buffer);
 }
 
 
@@ -328,13 +328,13 @@ CONTEXT:
 S32 os_sscanf(const PS8 str, const PS8 arg_list, ...)
 {
     va_list ap;
-    S8 msg[MAX_HOST_MESSAGE_SIZE];
+    S32 ret_val;
 
     va_start(ap, arg_list);
-    vsprintf((char*)msg, (char*)arg_list, ap);
+    ret_val = vsscanf((const char *)str, (const char *)arg_list, ap);
     va_end(ap);
 
-    return sscanf((char*)str, (char*)msg);
+    return ret_val;
 }
 
 /************************************************************************
diff --git a/wl1283/platforms/hw/host_platform_linux/linux/SdioDrv.c b/wl1283/platforms/hw/host_platform_linux/linux/SdioDrv.c
index 524c172..23589c4 100644
--- a/wl1283/platforms/hw/host_platform_linux/linux/SdioDrv.c
+++ b/wl1283/platforms/hw/host_platform_linux/linux/SdioDrv.c
@@ -279,10 +279,16 @@ int sdioDrv_DisableFunction(unsigned int uFunc)
 {
     PDEBUG("%s: func %d\n", __func__, uFunc);
 
+	/* In case this is called "too early" - which is the
+	   case when there is no hardware installed.
+	   The driver design is lacking support for
+	   sudden removals. */
+	if ((uFunc != SDIO_WLAN_FUNC) || (tiwlan_func[uFunc] == NULL))
+		return -1;
+
 	/* currently only wlan sdio function is supported */
 	BUG_ON(uFunc != SDIO_WLAN_FUNC);
 	BUG_ON(tiwlan_func[uFunc] == NULL);
-	
 	return sdio_disable_func(tiwlan_func[uFunc]);
 }
 
@@ -333,7 +339,7 @@ int sdioDrv_SetBlockSize(unsigned int uFunc, unsigned int blksz)
 static int sdioDrv_polling_locked;
 static DECLARE_WAIT_QUEUE_HEAD(sdioDrv_waitunlockpoll);
 
-void sdioDrv_block_polling()
+void sdioDrv_block_polling(void)
 {
 	while (sdioDrv_polling_locked) {
 		DECLARE_WAITQUEUE(wait, current);
@@ -346,12 +352,12 @@ void sdioDrv_block_polling()
 		remove_wait_queue(&sdioDrv_waitunlockpoll, &wait);
 	}
 }
-void sdioDrv_set_polling_lock()
+void sdioDrv_set_polling_lock(void)
 {
 	sdioDrv_polling_locked = 1;
 }
 
-void sdioDrv_set_polling_lock_release()
+void sdioDrv_set_polling_lock_release(void)
 {
 	sdioDrv_polling_locked = 0;
 	wake_up_interruptible(&sdioDrv_waitunlockpoll);
@@ -362,6 +368,13 @@ void sdioDrv_ClaimHost(unsigned int uFunc)
 	if (g_drv.sdio_host_claim_ref)
 		return;
 
+	/* In case this is called "too early" - which is the
+	   case when there is no hardware installed.
+	   The driver design is lacking support for
+	   sudden removals. */
+	if ((uFunc != SDIO_WLAN_FUNC) || (tiwlan_func[uFunc] == NULL))
+		return;
+
 	/* currently only wlan sdio function is supported */
 	BUG_ON(uFunc != SDIO_WLAN_FUNC);
 	BUG_ON(tiwlan_func[uFunc] == NULL);
diff --git a/wl1283/platforms/hw/host_platform_linux/linux/host_platform.c b/wl1283/platforms/hw/host_platform_linux/linux/host_platform.c
index 1cf0db1..080a09b 100644
--- a/wl1283/platforms/hw/host_platform_linux/linux/host_platform.c
+++ b/wl1283/platforms/hw/host_platform_linux/linux/host_platform.c
@@ -220,7 +220,10 @@ int hPlatform_DevicePowerOn (void)
 
 	/* let the mmc core finish enumeration + initialization before we continue */
 	printk(KERN_INFO "%s: waiting for completion\n", __func__);
-	wait_for_completion(&sdio_ready);
+	if (wait_for_completion_timeout(&sdio_ready, msecs_to_jiffies(2000)) == 0) {
+		printk(KERN_ERR "TIWLAN %s: Timeout waiting SDIO, giving up..\n", __func__);
+		return -1;
+	}
 	sdioDrv_ClaimHost(SDIO_WLAN_FUNC);
 
 	return 0;
@@ -314,7 +317,11 @@ int hPlatform_initInterrupt(void *tnet_drv, void* handle_add)
 		return rc;
 	}
 
-	//set_irq_wake(drv->irq, 1);
+	drv->irq_wake = 1;
+	if (set_irq_wake(drv->irq, 1) != 0) {
+		printk(KERN_INFO "TIWLAN: IRQ wake not implemented on platform\n");
+		drv->irq_wake = 0;
+	}
 
 	return rc;
 } /* hPlatform_initInterrupt() */
@@ -325,7 +332,11 @@ void hPlatform_freeInterrupt(void *tnet_drv)
 {
 	TWlanDrvIfObj *drv = tnet_drv;
 
-	//	set_irq_wake(drv->irq, 0);
+	if (drv->irq_wake) {
+		set_irq_wake(drv->irq, 0);
+		drv->irq_wake = 0;
+	}
+
 	free_irq(drv->irq, drv);
 }
 
diff --git a/wl1283/platforms/os/linux/inc/WlanDrvIf.h b/wl1283/platforms/os/linux/inc/WlanDrvIf.h
index c933ca2..7140720 100644
--- a/wl1283/platforms/os/linux/inc/WlanDrvIf.h
+++ b/wl1283/platforms/os/linux/inc/WlanDrvIf.h
@@ -104,7 +104,8 @@ typedef struct
     TWlanDrvIfCommon         tCommon;   /* The driver object common part */
 
     int                      irq;       /* The OS IRQ handle */
-	unsigned long 			 irq_flags; /* The IRQ flags */
+    unsigned long 	     irq_flags; /* The IRQ flags */
+    int                      irq_wake;  /* IRQ wake flag */
     struct workqueue_struct *tiwlan_wq; /* Work Queue */
     struct work_struct       tWork;     /* The OS work handle. */
     spinlock_t               lock;      /* The OS spinlock handle. */
diff --git a/wl1283/platforms/os/linux/src/WlanDrvIf.c b/wl1283/platforms/os/linux/src/WlanDrvIf.c
index e7cc9ca..963c3ed 100644
--- a/wl1283/platforms/os/linux/src/WlanDrvIf.c
+++ b/wl1283/platforms/os/linux/src/WlanDrvIf.c
@@ -417,12 +417,6 @@ static void wlanDrvIf_DriverTask(struct work_struct *work)
     curr1 = check_stack_start(&base1, local_sp + 4, 0);
     #endif
 
-    /* you shall not pass!
-     * wait here until the work-queue is defrosted :)
-     * (see wlanDrvIf_Resume)
-     */
-    wait_event_interruptible(resume_wait, !atomic_read(&is_suspended));
-
     /* Call the driver main task */
     context_DriverTask (drv->tCommon.hContext);
 
@@ -1083,6 +1077,32 @@ static void wlanDrvIf_Destroy (TWlanDrvIfObj *drv)
 }
 
 
+
+/**
+ * \fn     wlanDrvIf_IsChipPresent
+ * \brief  check if wifi chip is present
+ *
+ * This function check the wifi chip presence
+ *
+ * \note
+ * \param  void
+ * \return Init: 1 - chip present, 0 - chip not pesent.
+ * \sa     wlanDrvIf_IsChipPresent
+ */
+static int  wlanDrvIf_IsChipPresent (void)
+{
+  int rc = 0;
+
+  if(!hPlatform_DevicePowerOn()) {
+    rc = 1;
+    hPlatform_DevicePowerOff();
+  }
+
+  return rc;
+}
+
+
+
 /** 
  * \fn     wlanDrvIf_ModuleInit  &  wlanDrvIf_ModuleExit
  * \brief  Linux Init/Exit functions
@@ -1097,16 +1117,33 @@ static void wlanDrvIf_Destroy (TWlanDrvIfObj *drv)
 
 static int __init wlanDrvIf_ModuleInit (void)
 {
-    printk(KERN_INFO "TIWLAN: driver init\n");
+  int rc = -1;
+
+  printk(KERN_INFO "TIWLAN: driver init\n");
+
 #ifndef SDIO_KERNEL_MODULE
     sdioDrv_init();
 #endif
-    return wlanDrvIf_Create ();
+
+    if(!wlanDrvIf_Create ()) {
+      if(wlanDrvIf_IsChipPresent()) {
+	printk(KERN_INFO "TIWLAN: wifi chip detected\n");
+	rc = 0;
+      }
+      else {
+	printk(KERN_INFO "TIWLAN: wifi chip not detected\n");
+      }
+    }
+
+    if(rc)
+      wlanDrvIf_Destroy (pDrvStaticHandle);
+
+  return rc;
 }
 
 static void __exit wlanDrvIf_ModuleExit (void)
 {
-    wlanDrvIf_Destroy (pDrvStaticHandle);
+  wlanDrvIf_Destroy (pDrvStaticHandle);
 #ifndef SDIO_KERNEL_MODULE
     sdioDrv_exit();
 #endif
@@ -1114,7 +1151,8 @@ static void __exit wlanDrvIf_ModuleExit (void)
 }
 
 
-/** 
+
+/**
  * \fn     wlanDrvIf_StopTx
  * \brief  block Tx thread until wlanDrvIf_ResumeTx called .
  * 
@@ -1233,14 +1271,7 @@ static int wlanDrvIf_Suspend(TI_HANDLE hWlanDrvIf)
 	    	.out_buffer = NULL});
 	}
 
-	if (rc == TI_OK)
-	{
-	  /* freeze the wlan work-queue */
-	  flush_workqueue(pDrvStaticHandle->tiwlan_wq); /* clean up any leftover work */
-	  atomic_set(&is_suspended, 1); /* effectively freeze the work-queue until resumed */
-	}
-	else
-	  {
+	if (rc != TI_OK) {
 	    /*
 	     * if failed to suspend, prevent the kernel from suspending again
 	     * for 1 second, to allow the supplicant to react to any events
@@ -1249,6 +1280,7 @@ static int wlanDrvIf_Suspend(TI_HANDLE hWlanDrvIf)
 		pWlanDrvIf->bSuspendInProgress = TI_FALSE;
 		os_wake_lock_timeout_enable(pWlanDrvIf);
 		os_wake_lock_timeout(pWlanDrvIf);
+		enable_irq(pWlanDrvIf->irq);
 	  }
 
 	/* on error, kernel will retry to suspend until it succeeds */
@@ -1267,13 +1299,6 @@ static int wlanDrvIf_Resume(TI_HANDLE hWlanDrvIf)
 
 	printk(KERN_INFO "TIWLAN: resuming\n");
 
-	/* prepare the sdio before the work-queue is un-freezed and starts sending transactions */
-	sdioAdapt_PrepareResume();
-
-	printk(KERN_DEBUG "TIWLAN: un-freezing work-queue\n");
-	atomic_set(&is_suspended, 0); /* allow the work-queue to.. well, umm.. work */
-	wake_up(&resume_wait); /* and make sure it's up! */
-
 	/* issue resume command */
 	if (pWlanDrvIf->eResumeCmd != LAST_CMD)
 	{
@@ -1354,7 +1379,7 @@ TI_BOOL wlanDrvIf_IsCmdEnabled(TI_HANDLE hWlanDrvIf, TI_UINT32 uCmd)
 	switch (pWlanDrvIf->tCommon.eDriverState)
 	{
 	case DRV_STATE_RUNNING:
-		bEnabled = TI_TRUE;
+		bEnabled = (uCmd != DRIVER_START_PARAM); /* reject START when driver is running (accepted when driver is stopped) */
 		break;
 	case DRV_STATE_FAILED:
 	case DRV_STATE_STOPING:
diff --git a/wl1283/platforms/os/linux/src/osapi.c b/wl1283/platforms/os/linux/src/osapi.c
index 2ff2cf4..2db4e06 100644
--- a/wl1283/platforms/os/linux/src/osapi.c
+++ b/wl1283/platforms/os/linux/src/osapi.c
@@ -796,9 +796,10 @@ int os_SignalObjectWait (TI_HANDLE OsContext, void *signalObject)
     }
 	if (!wait_for_completion_timeout((struct completion *)signalObject, msecs_to_jiffies(10000))) 
     {
-		printk("os_SignalObjectWait: 10 sec %s timeout\n", __func__);
-	}
-   return TI_OK;
+	printk("os_SignalObjectWait: 10 sec %s timeout\n", __func__);
+        return TI_NOK;
+    }
+    return TI_OK;
 }
 
 
diff --git a/wl1283/stad/src/Ctrl_Interface/CmdHndlr.c b/wl1283/stad/src/Ctrl_Interface/CmdHndlr.c
index d8f4d95..562163e 100644
--- a/wl1283/stad/src/Ctrl_Interface/CmdHndlr.c
+++ b/wl1283/stad/src/Ctrl_Interface/CmdHndlr.c
@@ -295,7 +295,39 @@ TI_STATUS cmdHndlr_InsertCommand (TI_HANDLE     hCmdHndlr,
 	context_RequestSchedule (pCmdHndlr->hContext, pCmdHndlr->uContextId);
 
 	/* Wait until the command is executed */
-	os_SignalObjectWait (pCmdHndlr->hOs, pNewCmd->pSignalObject);
+	if(os_SignalObjectWait (pCmdHndlr->hOs, pNewCmd->pSignalObject) != TI_OK)
+        {
+               ti_private_cmd_t *pPcommand = (ti_private_cmd_t *)param3;
+               printk("!!!The timeout cmd is %d\n", cmd);
+
+               if(pPcommand)
+                       printk("!!!The timeout priv cmd is %d\n", pPcommand->cmd);
+
+               /* panic-prevention-start
+                * try to discard the cmd if it has been Dequeue yet
+                */
+               {
+                       TConfigCommand   *ptmpCmd;
+                       context_EnterCriticalSection (pCmdHndlr->hContext);
+                       do {
+                               ptmpCmd = (TConfigCommand *)que_Dequeue(pCmdHndlr->hCmdQueue);
+                               if(ptmpCmd == NULL)
+                               {
+                                       break;
+                               }
+                               if(ptmpCmd == pNewCmd)
+                               {
+                                       os_printf("cmdHndlr_InsertCommand : %x dequeued\n",ptmpCmd );
+                               }
+                               else
+                               {
+                                       os_printf("cmdHndlr_InsertCommand : %x dequeued and signal set\n", ptmpCmd);
+                                       os_SignalObjectSet (pCmdHndlr->hOs, ptmpCmd->pSignalObject);
+                               }
+                       } while (ptmpCmd != NULL);
+                       context_LeaveCriticalSection (pCmdHndlr->hContext);
+               } /* panic-prevention-stop */
+       }
 
 	/* After "wait" - the command has already been processed by the drivers' context */
     /* Indicate the end of command process, from adding it to the queue until get return status form it */  
diff --git a/wl1283/stad/src/Ctrl_Interface/DrvMain.c b/wl1283/stad/src/Ctrl_Interface/DrvMain.c
index 8a4493d..961ff63 100644
--- a/wl1283/stad/src/Ctrl_Interface/DrvMain.c
+++ b/wl1283/stad/src/Ctrl_Interface/DrvMain.c
@@ -1452,10 +1452,12 @@ static void drvMain_Sm (TI_HANDLE hDrvMain, ESmEvent eEvent)
 
             if(eStatus == TI_OK ) 
             {
-			
-                hPlatform_DevicePowerOn ();
                 pDrvMain->tFileInfo.eFileType = FILE_TYPE_NVS;
                 eStatus = wlanDrvIf_GetFile (hOs, &pDrvMain->tFileInfo);
+                /* The first place to try powering on: result is checked */
+                if(hPlatform_DevicePowerOn() != 0) {
+                    eStatus = TI_NOK;
+                }
             }
         }
         break;
diff --git a/wlan_prov/wlan_provisioning.c b/wlan_prov/wlan_provisioning.c
index e72caba..c858608 100644
--- a/wlan_prov/wlan_provisioning.c
+++ b/wlan_prov/wlan_provisioning.c
@@ -1,21 +1,17 @@
 /*
+ * Copyright [2011] The Android Open Source Project
  *
- *  wlan_provisioning.c - wlan provisioning application
+ *  Licensed under the Apache License, Version 2.0 (the "License");
+ *  you may not use this file except in compliance with the License.
+ *  You may obtain a copy of the License at
  *
- *  Copyright(c) 2009-2011 Intel Corporation. All rights reserved.
+ *      http://www.apache.org/licenses/LICENSE-2.0
  *
- *  This program is free software; you can redistribute it and/or modify it
- *  under the terms of the GNU General Public License as published by the Free
- *  Software Foundation; version 2 of the License.
- *
- *  This program is distributed in the hope that it will be useful, but WITHOUT
- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
- *  more details.
- *
- *  You should have received a copy of the GNU General Public License along with
- *  this program; if not, write to the Free Software Foundation, Inc., 59
- *  Temple Place - Suite 330, Boston, MA  02111-1307, USA.
+ *  Unless required by applicable law or agreed to in writing, software
+ *  distributed under the License is distributed on an "AS IS" BASIS,
+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *  See the License for the specific language governing permissions and
+ *  limitations under the License.
 */
 
 #include <stdio.h>
@@ -37,8 +33,7 @@ const char CU_calibration_cmd[] = \
 		"/ w f 2\n" \
 		"/ w l 2\n" \
 		"/ t r h 0 7\n" \
-		"/ t b b 375 128 0\n" \
-		"/ t b t 1 0 0 0 0 0 0 0\n" \
+		"/ t b t 1 1 1 1 1 1 1 1\n" \
 		"/ q\n";
 
 #define LOG_TAG "wlan_prov"
-- 
1.7.9

