From e981296ddd2b350f0ff8376886d03bbda6baaf8f Mon Sep 17 00:00:00 2001
From: Quentin Casasnovas <quentinx.casasnovas@intel.com>
Date: Mon, 17 Dec 2012 20:07:29 +0100
Subject: [PATCH 69/78] wl12xx: Remove unused flag for recovery pending

BZ: 75240

During the last integration of TI drivers, a unecessary flag was put in. It is
never set in the driver so just removing it for the sake of clarity.

Change-Id: Ibbcd3eb6784186644377d735ac440199f2e02103
Signed-off-by: Quentin Casasnovas <quentinx.casasnovas@intel.com>
Reviewed-on: http://android.intel.com:8080/82497
Reviewed-by: Zayet, Aymen <aymen.zayet@intel.com>
Reviewed-by: Garcia, JeremieX <jeremiex.garcia@intel.com>
Reviewed-by: De Cesco, Jonathan <jonathan.de.cesco@intel.com>
Tested-by: Zurmely, PierreX <pierrex.zurmely@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
---
 wl12xx-compat/drivers/net/wireless/wl12xx/main.c |    8 --------
 1 files changed, 0 insertions(+), 8 deletions(-)

diff --git a/wl12xx-compat/drivers/net/wireless/wl12xx/main.c b/wl12xx-compat/drivers/net/wireless/wl12xx/main.c
index bd1e2b1..b1649ed 100644
--- a/wl12xx-compat/drivers/net/wireless/wl12xx/main.c
+++ b/wl12xx-compat/drivers/net/wireless/wl12xx/main.c
@@ -1486,14 +1486,12 @@ static void wl1271_recovery_work(struct work_struct *work)
 	 * to restart the HW.
 	 */
 	ieee80211_wake_queues(wl->hw);
-	clear_bit(WL1271_FLAG_RECOVERY_WORK_PENDING, &wl->flags);
 out_unlock:
 	wl->watchdog_recovery = false;
 	if (test_and_clear_bit(WL1271_FLAG_RECOVERY_IN_PROGRESS,
 			       &wl->flags))
 		wl1271_enable_interrupts(wl);
 	mutex_unlock(&wl->mutex);
-	clear_bit(WL1271_FLAG_RECOVERY_WORK_PENDING, &wl->flags);
 }
 
 static int wl1271_fw_wakeup(struct wl1271 *wl)
@@ -2249,12 +2247,6 @@ static int wl1271_op_suspend(struct ieee80211_hw *hw,
 	wl1271_debug(DEBUG_MAC80211, "mac80211 suspend wow=%d", !!wow);
 	WARN_ON(!wow);
 
-	/* Do not suspend when a fw recovery is in progress */
-	if (test_bit(WL1271_FLAG_RECOVERY_WORK_PENDING, &wl->flags)) {
-		wake_lock_timeout(&wl->wake_lock, 5*HZ);
-		return -EBUSY;
-	}
-
 	/* we want to perform the recovery before suspending */
 	if (test_bit(WL1271_FLAG_RECOVERY_IN_PROGRESS, &wl->flags)) {
 		wl1271_warning("postponing suspend to perform recovery");
-- 
1.7.9

