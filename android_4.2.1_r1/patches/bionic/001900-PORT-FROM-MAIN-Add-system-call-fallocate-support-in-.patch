From d0ed5557c85a0f544119c0814270a487b5389f0c Mon Sep 17 00:00:00 2001
From: Jin Wei <wei.a.jin@intel.com>
Date: Tue, 20 Nov 2012 13:35:11 +0800
Subject: [PATCH 19/38] [PORT FROM MAIN] Add system call fallocate support in
 bionic.

BZ: 30838

Use "syscall" routine to implement fallocate.

Change-Id: I773316426e3ff2e28175b1b95b51b2746bbdba44
Signed-off-by: Jin Wei <wei.a.jin@intel.com>
Reviewed-on: http://android.intel.com:8080/75099
Reviewed-by: lab_cactus <lab_cactus@intel.com>
Reviewed-by: Du, Chenyang <chenyang.du@intel.com>
Reviewed-by: Yao, Yong <yong.yao@intel.com>
Tested-by: Li, XiaojingX <xiaojingx.li@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
---
 libc/Android.mk         |    1 +
 libc/bionic/fallocate.c |   44 ++++++++++++++++++++++++++++++++++++++++++++
 libc/include/unistd.h   |    2 ++
 3 files changed, 47 insertions(+), 0 deletions(-)
 create mode 100644 libc/bionic/fallocate.c

diff --git a/libc/Android.mk b/libc/Android.mk
index 6a77deb..6ccd18a 100644
--- a/libc/Android.mk
+++ b/libc/Android.mk
@@ -298,6 +298,7 @@ libc_common_src_files := \
 	bionic/thread_atexit.c \
 	bionic/utime.c \
 	bionic/utmp.c \
+	bionic/fallocate.c \
 	netbsd/gethnamaddr.c \
 	netbsd/isc/ev_timers.c \
 	netbsd/isc/ev_streams.c \
diff --git a/libc/bionic/fallocate.c b/libc/bionic/fallocate.c
new file mode 100644
index 0000000..7139b30
--- /dev/null
+++ b/libc/bionic/fallocate.c
@@ -0,0 +1,44 @@
+/*
+ * Copyright (C) 2012 The Android Open Source Project
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *  * Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ *  * Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+ * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+ * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+ * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+ * SUCH DAMAGE.
+ */
+
+#include <sys/syscall.h>
+#include <errno.h>
+
+int fallocate(int fd, int mode, off_t offset, off_t len)
+{
+    /* Type of offset and len in kernel(sys_fallocate) are loff_t, which
+     * is 64 bit. But in android, off_t is always 32 bit. That means high
+     * 4 byte is zero-filled.
+     * And we can use "syscall" routine to piece together user data for kernel.
+     */
+    if (offset < 0 || len <= 0) {
+        errno = EINVAL;
+        return -1;
+    }
+    return  syscall(__NR_fallocate, fd, mode, offset, 0, len, 0);
+}
diff --git a/libc/include/unistd.h b/libc/include/unistd.h
index a6a6dbf..845fbf4 100644
--- a/libc/include/unistd.h
+++ b/libc/include/unistd.h
@@ -192,6 +192,8 @@ extern int cacheflush(long start, long end, long flags);
 extern pid_t tcgetpgrp(int fd);
 extern int   tcsetpgrp(int fd, pid_t _pid);
 
+extern int fallocate(int fd, int mode, off_t offset, off_t len);
+
 #if 0 /* MISSING FROM BIONIC */
 extern int execvpe(const char *, char * const *, char * const *);
 extern int execlpe(const char *, const char *, ...);
-- 
1.7.9

